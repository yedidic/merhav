{"version":3,"sources":["webpack:///./node_modules/chart.js/src/plugins/plugin.legend.js","webpack:///./node_modules/chart.js/src/helpers/helpers.options.js","webpack:///./node_modules/chart.js/src/core/core.animation.js","webpack:///./node_modules/chart.js/src/core/core.defaults.js","webpack:///./node_modules/chart.js/src/controllers/controller.line.js","webpack:///./node_modules/chart.js/src/platforms/platform.basic.js","webpack:///./node_modules/chart.js/src/core/core.datasetController.js","webpack:///./node_modules/chart.js/src/core/core.element.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/conversions.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bar.js","webpack:///./node_modules/chart.js/src/elements/element.point.js","webpack:///./node_modules/chartjs-color/node_modules/color-convert/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Bubble.js","webpack:///./node_modules/chart.js/src/scales/scale.time.js","webpack:///./node_modules/chart.js/src/helpers/index.js","webpack:///./node_modules/chart.js/src/helpers/helpers.canvas.js","webpack:///./node_modules/chart.js/src/charts/Chart.Scatter.js","webpack:///./node_modules/chart.js/src/charts/Chart.Doughnut.js","webpack:///./node_modules/chart.js/src/helpers/helpers.core.js","webpack:///./node_modules/color-name/index.js","webpack:///./node_modules/chart.js/src/elements/element.line.js","webpack:///./node_modules/chart.js/src/core/core.plugins.js","webpack:///./node_modules/chart.js/src/chart.js","webpack:///./node_modules/chart.js/src/controllers/controller.doughnut.js","webpack:///./node_modules/chart.js/src/elements/element.arc.js","webpack:///./node_modules/chart.js/src/scales/scale.linear.js","webpack:///./node_modules/chart.js/src/scales/scale.logarithmic.js","webpack:///./node_modules/chart.js/src/controllers/controller.bar.js","webpack:///./node_modules/chart.js/src/controllers/controller.radar.js","webpack:///./node_modules/chart.js/src/controllers/controller.bubble.js","webpack:///./node_modules/chart.js/src/core/core.scale.js","webpack:///./node_modules/chart.js/src/core/core.animations.js","webpack:///./node_modules/chart.js/src/core/core.layouts.js","webpack:///./node_modules/chart.js/src/core/core.ticks.js","webpack:///./node_modules/chart.js/src/platforms/platform.js","webpack:///./node_modules/chart.js/src/charts/Chart.Radar.js","webpack:///./node_modules/chart.js/src/plugins/index.js","webpack:///./node_modules/chartjs-color-string/color-string.js","webpack:///./node_modules/chart.js/src/plugins/plugin.title.js","webpack:///./node_modules/chart.js/src/core/core.interaction.js","webpack:///./node_modules/chart.js/src/core/core.helpers.js","webpack:///./node_modules/chart.js/src/scales/scale.linearbase.js","webpack:///./node_modules/chart.js/src/charts/Chart.PolarArea.js","webpack:///./node_modules/chart.js/src/platforms/platform.dom.js","webpack:///./node_modules/chart.js/src/core/core.scaleService.js","webpack:///./node_modules/chart.js/src/helpers/helpers.easing.js","webpack:///./node_modules/chart.js/src/plugins/plugin.filler.js","webpack:///./node_modules/chart.js/src/elements/index.js","webpack:///./node_modules/chart.js/src/core/core.tooltip.js","webpack:///./node_modules/chart.js/src/core/core.js","webpack:///./node_modules/chart.js/src/elements/element.rectangle.js","webpack:///./node_modules/chart.js/src/controllers/controller.scatter.js","webpack:///./node_modules/chart.js/src/controllers/controller.polarArea.js","webpack:///./node_modules/chart.js/src/core/core.controller.js","webpack:///./node_modules/chartjs-color/index.js","webpack:///./node_modules/chart.js/src/charts/Chart.Line.js","webpack:///./node_modules/chart.js/src/scales/scale.category.js","webpack:///./node_modules/chart.js/src/scales/scale.radialLinear.js"],"names":["defaults","__webpack_require__","Element","helpers","layouts","noop","getBoxWidth","labelOpts","fontSize","usePointStyle","Math","SQRT2","boxWidth","_set","legend","display","position","fullWidth","reverse","weight","onClick","e","legendItem","index","datasetIndex","ci","this","chart","meta","getDatasetMeta","hidden","data","datasets","update","onHover","labels","padding","generateLabels","isArray","map","dataset","i","text","label","fillStyle","backgroundColor","isDatasetVisible","lineCap","borderCapStyle","lineDash","borderDash","lineDashOffset","borderDashOffset","lineJoin","borderJoinStyle","lineWidth","borderWidth","strokeStyle","borderColor","pointStyle","legendCallback","push","id","length","join","Legend","extend","initialize","config","legendHitBoxes","doughnutMode","beforeUpdate","maxWidth","maxHeight","margins","me","beforeSetDimensions","setDimensions","afterSetDimensions","beforeBuildLabels","buildLabels","afterBuildLabels","beforeFit","fit","afterFit","afterUpdate","minSize","isHorizontal","width","left","right","height","top","bottom","paddingLeft","paddingTop","paddingRight","paddingBottom","options","legendItems","callback","filter","item","opts","ctx","globalDefault","global","valueOrDefault","defaultFontSize","fontStyle","defaultFontStyle","fontFamily","defaultFontFamily","labelFont","fontString","hitboxes","font","lineWidths","totalHeight","textAlign","textBaseline","each","measureText","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","max","draw","lineDefault","elements","line","legendWidth","cursor","fontColor","defaultFontColor","drawLegendBox","x","y","isNaN","save","defaultColor","isLineWidthZero","setLineDash","radius","offSet","centerX","centerY","canvas","drawPoint","strokeRect","fillRect","restore","fillText","textWidth","halfFontSize","xLeft","yMiddle","beginPath","moveTo","lineTo","stroke","handleEvent","type","changed","lh","hitBox","call","native","createNewLegendAndAttach","legendOpts","configure","addBox","module","exports","_element","beforeInit","mergeIf","removeBox","afterEvent","toLineHeight","value","size","matches","match","toPadding","t","r","b","l","isObject","resolve","inputs","context","ilen","undefined","currentStep","numSteps","easing","render","onAnimationProgress","onAnimationComplete","Object","defineProperty","prototype","get","set","scope","values","merge","showLines","spanGaps","hover","mode","scales","xAxes","yAxes","Chart","lineEnabled","showLine","controllers","DatasetController","datasetElementType","Line","dataElementType","Point","reset","custom","getMeta","points","lineElementOptions","scale","getScaleForId","yAxisID","getDataset","tension","lineTension","_scale","_datasetIndex","_children","_model","fill","steppedLine","stepped","cubicInterpolationMode","pivot","updateElement","updateBezierControlPoints","getPointBackgroundColor","point","pointBackgroundColor","valueAtIndexOrDefault","getPointBorderColor","pointBorderColor","getPointBorderWidth","pointBorderWidth","getPointRotation","pointRotation","rotation","yScale","xScale","xAxisID","pointOptions","pointRadius","hitRadius","pointHitRadius","getPixelForValue","NaN","getBasePixel","calculatePointY","_xScale","_yScale","_index","skip","ds","dsMeta","sumPos","sumNeg","stacked","stackedRightValue","Number","getRightValue","rightValue","model","controlPoints","area","chartArea","capControlPoint","pt","min","splineCurveMonotone","splineCurve","previousItem","nextItem","controlPointPreviousX","previous","controlPointPreviousY","controlPointNextX","next","controlPointNextY","capBezierPoints","halfBorderWidth","clipArea","unclipArea","setHoverStyle","element","$previousStyle","hoverBackgroundColor","pointHoverBackgroundColor","getHoverColor","hoverBorderColor","pointHoverBorderColor","hoverBorderWidth","pointHoverBorderWidth","hoverRadius","pointHoverRadius","acquireContext","getContext","arrayEvents","listenArrayEvents","array","listener","_chartjs","listeners","configurable","enumerable","forEach","key","method","charAt","toUpperCase","slice","base","args","Array","arguments","res","apply","object","unlistenArrayEvents","stub","indexOf","splice","linkScales","addElements","updateIndex","scaleID","destroy","_data","createMetaDataset","_chart","createMetaData","metaData","addElementAndReset","buildOrUpdateElements","resyncElements","transition","easingValue","removeHoverStyle","numMeta","numData","insertElements","start","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","inherits","color","interpolate","view","ease","actual","origin","target","c0","c1","keys","hasOwnProperty","valid","mix","rgbString","isFinite","configuration","_view","clone","_start","tooltipPosition","hasValue","isNumber","rgb2hsl","rgb","h","s","g","delta","rgb2hsv","v","rgb2hwb","w","rgb2cmyk","c","m","k","rgb2keyword","reverseKeywords","JSON","stringify","rgb2xyz","pow","z","rgb2lab","a","xyz","rgb2lch","lab2lch","hsl2rgb","hsl","t1","t2","t3","val","hsl2hsv","sv","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv","hi","floor","f","p","q","hsv2hsl","sl","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb","n","wh","bl","ratio","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab","y2","hr","atan2","PI","sqrt","lab2rgb","lch2lab","lch","cos","sin","lch2xyz","lch2rgb","keyword2rgb","keyword","cssKeywords","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Bar","xRange","mouseX","vm","abs","yRange","mouseY","inRange","inLabelRange","inXRange","inYRange","getCenterPoint","getArea","errMargin","conversions","convert","Converter","func","arg","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","Bubble","moment","window","Scale","scaleService","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","MAX_SAFE_INTEGER","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","items","hash","out","buildLookupTable","timestamps","distribution","time","pos","prev","curr","table","lookup","mid","i0","i1","lo","skey","sval","tkey","range","span","offset","momentify","parser","format","isValid","parse","input","isNullOrUndef","startOf","valueOf","determineStepSize","unit","capacity","factor","interval","milliseconds","ceil","determineUnitForAutoTicks","minUnit","determineUnitForFormatting","ticks","duration","diff","as","determineMajorUnit","generate","timeOpts","minor","major","stepSize","unitStepSize","weekday","isoWeekday","majorTicksEnabled","enabled","first","last","add","computeOffsets","upper","lower","ticksFromTimestamps","majorUnit","determineLabelFormat","momentDate","hasTime","defaultConfig","bounds","displayFormat","displayFormats","autoSkip","source","TimeScale","Error","mergeTicksOptions","console","warn","rawValue","determineDataLimits","j","jlen","timestamp","sort","endOf","_horizontal","_table","_timestamps","buildTicks","getLabelCapacity","_unit","_majorUnit","_offsets","_labelFormat","getLabelForIndex","tooltipFormat","tickFormatFunction","tick","formatOverride","formats","minorFormat","majorFormat","majorTime","majorTickOpts","tickOpts","formatter","userCallback","convertTicksToLabels","getPixelForOffset","getPixelForTick","getTicks","getValueForPixel","pixel","getLabelWidth","ticksOpts","tickLabelWidth","angle","toRadians","maxRotation","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","innerWidth","registerScaleType","clear","clearRect","roundedRect","epsilon","arcTo","closePath","rect","style","edgeLength","xOffset","yOffset","toString","drawImage","translate","rotate","arc","leftX","topY","sideSize","clip","flip","bezierCurveTo","drawRoundedRectangle","Scatter","Doughnut","uid","defaultValue","fn","thisArg","loopable","len","arrayEquals","a0","a1","v0","v1","klen","_merger","tval","_mergerIf","sources","merger","setFn","extensions","ChartElement","constructor","Surrogate","__super__","callCallback","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","globalDefaults","current","currentVM","globalOptionLineElements","lastDrawnIndex","_loop","plugins","_plugins","_cacheId","register","concat","plugin","unregister","idx","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","Animation","animationService","Interaction","platform","Ticks","Tooltip","Title","title","pluginService","PluginBase","canvasHelpers","layoutService","animation","animateRotate","animateScale","arcOpts","bw","cutoutPercentage","circumference","tooltips","callbacks","tooltipItem","dataLabel","doughnut","pie","Arc","getRingIndex","ringIndex","availableWidth","availableHeight","startAngle","endAngle","end","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","outerRadius","innerRadius","radiusLength","getVisibleDatasetCount","offsetX","offsetY","total","calculateTotal","animationOpts","calculateCircumference","elementOpts","arcs","hoverWidth","chartX","chartY","pointRelativePosition","getAngleFromPoint","distance","betweenAngles","withinRadius","halfAngle","halfRadius","centreAngle","rangeFromCentre","sA","eA","formatters","linear","LinearScale","LinearScaleBase","DEFAULT_MIN","DEFAULT_MAX","IDMatches","hasStacks","stack","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","handleTickRangeOptions","getTickLimit","maxTicks","maxTicksLimit","handleDirectionalChanges","innerDimension","ticksAsNumbers","generateTicks","generationOptions","dataRange","exp","significand","tickVal","log10","endExp","endSignificand","minNotZero","precision","lastTick","logarithmic","LogarithmicScale","tickValues","_getFirstTickValue","sign","firstTickValue","computeMinSampleSize","pixels","computeFitCategoryTraits","ruler","thickness","barThickness","stackCount","categoryPercentage","barPercentage","chunk","computeFlexCategoryTraits","percent","gridLines","offsetGridLines","axis","rectangle","borderSkipped","yLabel","datasetLabel","xLabel","bar","Rectangle","rects","_ruler","getRuler","rectangleOptions","updateElementGeometry","vscale","getValueScale","horizontal","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","getValueScaleId","getIndexScaleId","getIndexScale","_getStacks","stacks","getStackCount","getStackIndex","name","imeta","ivalue","controller","stackIndex","maxBarThickness","Infinity","horizontalBar","radar","pointElementOptions","pointPosition","getPointPositionForValue","xCenter","yCenter","dataPoint","bubble","_resolveElementOptions","dsIndex","getPixelForDecimal","_options","dataIndex","labelsFromTicks","getLineValue","lineValue","computeTextSize","longestText","parseFontOptions","family","parseLineHeight","lineHeight","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","beginAtZero","minRotation","mirror","autoSkipPadding","labelOffset","getPadding","_ticks","longestTextCache","beforeDataLimits","afterDataLimits","beforeBuildTicks","afterBuildTicks","beforeTickToLabelConversion","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","tickFont","labelRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","scaleLabelOpts","gridLineOpts","isFullWidth","scaleLabelLineHeight","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","longestLabelWidth","labelHeight","firstLabelWidth","lastLabelWidth","handleMargins","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","skipRatio","shouldSkip","optionTicks","tickCount","labelRotationRadians","longestRotatedLabel","result","optionMajorTicks","isRotated","tickFontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","scaleLabelFont","itemsToDraw","axisWidth","xTickStart","xTickEnd","yTickStart","yTickEnd","lineColor","tx1","ty1","tx2","ty2","x1","y1","x2","labelX","labelY","zeroLineIndex","labelYOffset","xLineValue","aliasPixel","labelXOffset","isLeft","yLineValue","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","lineCount","scaleLabelX","scaleLabelY","halfLineHeight","onProgress","onComplete","frameDuration","animations","dropFrames","request","addAnimation","lazy","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","startTime","Date","now","framesToDrop","advance","endTime","filterByPosition","where","sortByWeight","_tmpIndex_","boxes","layoutItem","prop","props","layoutOptions","layout","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","chartWidth","chartHeight","chartAreaWidth","chartAreaHeight","verticalBoxWidth","horizontalBoxHeight","maxChartAreaWidth","maxChartAreaHeight","minBoxSizes","getMinimumBoxSize","maxHorizontalLeftPadding","maxHorizontalRightPadding","maxVerticalTopPadding","maxVerticalBottomPadding","horizontalBox","boxPadding","verticalBox","totalLeftBoxesWidth","totalRightBoxesWidth","totalTopBoxesHeight","totalBottomBoxesHeight","fitBox","box","finalFitVerticalBox","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBoxSize","findNextWhere","minBox","scaleMargin","tickValue","logDelta","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","remain","basic","dom","implementation","_enabled","releaseContext","addEventListener","removeEventListener","Radar","filler","colorNames","getRgba","string","abbr","hex","rgba","per","parseInt","parseFloat","getHsla","alpha","getHwb","getRgb","getHsl","hsla","getAlpha","hexString","hexDouble","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","num","str","textSize","titleX","titleY","titleFont","createNewTitleBlockAndAttach","titleOpts","titleBlock","getRelativePosition","parseVisibleItems","handler","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","modes","single","x-axis","nearest","sizeA","sizeB","ret","intersectsItem","parseMaxStyle","styleValue","node","parentProperty","valueInPixels","parentNode","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","document","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","configMerge","scaleMerge","getScaleDefaults","slen","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","almostEquals","almostWhole","rounded","reduce","NEGATIVE_INFINITY","exponent","log","LOG10E","powerOf10","isPowerOf10","degrees","toDegrees","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","distanceBetweenPoints","pixelWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","loop","niceNum","niceFraction","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getStyle","currentDevicePixelRatio","getConstraintWidth","getConstraintHeight","_calculatePadding","container","parentDimension","parent","host","getMaximumWidth","clientWidth","cw","getMaximumHeight","clientHeight","ch","el","property","currentStyle","getPropertyValue","retinaScale","forceRatio","pixelRatio","devicePixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","error","colorValue","CanvasPattern","saturate","darken","spacing","niceRange","niceMin","niceMax","numSpaces","minSign","maxSign","setMin","suggestedMin","setMax","suggestedMax","numericGeneratorOptions","fixedStepSize","PolarArea","EXPANDO_KEY","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","initCanvas","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","supportsEventListenerOptions","supports","eventListenerOptions","passive","createEvent","nativeEvent","fromNativeEvent","event","throttled","ticking","createResizer","resizer","createElement","cls","maxSize","cssText","className","innerHTML","expand","childNodes","shrink","_reset","scrollLeft","scrollTop","onScroll","bind","watchForRender","expando","proxy","renderProxy","animationName","reflow","offsetParent","classList","unwatchForRender","remove","addResizeListener","insertBefore","firstChild","removeResizeListener","removeChild","injectCSS","css","_style","setAttribute","getElementsByTagName","appendChild","createTextNode","keyframes","getElementById","removeAttribute","proxies","addEvent","removeEvent","constructors","scaleConstructor","scaleDefaults","getScaleConstructor","updateScaleDefaults","additions","addScalesToLayout","effects","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","easingEffects","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","getBasePosition","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","doFill","mapper","p0","p1","d0","d1","afterDatasetsUpdate","$filler","beforeDatasetDraw","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","cornerRadius","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","d","tp","mergeOpacity","colorString","opacity","pushOrConcat","toPush","splitNewlines","String","split","createTooltipItem","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","legendColorBackground","getTooltipSize","tooltip","body","combinedBodyLength","bodyItem","before","lines","after","titleLineCount","footerLineCount","widthPadding","maxLineWidth","determineAlignment","lf","rf","olf","orf","yf","midX","midY","getBackgroundPoint","alignment","paddingAndSize","radiusAndPadding","getBeforeAfterBodyLines","_lastActive","getTitle","getBeforeBody","getBody","bodyItems","getAfterBody","getFooter","existingModel","active","_active","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","drawBody","xLinePadding","fillLineOfText","drawColorBoxes","textColor","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","getElementsAtEventForMode","responsive","responsiveAnimationDuration","maintainAspectRatio","events","animationDuration","construct","isVertical","getBarBounds","halfWidth","halfHeight","signX","signY","barSize","halfStroke","borderLeft","borderRight","borderTop","borderBottom","corners","borders","startCorner","cornerAt","corner","scatter","angleLines","circular","pointLabels","polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","initConfig","updateConfig","newOptions","ensureScalesHaveIDs","buildOrUpdateScales","positionIsHorizontal","types","instances","_bufferedRender","bindEvents","resize","initToolTip","stop","silent","newWidth","newHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","obj","dtype","dposition","isDefault","scaleType","scaleClass","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementAtEvent","getElementsAtEvent","getElementsAtXAxis","getDatasetAtEvent","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","Controller","Color","lightness","whiteness","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","yiq","light","negate","lighten","desaturate","whiten","blacken","greyscale","clearer","opaquer","mixinColor","color1","w1","w2","toJSON","spaces","maxes","capped","chans","sname","svalues","DatasetScale","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getPointLabelFontOptions","pointLabelOptions","measureLabelSize","determineLimits","fitWithPointLabels","plFont","largestPossibleRadius","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","hLimits","vLimits","setReductions","drawingArea","setCenterPoint","getTextAlignForAngle","adjustPointPositionForLabelHeight","drawPointLabels","angleLineOpts","pointLabelOpts","outerDistance","outerPosition","pointLabelPosition","pointLabelFontColor","drawRadiusLine","numberOrZero","param","LinearRadialScale","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","tickFontStyle","tickFontFamily","tickLabelFont","yCenterOffset"],"mappings":"kHAEA,IAAAA,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtBI,EAAAF,EAAAE,KAmFA,SAAAC,EAAAC,EAAAC,GACA,OAAAD,EAAAE,cACAD,EAAAE,KAAAC,MACAJ,EAAAK,SApFAZ,EAAAa,KAAA,UACAC,QACAC,SAAA,EACAC,SAAA,MACAC,WAAA,EACAC,SAAA,EACAC,OAAA,IAGAC,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAAD,EAAAE,aACAC,EAAAC,KAAAC,MACAC,EAAAH,EAAAI,eAAAN,GAGAK,EAAAE,OAAA,OAAAF,EAAAE,QAAAL,EAAAM,KAAAC,SAAAT,GAAAO,OAAA,KAGAL,EAAAQ,UAGAC,QAAA,KAEAC,QACAvB,SAAA,GACAwB,QAAA,GAYAC,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAA5B,EAAAmC,QAAAP,EAAAC,UAAAD,EAAAC,SAAAO,IAAA,SAAAC,EAAAC,GACA,OACAC,KAAAF,EAAAG,MACAC,UAAAzC,EAAAmC,QAAAE,EAAAK,iBAAAL,EAAAK,gBAAA,GAAAL,EAAAK,gBACAf,QAAAH,EAAAmB,iBAAAL,GACAM,QAAAP,EAAAQ,eACAC,SAAAT,EAAAU,WACAC,eAAAX,EAAAY,iBACAC,SAAAb,EAAAc,gBACAC,UAAAf,EAAAgB,YACAC,YAAAjB,EAAAkB,YACAC,WAAAnB,EAAAmB,WAGAnC,aAAAiB,IAEKf,YAKLkC,eAAA,SAAAjC,GACA,IAAAe,KACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aACA,QAAArB,EAAA,EAAiBA,EAAAd,EAAAI,KAAAC,SAAA+B,OAAgCtB,IACjDC,EAAAmB,KAAA,qCAAAlC,EAAAI,KAAAC,SAAAS,GAAAI,gBAAA,aACAlB,EAAAI,KAAAC,SAAAS,GAAAE,OACAD,EAAAmB,KAAAlC,EAAAI,KAAAC,SAAAS,GAAAE,OAEAD,EAAAmB,KAAA,SAGA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,OAmBA,IAAAC,EAAA/D,EAAAgE,QAEAC,WAAA,SAAAC,GACAjE,EAAA+D,OAAAxC,KAAA0C,GAGA1C,KAAA2C,kBAGA3C,KAAA4C,cAAA,GAOAC,aAAAlE,EACA4B,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IAAAC,EAAAjD,KA0BA,OAvBAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,UAGAC,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAEAH,EAAAI,oBACAJ,EAAAK,cACAL,EAAAM,mBAGAN,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAEAD,YAAAhF,EAIAuE,oBAAAvE,EACAwE,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,EAGAtB,EAAAW,SACAE,MAAA,EACAG,OAAA,IAGAb,mBAAAzE,EAIA0E,kBAAA1E,EACA2E,YAAA,WACA,IAAAL,EAAAjD,KACAnB,EAAAoE,EAAAuB,QAAA/D,WACAgE,EAAAhG,EAAAiG,SAAA7F,EAAA8B,gBAAAsC,EAAAhD,OAAAgD,OAEApE,EAAA8F,SACAF,IAAAE,OAAA,SAAAC,GACA,OAAA/F,EAAA8F,OAAAC,EAAA3B,EAAAhD,MAAAI,SAIA4C,EAAAuB,QAAAhF,SACAiF,EAAAjF,UAGAyD,EAAAwB,eAEAlB,iBAAA5E,EAIA6E,UAAA7E,EACA8E,IAAA,WACA,IAAAR,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACApB,EAAAwF,EAAAxF,QAEAyF,EAAA7B,EAAA6B,IAEAC,EAAAzG,EAAA0G,OACAC,EAAAxG,EAAAwG,eACAnG,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAGAI,EAAAxC,EAAAN,kBAEAiB,EAAAX,EAAAW,QACAC,EAAAZ,EAAAY,eAWA,GATAA,GACAD,EAAAE,MAAAb,EAAAH,SACAc,EAAAK,OAAA5E,EAAA,OAEAuE,EAAAE,MAAAzE,EAAA,KACAuE,EAAAK,OAAAhB,EAAAF,WAIA1D,EAGA,GAFAyF,EAAAY,KAAAH,EAEA1B,EAAA,CAIA,IAAA8B,EAAA1C,EAAA0C,YAAA,GACAC,EAAA3C,EAAAwB,YAAApC,OAAAvD,EAAAD,EAAA,UAEAiG,EAAAe,UAAA,OACAf,EAAAgB,aAAA,MAEArH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAgF,EAAA5E,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAEA6B,IAAAtD,OAAA,GAAAyB,EAAAjF,EAAA6B,SAAAuC,EAAAa,QACA8B,GAAA9G,EAAAD,EAAA,QACA8G,IAAAtD,QAAAY,EAAAc,MAIA0B,EAAA1E,IACAgD,KAAA,EACAG,IAAA,EACAJ,QACAG,OAAAnF,GAGA6G,IAAAtD,OAAA,IAAAyB,EAAAjF,EAAA6B,UAGAkD,EAAAK,QAAA2B,MAEI,CACJ,IAAAK,EAAApH,EAAA6B,QACAwF,EAAAjD,EAAAiD,gBACAC,EAAAtH,EAAA6B,QACA0F,EAAA,EACAC,EAAA,EACAC,EAAAxH,EAAAmH,EAEAxH,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAA7B,EAAAN,EAAAC,EAAAC,GACAyH,EAAArH,EAAAJ,EAAA,EAAAgG,EAAAkB,YAAApG,EAAAoB,MAAA8C,MAGAuC,EAAAC,EAAA1C,EAAAK,SACAkC,GAAAC,EAAAvH,EAAA6B,QACAwF,EAAA/D,KAAAiE,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAApH,KAAAwH,IAAAJ,EAAAG,GACAF,GAAAC,EAGAb,EAAA1E,IACAgD,KAAA,EACAG,IAAA,EACAJ,MAAAyC,EACAtC,OAAAnF,KAIAqH,GAAAC,EACAF,EAAA/D,KAAAiE,GACAxC,EAAAE,OAAAqC,EAIAlD,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAEAP,SAAA/E,EAGAkF,aAAA,WACA,cAAA7D,KAAAwE,QAAAlF,UAAA,WAAAU,KAAAwE,QAAAlF,UAIAmH,KAAA,WACA,IAAAxD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA3F,EAAAgG,EAAApE,OACAsE,EAAAzG,EAAA0G,OACA0B,EAAA3B,EAAA4B,SAAAC,KACAC,EAAA5D,EAAAa,MACA6B,EAAA1C,EAAA0C,WAEA,GAAAd,EAAAxF,QAAA,CACA,IAOAyH,EAPAhC,EAAA7B,EAAA6B,IACAG,EAAAxG,EAAAwG,eACA8B,EAAA9B,EAAApG,EAAAkI,UAAAhC,EAAAiC,kBACAlI,EAAAmG,EAAApG,EAAAC,SAAAiG,EAAAG,iBACAC,EAAAF,EAAApG,EAAAsG,UAAAJ,EAAAK,kBACAC,EAAAJ,EAAApG,EAAAwG,WAAAN,EAAAO,mBACAC,EAAA9G,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAIAP,EAAAe,UAAA,OACAf,EAAAgB,aAAA,SACAhB,EAAAjD,UAAA,GACAiD,EAAA/C,YAAAgF,EACAjC,EAAA5D,UAAA6F,EACAjC,EAAAY,KAAAH,EAEA,IAAArG,EAAAN,EAAAC,EAAAC,GACA2G,EAAAxC,EAAAN,eAGAsE,EAAA,SAAAC,EAAAC,EAAAvH,GACA,KAAAwH,MAAAlI,OAAA,IAKA4F,EAAAuC,OAEAvC,EAAA5D,UAAA+D,EAAArF,EAAAsB,UAAA6D,EAAAuC,cACAxC,EAAAzD,QAAA4D,EAAArF,EAAAyB,QAAAqF,EAAApF,gBACAwD,EAAArD,eAAAwD,EAAArF,EAAA6B,eAAAiF,EAAAhF,kBACAoD,EAAAnD,SAAAsD,EAAArF,EAAA+B,SAAA+E,EAAA9E,iBACAkD,EAAAjD,UAAAoD,EAAArF,EAAAiC,UAAA6E,EAAA5E,aACAgD,EAAA/C,YAAAkD,EAAArF,EAAAmC,YAAAgD,EAAAuC,cACA,IAAAC,EAAA,IAAAtC,EAAArF,EAAAiC,UAAA6E,EAAA5E,aAOA,GALAgD,EAAA0C,aAEA1C,EAAA0C,YAAAvC,EAAArF,EAAA2B,SAAAmF,EAAAlF,aAGAqD,EAAApE,QAAAoE,EAAApE,OAAA1B,cAAA,CAGA,IAAA0I,EAAA3I,EAAAE,KAAAC,MAAA,EACAyI,EAAAD,EAAAzI,KAAAC,MACA0I,EAAAT,EAAAQ,EACAE,EAAAT,EAAAO,EAGAjJ,EAAAoJ,OAAAC,UAAAhD,EAAAlF,EAAAqC,WAAAwF,EAAAE,EAAAC,QAGAL,GACAzC,EAAAiD,WAAAb,EAAAC,EAAAjI,EAAAJ,GAEAgG,EAAAkD,SAAAd,EAAAC,EAAAjI,EAAAJ,GAGAgG,EAAAmD,YAEAC,EAAA,SAAAhB,EAAAC,EAAAvH,EAAAuI,GACA,IAAAC,EAAAtJ,EAAA,EACAuJ,EAAAnJ,EAAAkJ,EAAAlB,EACAoB,EAAAnB,EAAAiB,EAEAtD,EAAAoD,SAAAtI,EAAAoB,KAAAqH,EAAAC,GAEA1I,EAAAQ,SAEA0E,EAAAyD,YACAzD,EAAAjD,UAAA,EACAiD,EAAA0D,OAAAH,EAAAC,GACAxD,EAAA2D,OAAAJ,EAAAF,EAAAG,GACAxD,EAAA4D,WAKA7E,EAAAZ,EAAAY,eAEAiD,EADAjD,GAEAqD,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAA,MACAwB,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,IAIAM,EAAAjE,EAAAc,KAAAlF,EAAA6B,QACAyG,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAkG,KAAA,GAIA,IAAAN,EAAAxH,EAAAD,EAAA6B,QACAjC,EAAAsH,KAAA9C,EAAAwB,YAAA,SAAA7E,EAAAmB,GACA,IAAAoH,EAAArD,EAAAkB,YAAApG,EAAAoB,MAAA8C,MACAA,EAAA5E,EAAAJ,EAAA,EAAAqJ,EACAjB,EAAAJ,EAAAI,EACAC,EAAAL,EAAAK,EAEAtD,EACAqD,EAAApD,GAAA+C,IACAM,EAAAL,EAAAK,GAAAb,EACAQ,EAAAF,OACAM,EAAAJ,EAAAI,EAAAjE,EAAAc,MAAA8C,EAAAlB,EAAAmB,EAAAF,OAAA,GAEKO,EAAAb,EAAArD,EAAAkB,SACL+C,EAAAJ,EAAAI,IAAAjE,EAAAiD,aAAAY,EAAAF,MAAA/H,EAAA6B,QACAyG,EAAAL,EAAAK,EAAAlE,EAAAiB,IAAArF,EAAA6B,QACAoG,EAAAF,QAGAK,EAAAC,EAAAC,EAAAvH,GAEA6F,EAAA1E,GAAAgD,KAAAmD,EACAzB,EAAA1E,GAAAmD,IAAAiD,EAGAe,EAAAhB,EAAAC,EAAAvH,EAAAuI,GAEAtE,EACAiD,EAAAI,GAAApD,EAAAjF,EAAA,QAEAiI,EAAAK,GAAAb,MAaAqC,YAAA,SAAAhJ,GACA,IAAAsD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAoE,EAAA,YAAAjJ,EAAAiJ,KAAA,QAAAjJ,EAAAiJ,KACAC,GAAA,EAEA,iBAAAD,GACA,IAAA/D,EAAArE,QACA,WAEG,cAAAoI,EAKH,OAJA,IAAA/D,EAAAnF,QACA,OAOA,IAAAwH,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,EAEA,GAAAD,GAAAjE,EAAAc,MAAAmD,GAAAjE,EAAAe,OAAAmD,GAAAlE,EAAAiB,KAAAiD,GAAAlE,EAAAkB,OAGA,IADA,IAAA2E,EAAA7F,EAAAN,eACA5B,EAAA,EAAkBA,EAAA+H,EAAAzG,SAAetB,EAAA,CACjC,IAAAgI,EAAAD,EAAA/H,GAEA,GAAAmG,GAAA6B,EAAAhF,MAAAmD,GAAA6B,EAAAhF,KAAAgF,EAAAjF,OAAAqD,GAAA4B,EAAA7E,KAAAiD,GAAA4B,EAAA7E,IAAA6E,EAAA9E,OAAA,CAEA,aAAA2E,EAAA,CAEA/D,EAAAnF,QAAAsJ,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,MACM,iBAAAD,EAAA,CAEN/D,EAAArE,QAAAwI,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAwB,YAAA1D,IACA8H,GAAA,EACA,QAMA,OAAAA,KAIA,SAAAK,EAAAjJ,EAAAkJ,GACA,IAAA/J,EAAA,IAAAmD,GACAuC,IAAA7E,EAAA6E,IACAN,QAAA2E,EACAlJ,UAGAvB,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACAzK,EAAA2K,OAAApJ,EAAAb,GACAa,EAAAb,SAGAkK,EAAAC,SACAnH,GAAA,SASAoH,SAAAjH,EAEAkH,WAAA,SAAAxJ,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OAEA+J,GACAD,EAAAjJ,EAAAkJ,IAIAtG,aAAA,SAAA5C,GACA,IAAAkJ,EAAAlJ,EAAAuE,QAAApF,OACAA,EAAAa,EAAAb,OAEA+J,GACA1K,EAAAiL,QAAAP,EAAA7K,EAAA0G,OAAA5F,QAEAA,GACAV,EAAA0K,UAAAnJ,EAAAb,EAAA+J,GACA/J,EAAAoF,QAAA2E,GAEAD,EAAAjJ,EAAAkJ,IAEG/J,IACHV,EAAAiL,UAAA1J,EAAAb,UACAa,EAAAb,SAIAwK,WAAA,SAAA3J,EAAAN,GACA,IAAAP,EAAAa,EAAAb,OACAA,GACAA,EAAAuJ,YAAAhJ,0CC1jBA,IAAAlB,EAAcF,EAAQ,QAMtB+K,EAAAC,SASAM,aAAA,SAAAC,EAAAC,GACA,IAAAC,GAAA,GAAAF,GAAAG,MAAA,wCACA,IAAAD,GAAA,WAAAA,EAAA,GACA,WAAAD,EAKA,OAFAD,GAAAE,EAAA,GAEAA,EAAA,IACA,SACA,OAAAF,EACA,QACAA,GAAA,IACA,MACA,QACA,MAGA,OAAAC,EAAAD,GAUAI,UAAA,SAAAJ,GACA,IAAAK,EAAAC,EAAAC,EAAAC,EAWA,OATA7L,EAAA8L,SAAAT,IACAK,GAAAL,EAAA5F,KAAA,EACAkG,GAAAN,EAAA9F,OAAA,EACAqG,GAAAP,EAAA3F,QAAA,EACAmG,GAAAR,EAAA/F,MAAA,GAEAoG,EAAAC,EAAAC,EAAAC,GAAAR,GAAA,GAIA5F,IAAAiG,EACAnG,MAAAoG,EACAjG,OAAAkG,EACAtG,KAAAuG,EACArG,OAAAkG,EAAAE,EACAvG,MAAAwG,EAAAF,IAaAI,QAAA,SAAAC,EAAAC,EAAA7K,GACA,IAAAkB,EAAA4J,EAAAb,EAEA,IAAA/I,EAAA,EAAA4J,EAAAF,EAAApI,OAAmCtB,EAAA4J,IAAU5J,EAE7C,GADA+I,EAAAW,EAAA1J,QACA6J,IAAAd,SAGAc,IAAAF,GAAA,oBAAAZ,IACAA,IAAAY,SAEAE,IAAA/K,GAAApB,EAAAmC,QAAAkJ,KACAA,IAAAjK,SAEA+K,IAAAd,GACA,OAAAA,yCCzFA,IAAAtL,EAAcD,EAAQ,QAEtBgL,EAAAD,EAAAC,QAAA/K,EAAAgE,QACAvC,MAAA,KACA4K,YAAA,EACAC,SAAA,GACAC,OAAA,GACAC,OAAA,KAEAC,oBAAA,KACAC,oBAAA,OAWAC,OAAAC,eAAA7B,EAAA8B,UAAA,mBACAC,IAAA,WACA,OAAAtL,QAUAmL,OAAAC,eAAA7B,EAAA8B,UAAA,iBACAC,IAAA,WACA,OAAAtL,KAAAC,OAEAsL,IAAA,SAAAzB,GACA9J,KAAAC,MAAA6J,0CCtCA,IAAArL,EAAcF,EAAQ,QAEtB+K,EAAAC,SAIApK,KAAA,SAAAqM,EAAAC,GACA,OAAAhN,EAAAiN,MAAA1L,KAAAwL,KAAAxL,KAAAwL,OAAuDC,0CCPvD,IAAAnN,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,QACAwM,WAAA,EACAC,UAAA,EAEAC,OACAC,KAAA,SAGAC,QACAC,QACApD,KAAA,WACAxG,GAAA,aAEA6J,QACArD,KAAA,SACAxG,GAAA,gBAKAkH,EAAAC,QAAA,SAAA2C,GAEA,SAAAC,EAAArL,EAAA0D,GACA,OAAA/F,EAAAwG,eAAAnE,EAAAsL,SAAA5H,EAAAmH,WAGAO,EAAAG,YAAAzF,KAAAsF,EAAAI,kBAAA9J,QAEA+J,mBAAA5F,EAAA6F,KAEAC,gBAAA9F,EAAA+F,MAEAnM,OAAA,SAAAoM,GACA,IAOA5L,EAAA4J,EAAAiC,EAPA3J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAjG,EAAA1G,EAAAY,QACAgM,EAAA5M,EAAAG,SACAmE,EAAAvB,EAAAhD,MAAAuE,QACAuI,EAAAvI,EAAAmC,SAAAC,KACAoG,EAAA/J,EAAAgK,cAAA/M,EAAAgN,SAEApM,EAAAmC,EAAAkK,aACAf,EAAAD,EAAArL,EAAA0D,GAwCA,IArCA4H,IACAQ,EAAAhG,EAAAgG,gBAGAhC,IAAA9J,EAAAsM,cAAAxC,IAAA9J,EAAAuM,cACAvM,EAAAuM,YAAAvM,EAAAsM,SAIAxG,EAAA0G,OAAAN,EACApG,EAAA2G,cAAAtK,EAAApD,MAEA+G,EAAA4G,UAAAV,EAEAlG,EAAA6G,QAKA7B,SAAA9K,EAAA8K,SAAA9K,EAAA8K,SAAApH,EAAAoH,SACAwB,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAAN,EAAAK,SACAjM,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAAL,EAAAK,iBAAA4L,EAAA5L,gBACAW,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAhB,EAAAgB,aAAAiL,EAAAjL,YACAE,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAlB,EAAAkB,aAAA+K,EAAA/K,YACAV,eAAAsL,EAAAtL,eAAAsL,EAAAtL,eAAAR,EAAAQ,gBAAAyL,EAAAzL,eACAE,WAAAoL,EAAApL,WAAAoL,EAAApL,WAAAV,EAAAU,YAAAuL,EAAAvL,WACAE,iBAAAkL,EAAAlL,iBAAAkL,EAAAlL,iBAAAZ,EAAAY,kBAAAqL,EAAArL,iBACAE,gBAAAgL,EAAAhL,gBAAAgL,EAAAhL,gBAAAd,EAAAc,iBAAAmL,EAAAnL,gBACA8L,KAAAd,EAAAc,KAAAd,EAAAc,UAAA9C,IAAA9J,EAAA4M,KAAA5M,EAAA4M,KAAAX,EAAAW,KACAC,YAAAf,EAAAe,YAAAf,EAAAe,YAAAlP,EAAAwG,eAAAnE,EAAA6M,YAAAZ,EAAAa,SACAC,uBAAAjB,EAAAiB,uBAAAjB,EAAAiB,uBAAApP,EAAAwG,eAAAnE,EAAA+M,uBAAAd,EAAAc,yBAGAjH,EAAAkH,SAIA/M,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAoCtB,EAAA4J,IAAU5J,EAC9CkC,EAAA8K,cAAAjB,EAAA/L,KAAA4L,GAQA,IALAP,GAAA,IAAAxF,EAAA6G,OAAAL,SACAnK,EAAA+K,4BAIAjN,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAoCtB,EAAA4J,IAAU5J,EAC9C+L,EAAA/L,GAAA+M,SAIAG,wBAAA,SAAAC,EAAArO,GACA,IAAAsB,EAAAnB,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAA/M,gBACAL,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,WAUA,OARAA,EAAAzL,gBACAA,EAAAyL,EAAAzL,gBACIL,EAAAqN,qBACJhN,EAAA1C,EAAA2P,sBAAAtN,EAAAqN,qBAAAtO,EAAAsB,GACIL,EAAAK,kBACJA,EAAAL,EAAAK,iBAGAA,GAGAkN,oBAAA,SAAAH,EAAArO,GACA,IAAAmC,EAAAhC,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAlM,YACAlB,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,WAUA,OARAA,EAAA5K,YACAA,EAAA4K,EAAA5K,YACIlB,EAAAwN,iBACJtM,EAAAvD,EAAA2P,sBAAAtN,EAAAwN,iBAAAzO,EAAAmC,GACIlB,EAAAkB,cACJA,EAAAlB,EAAAkB,aAGAA,GAGAuM,oBAAA,SAAAL,EAAArO,GACA,IAAAiC,EAAA9B,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAApM,YACAhB,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,WAUA,OARAxF,MAAAwF,EAAA9K,cAEIsF,MAAAtG,EAAA0N,mBAAA/P,EAAAmC,QAAAE,EAAA0N,kBACJ1M,EAAArD,EAAA2P,sBAAAtN,EAAA0N,iBAAA3O,EAAAiC,GACIsF,MAAAtG,EAAAgB,eACJA,EAAAhB,EAAAgB,aAJAA,EAAA8K,EAAA9K,YAOAA,GAGA2M,iBAAA,SAAAP,EAAArO,GACA,IAAA6O,EAAA1O,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAS,SACA7N,EAAAd,KAAAmN,aACAP,EAAAsB,EAAAtB,WAOA,OALAxF,MAAAwF,EAAA+B,UAEIvH,MAAAtG,EAAA4N,iBAAAjQ,EAAAmC,QAAAE,EAAA4N,iBACJA,EAAAjQ,EAAA2P,sBAAAtN,EAAA4N,cAAA7O,EAAA6O,IAFAA,EAAA9B,EAAA+B,SAIAD,GAGAX,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IASAzF,EAAAC,EATAlE,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAD,EAAAsB,EAAAtB,WACA9L,EAAAmC,EAAAkK,aACArN,EAAAmD,EAAApD,MACAiK,EAAAhJ,EAAAT,KAAAR,GACA+O,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA2B,EAAA5L,EAAAgK,cAAA/M,EAAA4O,SACAC,EAAA9L,EAAAhD,MAAAuE,QAAAmC,SAAAuH,WAIAtD,IAAA9J,EAAA2G,aAAAmD,IAAA9J,EAAAkO,cACAlO,EAAAkO,YAAAlO,EAAA2G,aAEAmD,IAAA9J,EAAAmO,gBAAArE,IAAA9J,EAAAoO,iBACApO,EAAAoO,eAAApO,EAAAmO,WAGA/H,EAAA2H,EAAAM,iBAAA,kBAAArF,IAAAsF,IAAAvP,EAAAC,GACAqH,EAAAwF,EAAAiC,EAAAS,eAAApM,EAAAqM,gBAAAxF,EAAAjK,EAAAC,GAGAoO,EAAAqB,QAAAV,EACAX,EAAAsB,QAAAZ,EACAV,EAAAX,cAAAzN,EACAoO,EAAAuB,OAAA5P,EAGAqO,EAAAT,QACAvG,IACAC,IACAuI,KAAA9C,EAAA8C,MAAAtI,MAAAF,IAAAE,MAAAD,GAEAM,OAAAmF,EAAAnF,QAAAhJ,EAAA2P,sBAAAtN,EAAAkO,YAAAnP,EAAAkP,EAAAtH,QACAxF,WAAA2K,EAAA3K,YAAAxD,EAAA2P,sBAAAtN,EAAAmB,WAAApC,EAAAkP,EAAA9M,YACA0M,SAAA1L,EAAAwL,iBAAAP,EAAArO,GACAsB,gBAAA8B,EAAAgL,wBAAAC,EAAArO,GACAmC,YAAAiB,EAAAoL,oBAAAH,EAAArO,GACAiC,YAAAmB,EAAAsL,oBAAAL,EAAArO,GACAuN,QAAAlN,EAAAY,QAAA2M,OAAAvN,EAAAY,QAAA2M,OAAAL,QAAA,EACAO,cAAAzN,EAAAY,QAAA2M,QAAAvN,EAAAY,QAAA2M,OAAAE,YAEAsB,UAAArC,EAAAqC,WAAAxQ,EAAA2P,sBAAAtN,EAAAoO,eAAArP,EAAAkP,EAAAE,aAIAK,gBAAA,SAAAxF,EAAAjK,EAAAC,GACA,IAMAiB,EAAA4O,EAAAC,EANA3M,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACA+B,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA2C,EAAA,EACAC,EAAA,EAGA,GAAAlB,EAAApK,QAAAuL,QAAA,CACA,IAAAhP,EAAA,EAAeA,EAAAjB,EAAkBiB,IAGjC,GAFA4O,EAAA1P,EAAAI,KAAAC,SAAAS,GACA6O,EAAA3P,EAAAE,eAAAY,GACA,SAAA6O,EAAAhH,MAAAgH,EAAA1C,UAAA0B,EAAAxM,IAAAnC,EAAAmB,iBAAAL,GAAA,CACA,IAAAiP,EAAAC,OAAArB,EAAAsB,cAAAP,EAAAtP,KAAAR,KACAmQ,EAAA,EACAF,GAAAE,GAAA,EAEAH,GAAAG,GAAA,EAKA,IAAAG,EAAAF,OAAArB,EAAAsB,cAAApG,IACA,OAAAqG,EAAA,EACAvB,EAAAO,iBAAAW,EAAAK,GAEAvB,EAAAO,iBAAAU,EAAAM,GAGA,OAAAvB,EAAAO,iBAAArF,IAGAkE,0BAAA,WACA,IAIAjN,EAAA4J,EAAAuD,EAAAkC,EAAAC,EAJApN,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAyD,EAAArN,EAAAhD,MAAAsQ,UACAzD,EAAA5M,EAAAG,SAUA,SAAAmQ,EAAAC,EAAAC,EAAAlK,GACA,OAAAxH,KAAAwH,IAAAxH,KAAA0R,IAAAD,EAAAjK,GAAAkK,GAGA,GAVAxQ,EAAAY,QAAA2M,OAAA7B,WACAkB,IAAAnI,OAAA,SAAA8L,GACA,OAAAA,EAAAhD,OAAAiC,QAQA,aAAAxP,EAAAY,QAAA2M,OAAAI,uBACApP,EAAAkS,oBAAA7D,QAEA,IAAA/L,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAqCtB,EAAA4J,IAAU5J,EAC/CmN,EAAApB,EAAA/L,GACAqP,EAAAlC,EAAAT,OACA4C,EAAA5R,EAAAmS,YACAnS,EAAAoS,aAAA/D,EAAA/L,GAAA0M,OACA2C,EACA3R,EAAAqS,SAAAhE,EAAA/L,GAAA0M,OACAvN,EAAAY,QAAA2M,OAAAL,SAEAgD,EAAAW,sBAAAV,EAAAW,SAAA9J,EACAkJ,EAAAa,sBAAAZ,EAAAW,SAAA7J,EACAiJ,EAAAc,kBAAAb,EAAAc,KAAAjK,EACAkJ,EAAAgB,kBAAAf,EAAAc,KAAAhK,EAIA,GAAAlE,EAAAhD,MAAAuE,QAAAmC,SAAAC,KAAAyK,gBACA,IAAAtQ,EAAA,EAAA4J,EAAAmC,EAAAzK,OAAqCtB,EAAA4J,IAAU5J,EAC/CqP,EAAAtD,EAAA/L,GAAA0M,OACA2C,EAAAW,sBAAAP,EAAAJ,EAAAW,sBAAAT,EAAAvM,KAAAuM,EAAAtM,OACAoM,EAAAa,sBAAAT,EAAAJ,EAAAa,sBAAAX,EAAApM,IAAAoM,EAAAnM,QACAiM,EAAAc,kBAAAV,EAAAJ,EAAAc,kBAAAZ,EAAAvM,KAAAuM,EAAAtM,OACAoM,EAAAgB,kBAAAZ,EAAAJ,EAAAgB,kBAAAd,EAAApM,IAAAoM,EAAAnM,SAKAsC,KAAA,WACA,IAMA6K,EANArO,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACAC,EAAA5M,EAAAG,SACAiQ,EAAArQ,EAAAsQ,UACA5F,EAAAmC,EAAAzK,OAEAtB,EAAA,EAkBA,IAhBAoL,EAAAlJ,EAAAkK,aAAAlN,EAAAuE,WACA8M,GAAApR,EAAAY,QAAA2M,OAAA3L,aAAA,KAEArD,EAAAoJ,OAAA0J,SAAAtR,EAAA6E,KACAf,KAAAuM,EAAAvM,KACAC,MAAAsM,EAAAtM,MACAE,IAAAoM,EAAApM,IAAAoN,EACAnN,OAAAmM,EAAAnM,OAAAmN,IAGApR,EAAAY,QAAA2F,OAEAhI,EAAAoJ,OAAA2J,WAAAvR,EAAA6E,MAIS/D,EAAA4J,IAAU5J,EACnB+L,EAAA/L,GAAA0F,KAAA6J,IAIAmB,cAAA,SAAAC,GAEA,IAAA5Q,EAAAd,KAAAC,MAAAI,KAAAC,SAAAoR,EAAAnE,eACA1N,EAAA6R,EAAAjC,OACA7C,EAAA8E,EAAA9E,WACAwD,EAAAsB,EAAAjE,OAEAiE,EAAAC,gBACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAGA2I,EAAAjP,gBAAAyL,EAAAgF,sBAAAnT,EAAA2P,sBAAAtN,EAAA+Q,0BAAAhS,EAAApB,EAAAqT,cAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,kBAAAtT,EAAA2P,sBAAAtN,EAAAkR,sBAAAnS,EAAApB,EAAAqT,cAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,kBAAAxT,EAAA2P,sBAAAtN,EAAAoR,sBAAArS,EAAAuQ,EAAAtO,aACAsO,EAAA3I,OAAAmF,EAAAuF,aAAA1T,EAAA2P,sBAAAtN,EAAAsR,iBAAAvS,EAAAG,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAiE,uCC/UA7I,EAAAC,SACA8I,eAAA,SAAAzN,GAMA,OALAA,KAAAiD,SAEAjD,IAAAiD,QAGAjD,KAAA0N,WAAA,iDCVA,IAAA7T,EAAcF,EAAQ,QAEtB+K,EAAAC,QAAA,SAAA2C,GAEA,IAAAqG,GAAA,yCAOA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,SACAF,EAAAE,SAAAC,UAAAzQ,KAAAuQ,IAIAvH,OAAAC,eAAAqH,EAAA,YACAI,cAAA,EACAC,YAAA,EACAhJ,OACA8I,WAAAF,MAIAH,EAAAQ,QAAA,SAAAC,GACA,IAAAC,EAAA,SAAAD,EAAAE,OAAA,GAAAC,cAAAH,EAAAI,MAAA,GACAC,EAAAZ,EAAAO,GAEA7H,OAAAC,eAAAqH,EAAAO,GACAH,cAAA,EACAC,YAAA,EACAhJ,MAAA,WACA,IAAAwJ,EAAAC,MAAAlI,UAAA+H,MAAApK,KAAAwK,WACAC,EAAAJ,EAAAK,MAAA1T,KAAAsT,GAQA,OANA7U,EAAAsH,KAAA0M,EAAAE,SAAAC,UAAA,SAAAe,GACA,oBAAAA,EAAAV,IACAU,EAAAV,GAAAS,MAAAC,EAAAL,KAIAG,QAUA,SAAAG,EAAAnB,EAAAC,GACA,IAAAmB,EAAApB,EAAAE,SACA,GAAAkB,EAAA,CAIA,IAAAjB,EAAAiB,EAAAjB,UACA/S,EAAA+S,EAAAkB,QAAApB,IACA,IAAA7S,GACA+S,EAAAmB,OAAAlU,EAAA,GAGA+S,EAAAvQ,OAAA,IAIAkQ,EAAAQ,QAAA,SAAAC,UACAP,EAAAO,YAGAP,EAAAE,WAIAzG,EAAAI,kBAAA,SAAArM,EAAAH,GACAE,KAAAyC,WAAAxC,EAAAH,IAGArB,EAAA+D,OAAA0J,EAAAI,kBAAAjB,WAMAkB,mBAAA,KAMAE,gBAAA,KAEAhK,WAAA,SAAAxC,EAAAH,GACA,IAAAmD,EAAAjD,KACAiD,EAAAhD,QACAgD,EAAApD,MAAAC,EACAmD,EAAA+Q,aACA/Q,EAAAgR,eAGAC,YAAA,SAAApU,GACAE,KAAAH,MAAAC,GAGAkU,WAAA,WACA,IAAA/Q,EAAAjD,KACAE,EAAA+C,EAAA4J,UACA/L,EAAAmC,EAAAkK,aAEA,OAAAjN,EAAA4O,SAAA5O,EAAA4O,WAAA7L,EAAAhD,MAAA8L,SACA7L,EAAA4O,QAAAhO,EAAAgO,SAAA7L,EAAAhD,MAAAuE,QAAAuH,OAAAC,MAAA,GAAA5J,IAEA,OAAAlC,EAAAgN,SAAAhN,EAAAgN,WAAAjK,EAAAhD,MAAA8L,SACA7L,EAAAgN,QAAApM,EAAAoM,SAAAjK,EAAAhD,MAAAuE,QAAAuH,OAAAE,MAAA,GAAA7J,KAIA+K,WAAA,WACA,OAAAnN,KAAAC,MAAAI,KAAAC,SAAAN,KAAAH,QAGAgN,QAAA,WACA,OAAA7M,KAAAC,MAAAE,eAAAH,KAAAH,QAGAoN,cAAA,SAAAkH,GACA,OAAAnU,KAAAC,MAAA8L,OAAAoI,IAGAxH,MAAA,WACA3M,KAAAO,QAAA,IAMA6T,QAAA,WACApU,KAAAqU,OACAT,EAAA5T,KAAAqU,MAAArU,OAIAsU,kBAAA,WACA,IAAArR,EAAAjD,KACA4I,EAAA3F,EAAAsJ,mBACA,OAAA3D,GAAA,IAAAA,GACA2L,OAAAtR,EAAAhD,MACAsN,cAAAtK,EAAApD,SAIA2U,eAAA,SAAA3U,GACA,IAAAoD,EAAAjD,KACA4I,EAAA3F,EAAAwJ,gBACA,OAAA7D,GAAA,IAAAA,GACA2L,OAAAtR,EAAAhD,MACAsN,cAAAtK,EAAApD,MACA4P,OAAA5P,KAIAoU,YAAA,WACA,IAIAlT,EAAA4J,EAJA1H,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAxM,EAAA4C,EAAAkK,aAAA9M,SACAoU,EAAAvU,EAAAG,KAGA,IAAAU,EAAA,EAAA4J,EAAAtK,EAAAgC,OAAkCtB,EAAA4J,IAAU5J,EAC5C0T,EAAA1T,GAAA0T,EAAA1T,IAAAkC,EAAAuR,eAAAzT,GAGAb,EAAAY,QAAAZ,EAAAY,SAAAmC,EAAAqR,qBAGAI,mBAAA,SAAA7U,GACA,IAAA6R,EAAA1R,KAAAwU,eAAA3U,GACAG,KAAA6M,UAAAxM,KAAA0T,OAAAlU,EAAA,EAAA6R,GACA1R,KAAA+N,cAAA2D,EAAA7R,GAAA,IAGA8U,sBAAA,WACA,IAAA1R,EAAAjD,KACAc,EAAAmC,EAAAkK,aACA9M,EAAAS,EAAAT,OAAAS,EAAAT,SAKA4C,EAAAoR,QAAAhU,IACA4C,EAAAoR,OAEAT,EAAA3Q,EAAAoR,MAAApR,GAGAuP,EAAAnS,EAAA4C,GACAA,EAAAoR,MAAAhU,GAKA4C,EAAA2R,kBAGArU,OAAA9B,EAAAE,KAEAkW,WAAA,SAAAC,GAMA,IALA,IAAA5U,EAAAF,KAAA6M,UACAlG,EAAAzG,EAAAG,SACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAESA,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAA8T,WAAAC,GAGA5U,EAAAY,SACAZ,EAAAY,QAAA+T,WAAAC,IAIArO,KAAA,WACA,IAAAvG,EAAAF,KAAA6M,UACAlG,EAAAzG,EAAAG,SACAsK,EAAAhE,EAAAtE,OACAtB,EAAA,EAMA,IAJAb,EAAAY,SACAZ,EAAAY,QAAA2F,OAGS1F,EAAA4J,IAAU5J,EACnB4F,EAAA5F,GAAA0F,QAIAsO,iBAAA,SAAArD,GACAjT,EAAAiN,MAAAgG,EAAAjE,OAAAiE,EAAAC,2BACAD,EAAAC,gBAGAF,cAAA,SAAAC,GACA,IAAA5Q,EAAAd,KAAAC,MAAAI,KAAAC,SAAAoR,EAAAnE,eACA1N,EAAA6R,EAAAjC,OACA7C,EAAA8E,EAAA9E,WACA3H,EAAAxG,EAAA2P,sBACA0D,EAAArT,EAAAqT,cACA1B,EAAAsB,EAAAjE,OAEAiE,EAAAC,gBACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,aAGAsO,EAAAjP,gBAAAyL,EAAAgF,qBAAAhF,EAAAgF,qBAAA3M,EAAAnE,EAAA8Q,qBAAA/R,EAAAiS,EAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,iBAAAnF,EAAAmF,iBAAA9M,EAAAnE,EAAAiR,iBAAAlS,EAAAiS,EAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,iBAAArF,EAAAqF,iBAAAhN,EAAAnE,EAAAmR,iBAAApS,EAAAuQ,EAAAtO,cAMA8S,eAAA,WACA,IAAA3R,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAxM,EAAA4C,EAAAkK,aAAA9M,KACA2U,EAAA9U,EAAAG,KAAAgC,OACA4S,EAAA5U,EAAAgC,OAEA4S,EAAAD,EACA9U,EAAAG,KAAA0T,OAAAkB,EAAAD,EAAAC,GACIA,EAAAD,GACJ/R,EAAAiS,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAC,EAAAC,GACA,QAAArU,EAAA,EAAkBA,EAAAqU,IAAWrU,EAC7Bf,KAAA0U,mBAAAS,EAAApU,IAOAsU,WAAA,WACArV,KAAAkV,eAAAlV,KAAAmN,aAAA9M,KAAAgC,OAAA,EAAAmR,UAAAnR,SAMAiT,UAAA,WACAtV,KAAA6M,UAAAxM,KAAAkV,OAMAC,YAAA,WACAxV,KAAA6M,UAAAxM,KAAAoV,SAMAC,aAAA,SAAAP,EAAAC,GACApV,KAAA6M,UAAAxM,KAAA0T,OAAAoB,EAAAC,GACApV,KAAAkV,eAAAC,EAAA3B,UAAAnR,OAAA,IAMAsT,cAAA,WACA3V,KAAAkV,eAAA,EAAA1B,UAAAnR,WAIA6J,EAAAI,kBAAA9J,OAAA/D,EAAAmX,+CCrUA,IAAAC,EAAYtX,EAAQ,QACpBE,EAAcF,EAAQ,QAEtB,SAAAuX,EAAAX,EAAAY,EAAA3F,EAAA4F,GACA,IACAjV,EAAA4J,EAAAqI,EAAAiD,EAAAC,EAAAC,EAAAvN,EAAAwN,EAAAC,EADAC,EAAAnL,OAAAmL,KAAAlG,GAGA,IAAArP,EAAA,EAAA4J,EAAA2L,EAAAjU,OAAgCtB,EAAA4J,IAAU5J,EAa1C,GAZAiS,EAAAsD,EAAAvV,GAEAoV,EAAA/F,EAAA4C,GAIA+C,EAAAQ,eAAAvD,KACA+C,EAAA/C,GAAAmD,GAGAF,EAAAF,EAAA/C,GAEAiD,IAAAE,GAAA,MAAAnD,EAAA,IAYA,GARAmC,EAAAoB,eAAAvD,KACAmC,EAAAnC,GAAAiD,GAGAC,EAAAf,EAAAnC,GAEApK,SAAAuN,EAEAvN,WAAAsN,EACA,cAAAtN,GAEA,GADAwN,EAAAP,EAAAK,GACAE,EAAAI,QACAH,EAAAR,EAAAM,GACAE,EAAAG,OAAA,CACAT,EAAA/C,GAAAqD,EAAAI,IAAAL,EAAAJ,GAAAU,YACA,eAGI,cAAA9N,GAAA+N,SAAAT,IAAAS,SAAAR,GAAA,CACJJ,EAAA/C,GAAAkD,GAAAC,EAAAD,GAAAF,EACA,SAIAD,EAAA/C,GAAAmD,GAIA,IAAA3X,EAAA,SAAAoY,GACAnY,EAAA+D,OAAAxC,KAAA4W,GACA5W,KAAAyC,WAAAiR,MAAA1T,KAAAwT,YAGA/U,EAAA+D,OAAAhE,EAAA6M,WAEA5I,WAAA,WACAzC,KAAAI,QAAA,GAGA0N,MAAA,WACA,IAAA7K,EAAAjD,KAKA,OAJAiD,EAAA4T,QACA5T,EAAA4T,MAAApY,EAAAqY,MAAA7T,EAAAwK,SAEAxK,EAAA8T,UACA9T,GAGA4R,WAAA,SAAAmB,GACA,IAAA/S,EAAAjD,KACAoQ,EAAAnN,EAAAwK,OACA0H,EAAAlS,EAAA8T,OACAhB,EAAA9S,EAAA4T,MAGA,OAAAzG,GAAA,IAAA4F,GAMAD,IACAA,EAAA9S,EAAA4T,UAGA1B,IACAA,EAAAlS,EAAA8T,WAGAjB,EAAAX,EAAAY,EAAA3F,EAAA4F,GAEA/S,IAfAA,EAAA4T,MAAAzG,EACAnN,EAAA8T,OAAA,KACA9T,IAgBA+T,gBAAA,WACA,OACA9P,EAAAlH,KAAAyN,OAAAvG,EACAC,EAAAnH,KAAAyN,OAAAtG,IAIA8P,SAAA,WACA,OAAAxY,EAAAyY,SAAAlX,KAAAyN,OAAAvG,IAAAzI,EAAAyY,SAAAlX,KAAAyN,OAAAtG,MAIA3I,EAAAgE,OAAA/D,EAAAmX,SAEAtM,EAAAC,QAAA/K,wBCxDA,SAAA2Y,EAAAC,GACA,IAMAC,EAAAC,EAAAhN,EANAF,EAAAgN,EAAA,OACAG,EAAAH,EAAA,OACA/M,EAAA+M,EAAA,OACA1G,EAAA1R,KAAA0R,IAAAtG,EAAAmN,EAAAlN,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAAmN,EAAAlN,GACAmN,EAAAhR,EAAAkK,EA0BA,OAvBAlK,GAAAkK,EACA2G,EAAA,EACAjN,GAAA5D,EACA6Q,GAAAE,EAAAlN,GAAAmN,EACAD,GAAA/Q,EACA6Q,EAAA,GAAAhN,EAAAD,GAAAoN,EACAnN,GAAA7D,IACA6Q,EAAA,GAAAjN,EAAAmN,GAAAC,GAEAH,EAAArY,KAAA0R,IAAA,GAAA2G,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEA/M,GAAAoG,EAAAlK,GAAA,EAGA8Q,EADA9Q,GAAAkK,EACA,EACApG,GAAA,GACAkN,GAAAhR,EAAAkK,GAEA8G,GAAA,EAAAhR,EAAAkK,IAEA2G,EAAA,IAAAC,EAAA,IAAAhN,GAGA,SAAAmN,EAAAL,GACA,IAMAC,EAAAC,EAAAI,EANAtN,EAAAgN,EAAA,GACAG,EAAAH,EAAA,GACA/M,EAAA+M,EAAA,GACA1G,EAAA1R,KAAA0R,IAAAtG,EAAAmN,EAAAlN,GACA7D,EAAAxH,KAAAwH,IAAA4D,EAAAmN,EAAAlN,GACAmN,EAAAhR,EAAAkK,EAwBA,OApBA4G,EADA,GAAA9Q,EACA,EAEAgR,EAAAhR,EAAA,OAEAA,GAAAkK,EACA2G,EAAA,EACAjN,GAAA5D,EACA6Q,GAAAE,EAAAlN,GAAAmN,EACAD,GAAA/Q,EACA6Q,EAAA,GAAAhN,EAAAD,GAAAoN,EACAnN,GAAA7D,IACA6Q,EAAA,GAAAjN,EAAAmN,GAAAC,GAEAH,EAAArY,KAAA0R,IAAA,GAAA2G,EAAA,KAEAA,EAAA,IACAA,GAAA,KAEAK,EAAAlR,EAAA,YAEA6Q,EAAAC,EAAAI,GAGA,SAAAC,EAAAP,GACA,IAAAhN,EAAAgN,EAAA,GACAG,EAAAH,EAAA,GACA/M,EAAA+M,EAAA,GACAC,EAAAF,EAAAC,GAAA,GACAQ,EAAA,MAAA5Y,KAAA0R,IAAAtG,EAAApL,KAAA0R,IAAA6G,EAAAlN,IACAA,EAAA,QAAArL,KAAAwH,IAAA4D,EAAApL,KAAAwH,IAAA+Q,EAAAlN,IAEA,OAAAgN,EAAA,IAAAO,EAAA,IAAAvN,GAGA,SAAAwN,EAAAT,GACA,IAGAU,EAAAC,EAAA5Q,EAAA6Q,EAHA5N,EAAAgN,EAAA,OACAG,EAAAH,EAAA,OACA/M,EAAA+M,EAAA,OAOA,OAJAY,EAAAhZ,KAAA0R,IAAA,EAAAtG,EAAA,EAAAmN,EAAA,EAAAlN,GACAyN,GAAA,EAAA1N,EAAA4N,IAAA,EAAAA,IAAA,EACAD,GAAA,EAAAR,EAAAS,IAAA,EAAAA,IAAA,EACA7Q,GAAA,EAAAkD,EAAA2N,IAAA,EAAAA,IAAA,GACA,IAAAF,EAAA,IAAAC,EAAA,IAAA5Q,EAAA,IAAA6Q,GAGA,SAAAC,EAAAb,GACA,OAAAc,EAAAC,KAAAC,UAAAhB,IAGA,SAAAiB,EAAAjB,GACA,IAAAhN,EAAAgN,EAAA,OACAG,EAAAH,EAAA,OACA/M,EAAA+M,EAAA,OAGAhN,IAAA,OAAApL,KAAAsZ,KAAAlO,EAAA,iBAAAA,EAAA,MACAmN,IAAA,OAAAvY,KAAAsZ,KAAAf,EAAA,iBAAAA,EAAA,MACAlN,IAAA,OAAArL,KAAAsZ,KAAAjO,EAAA,iBAAAA,EAAA,MAEA,IAAAnD,EAAA,MAAAkD,EAAA,MAAAmN,EAAA,MAAAlN,EACAlD,EAAA,MAAAiD,EAAA,MAAAmN,EAAA,MAAAlN,EACAkO,EAAA,MAAAnO,EAAA,MAAAmN,EAAA,MAAAlN,EAEA,WAAAnD,EAAA,IAAAC,EAAA,IAAAoR,GAGA,SAAAC,EAAApB,GACA,IAIA9M,EAAAmO,EAAApO,EAJAqO,EAAAL,EAAAjB,GACAlQ,EAAAwR,EAAA,GACAvR,EAAAuR,EAAA,GACAH,EAAAG,EAAA,GAeA,OAZAxR,GAAA,OACAC,GAAA,IACAoR,GAAA,QAEArR,IAAA,QAAAlI,KAAAsZ,IAAApR,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAAsZ,IAAAnR,EAAA,WAAAA,EAAA,OACAoR,IAAA,QAAAvZ,KAAAsZ,IAAAC,EAAA,WAAAA,EAAA,OAEAjO,EAAA,IAAAnD,EAAA,GACAsR,EAAA,KAAAvR,EAAAC,GACAkD,EAAA,KAAAlD,EAAAoR,IAEAjO,EAAAmO,EAAApO,GAGA,SAAAsO,EAAArF,GACA,OAAAsF,EAAAJ,EAAAlF,IAGA,SAAAuF,EAAAC,GACA,IAGAC,EAAAC,EAAAC,EAAA7B,EAAA8B,EAHA7B,EAAAyB,EAAA,OACAxB,EAAAwB,EAAA,OACAxO,EAAAwO,EAAA,OAGA,MAAAxB,EAEA,OADA4B,EAAA,IAAA5O,GACA4O,OAIAF,EADA1O,EAAA,GACAA,GAAA,EAAAgN,GAEAhN,EAAAgN,EAAAhN,EAAAgN,EACAyB,EAAA,EAAAzO,EAAA0O,EAEA5B,GAAA,OACA,QAAArW,EAAA,EAAiBA,EAAA,EAAOA,IACxBkY,EAAA5B,EAAA,MAAAtW,EAAA,GACAkY,EAAA,GAAAA,IACAA,EAAA,GAAAA,IAGAC,EADA,EAAAD,EAAA,EACAF,EAAA,GAAAC,EAAAD,GAAAE,EACA,EAAAA,EAAA,EACAD,EACA,EAAAC,EAAA,EACAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAEAF,EAEA3B,EAAArW,GAAA,IAAAmY,EAGA,OAAA9B,EAGA,SAAA+B,EAAAL,GACA,IAGAM,EAAA1B,EAHAL,EAAAyB,EAAA,GACAxB,EAAAwB,EAAA,OACAxO,EAAAwO,EAAA,OAGA,WAAAxO,GAGA,QAGAA,GAAA,EACAgN,GAAAhN,GAAA,EAAAA,EAAA,EAAAA,EACAoN,GAAApN,EAAAgN,GAAA,EACA8B,EAAA,EAAA9B,GAAAhN,EAAAgN,IACAD,EAAA,IAAA+B,EAAA,IAAA1B,IAGA,SAAA2B,EAAA/F,GACA,OAAAqE,EAAAkB,EAAAvF,IAGA,SAAAgG,EAAAhG,GACA,OAAAuE,EAAAgB,EAAAvF,IAGA,SAAAiG,EAAAjG,GACA,OAAA2E,EAAAY,EAAAvF,IAIA,SAAAkG,EAAAC,GACA,IAAApC,EAAAoC,EAAA,MACAnC,EAAAmC,EAAA,OACA/B,EAAA+B,EAAA,OACAC,EAAA1a,KAAA2a,MAAAtC,GAAA,EAEAuC,EAAAvC,EAAArY,KAAA2a,MAAAtC,GACAwC,EAAA,IAAAnC,GAAA,EAAAJ,GACAwC,EAAA,IAAApC,GAAA,EAAAJ,EAAAsC,GACAzP,EAAA,IAAAuN,GAAA,EAAAJ,GAAA,EAAAsC,IACAlC,GAAA,IAEA,OAAAgC,GACA,OACA,OAAAhC,EAAAvN,EAAA0P,GACA,OACA,OAAAC,EAAApC,EAAAmC,GACA,OACA,OAAAA,EAAAnC,EAAAvN,GACA,OACA,OAAA0P,EAAAC,EAAApC,GACA,OACA,OAAAvN,EAAA0P,EAAAnC,GACA,OACA,OAAAA,EAAAmC,EAAAC,IAIA,SAAAC,EAAAN,GACA,IAGAO,EAAA1P,EAHA+M,EAAAoC,EAAA,GACAnC,EAAAmC,EAAA,OACA/B,EAAA+B,EAAA,OAQA,OALAnP,GAAA,EAAAgN,GAAAI,EACAsC,EAAA1C,EAAAI,EACAsC,GAAA1P,GAAA,EAAAA,EAAA,EAAAA,EACA0P,KAAA,EACA1P,GAAA,GACA+M,EAAA,IAAA2C,EAAA,IAAA1P,GAGA,SAAA2P,EAAA3G,GACA,OAAAqE,EAAA6B,EAAAlG,IAGA,SAAA4G,EAAA5G,GACA,OAAAuE,EAAA2B,EAAAlG,IAGA,SAAA6G,EAAA7G,GACA,OAAA2E,EAAAuB,EAAAlG,IAIA,SAAA8G,EAAAC,GACA,IAIAtZ,EAAA2W,EAAAkC,EAAAU,EAJAjD,EAAAgD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAF,EAAAC,EAiBA,OAbAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGA1Z,EAAA/B,KAAA2a,MAAA,EAAAtC,GACAK,EAAA,EAAA8C,EACAZ,EAAA,EAAAvC,EAAAtW,EACA,MAAAA,KACA6Y,EAAA,EAAAA,GAEAU,EAAAC,EAAAX,GAAAlC,EAAA6C,GAEAxZ,GACA,QACA,OACA,OAAAqJ,EAAAsN,EAAkBH,EAAA+C,EAAOjQ,EAAAkQ,EAAQ,MACjC,OAAAnQ,EAAAkQ,EAAkB/C,EAAAG,EAAOrN,EAAAkQ,EAAQ,MACjC,OAAAnQ,EAAAmQ,EAAmBhD,EAAAG,EAAOrN,EAAAiQ,EAAO,MACjC,OAAAlQ,EAAAmQ,EAAmBhD,EAAA+C,EAAOjQ,EAAAqN,EAAO,MACjC,OAAAtN,EAAAkQ,EAAkB/C,EAAAgD,EAAQlQ,EAAAqN,EAAO,MACjC,OAAAtN,EAAAsN,EAAkBH,EAAAgD,EAAQlQ,EAAAiQ,EAAO,MAGjC,WAAAlQ,EAAA,IAAAmN,EAAA,IAAAlN,GAGA,SAAAqQ,EAAApH,GACA,OAAA6D,EAAAiD,EAAA9G,IAGA,SAAAqH,EAAArH,GACA,OAAAmE,EAAA2C,EAAA9G,IAGA,SAAAsH,EAAAtH,GACA,OAAAuE,EAAAuC,EAAA9G,IAGA,SAAAuH,EAAAvH,GACA,OAAA2E,EAAAmC,EAAA9G,IAGA,SAAAwH,EAAAC,GACA,IAIA3Q,EAAAmN,EAAAlN,EAJAyN,EAAAiD,EAAA,OACAhD,EAAAgD,EAAA,OACA5T,EAAA4T,EAAA,OACA/C,EAAA+C,EAAA,OAMA,OAHA3Q,EAAA,EAAApL,KAAA0R,IAAA,EAAAoH,GAAA,EAAAE,MACAT,EAAA,EAAAvY,KAAA0R,IAAA,EAAAqH,GAAA,EAAAC,MACA3N,EAAA,EAAArL,KAAA0R,IAAA,EAAAvJ,GAAA,EAAA6Q,OACA,IAAA5N,EAAA,IAAAmN,EAAA,IAAAlN,GAGA,SAAA2Q,EAAA1H,GACA,OAAA6D,EAAA2D,EAAAxH,IAGA,SAAA2H,EAAA3H,GACA,OAAAmE,EAAAqD,EAAAxH,IAGA,SAAA4H,EAAA5H,GACA,OAAAqE,EAAAmD,EAAAxH,IAGA,SAAA6H,EAAA7H,GACA,OAAA2E,EAAA6C,EAAAxH,IAIA,SAAA8H,EAAA1C,GACA,IAGAtO,EAAAmN,EAAAlN,EAHAnD,EAAAwR,EAAA,OACAvR,EAAAuR,EAAA,OACAH,EAAAG,EAAA,OAqBA,OAlBAtO,EAAA,OAAAlD,GAAA,OAAAC,GAAA,MAAAoR,EACAhB,GAAA,MAAArQ,EAAA,OAAAC,EAAA,MAAAoR,EACAlO,EAAA,MAAAnD,GAAA,KAAAC,EAAA,MAAAoR,EAGAnO,IAAA,eAAApL,KAAAsZ,IAAAlO,EAAA,YACAA,GAAA,MAEAmN,IAAA,eAAAvY,KAAAsZ,IAAAf,EAAA,YACAA,GAAA,MAEAlN,IAAA,eAAArL,KAAAsZ,IAAAjO,EAAA,YACAA,GAAA,MAEAD,EAAApL,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA4D,GAAA,GACAmN,EAAAvY,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA+Q,GAAA,GACAlN,EAAArL,KAAA0R,IAAA1R,KAAAwH,IAAA,EAAA6D,GAAA,IAEA,IAAAD,EAAA,IAAAmN,EAAA,IAAAlN,GAGA,SAAAgR,EAAA3C,GACA,IAGApO,EAAAmO,EAAApO,EAHAnD,EAAAwR,EAAA,GACAvR,EAAAuR,EAAA,GACAH,EAAAG,EAAA,GAeA,OAZAxR,GAAA,OACAC,GAAA,IACAoR,GAAA,QAEArR,IAAA,QAAAlI,KAAAsZ,IAAApR,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAnI,KAAAsZ,IAAAnR,EAAA,WAAAA,EAAA,OACAoR,IAAA,QAAAvZ,KAAAsZ,IAAAC,EAAA,WAAAA,EAAA,OAEAjO,EAAA,IAAAnD,EAAA,GACAsR,EAAA,KAAAvR,EAAAC,GACAkD,EAAA,KAAAlD,EAAAoR,IAEAjO,EAAAmO,EAAApO,GAGA,SAAAiR,EAAAhI,GACA,OAAAsF,EAAAyC,EAAA/H,IAGA,SAAAiI,EAAAC,GACA,IAGAtU,EAAAC,EAAAoR,EAAAkD,EAHAnR,EAAAkR,EAAA,GACA/C,EAAA+C,EAAA,GACAnR,EAAAmR,EAAA,GAeA,OAZAlR,GAAA,GACAnD,EAAA,IAAAmD,EAAA,MACAmR,EAAAtU,EAAA,mBAEAA,EAAA,IAAAnI,KAAAsZ,KAAAhO,EAAA,WACAmR,EAAAzc,KAAAsZ,IAAAnR,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAAuR,EAAA,IAAAgD,EAAA,qBAAAzc,KAAAsZ,IAAAG,EAAA,IAAAgD,EAAA,GAEAlD,IAAA,iBAAAA,EAAA,SAAAkD,EAAApR,EAAA,0BAAArL,KAAAsZ,IAAAmD,EAAApR,EAAA,QAEAnD,EAAAC,EAAAoR,GAGA,SAAAK,EAAA4C,GACA,IAGAE,EAAArE,EAAAS,EAHAxN,EAAAkR,EAAA,GACA/C,EAAA+C,EAAA,GACAnR,EAAAmR,EAAA,GASA,OANAE,EAAA1c,KAAA2c,MAAAtR,EAAAoO,GACApB,EAAA,IAAAqE,EAAA,EAAA1c,KAAA4c,GACAvE,EAAA,IACAA,GAAA,KAEAS,EAAA9Y,KAAA6c,KAAApD,IAAApO,MACAC,EAAAwN,EAAAT,GAGA,SAAAyE,EAAAxI,GACA,OAAA8H,EAAAG,EAAAjI,IAGA,SAAAyI,EAAAC,GACA,IAGAvD,EAAApO,EAAAqR,EAHApR,EAAA0R,EAAA,GACAlE,EAAAkE,EAAA,GACA3E,EAAA2E,EAAA,GAMA,OAHAN,EAAArE,EAAA,MAAArY,KAAA4c,GACAnD,EAAAX,EAAA9Y,KAAAid,IAAAP,GACArR,EAAAyN,EAAA9Y,KAAAkd,IAAAR,IACApR,EAAAmO,EAAApO,GAGA,SAAA8R,EAAA7I,GACA,OAAAiI,EAAAQ,EAAAzI,IAGA,SAAA8I,EAAA9I,GACA,OAAAwI,EAAAC,EAAAzI,IAGA,SAAA+I,EAAAC,GACA,OAAAC,EAAAD,GAGA,SAAAE,EAAAlJ,GACA,OAAA6D,EAAAkF,EAAA/I,IAGA,SAAAmJ,EAAAnJ,GACA,OAAAmE,EAAA4E,EAAA/I,IAGA,SAAAoJ,EAAApJ,GACA,OAAAqE,EAAA0E,EAAA/I,IAGA,SAAAqJ,EAAArJ,GACA,OAAAuE,EAAAwE,EAAA/I,IAGA,SAAAsJ,EAAAtJ,GACA,OAAAkF,EAAA6D,EAAA/I,IAGA,SAAAuJ,EAAAvJ,GACA,OAAA+E,EAAAgE,EAAA/I,IA1hBAhK,EAAAC,SACA4N,UACAM,UACAE,UACAE,WACAI,cACAI,UACAG,UACAG,UAEAE,UACAM,UACAE,UACAC,WACAC,cAEAC,UACAO,UACAE,UACAC,WACAC,cAEAC,UACAM,UACAC,UACAC,WACAC,cAEAC,WACAE,WACAC,WACAC,WACAC,eAEAkB,cACAG,cACAC,cACAC,cACAC,eACAC,cACAC,cAEAzB,UACAC,UACAC,UAEAC,UACAO,UACAlD,UAEAmD,UACAI,UACAC,WAyeA,IAAAG,GACAO,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAC,OAAA,OACAC,gBAAA,aACAC,MAAA,SACAC,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAC,MAAA,WACAC,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAC,OAAA,SACAC,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACAC,SAAA,WACAC,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACAC,KAAA,SACAC,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACAC,QAAA,WACAC,aAAA,aAGA/N,KACA,QAAAlF,KAAAuJ,EACArE,EAAAC,KAAAC,UAAAmE,EAAAvJ,0CCtrBA1J,EAAAC,QAAA,SAAA2C,GAEAA,EAAAga,IAAA,SAAAxb,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,MAEA,IAAAsD,EAAAxB,EAAAhI,wCCLA,IAAApE,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtB+I,EAAAhJ,EAAA0G,OAAAsC,aAkBA,SAAA6e,EAAAC,GACA,IAAAC,EAAArmB,KAAA6W,MACA,QAAAwP,GAAArnB,KAAAsnB,IAAAF,EAAAC,EAAAnf,GAAAmf,EAAA5e,OAAA4e,EAAApX,UAGA,SAAAsX,EAAAC,GACA,IAAAH,EAAArmB,KAAA6W,MACA,QAAAwP,GAAArnB,KAAAsnB,IAAAE,EAAAH,EAAAlf,GAAAkf,EAAA5e,OAAA4e,EAAApX,UAvBA3Q,EAAAa,KAAA,UACAwH,UACAuH,OACAzG,OAAA,EACAxF,WAAA,SACAd,gBAAAmG,EACAtF,YAAAsF,EACAxF,YAAA,EAEAmN,UAAA,EACAkD,YAAA,EACAF,iBAAA,MAeA3I,EAAAC,QAAA/K,EAAAgE,QACAikB,QAAA,SAAAL,EAAAI,GACA,IAAAH,EAAArmB,KAAA6W,MACA,QAAAwP,GAAArnB,KAAAsZ,IAAA8N,EAAAC,EAAAnf,EAAA,GAAAlI,KAAAsZ,IAAAkO,EAAAH,EAAAlf,EAAA,GAAAnI,KAAAsZ,IAAA+N,EAAApX,UAAAoX,EAAA5e,OAAA,IAGAif,aAAAP,EACAQ,SAAAR,EACAS,SAAAL,EAEAM,eAAA,WACA,IAAAR,EAAArmB,KAAA6W,MACA,OACA3P,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,IAIA2f,QAAA,WACA,OAAA9nB,KAAA4c,GAAA5c,KAAAsZ,IAAAtY,KAAA6W,MAAApP,OAAA,IAGAuP,gBAAA,WACA,IAAAqP,EAAArmB,KAAA6W,MACA,OACA3P,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,EACAzG,QAAA2lB,EAAA5e,OAAA4e,EAAAvkB,cAIA2E,KAAA,SAAA8J,GACA,IAAA8V,EAAArmB,KAAA6W,MACAzG,EAAApQ,KAAAyN,OACA3I,EAAA9E,KAAAuU,OAAAzP,IACA7C,EAAAokB,EAAApkB,WACA0M,EAAA0X,EAAA1X,SACAlH,EAAA4e,EAAA5e,OACAP,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,EACA4f,EAAA,KAEAV,EAAA3W,YAKA9E,IAAA2F,GAAAH,EAAAlJ,GAAAqJ,EAAAxM,MAAAwM,EAAAvM,MAAA+iB,GAAA3W,EAAAlJ,GAAAkJ,EAAAjJ,GAAAoJ,EAAArM,KAAAqM,EAAApM,OAAA4iB,GAAA3W,EAAAjJ,KACArC,EAAA/C,YAAAskB,EAAArkB,aAAAsF,EACAxC,EAAAjD,UAAApD,EAAAwG,eAAAohB,EAAAvkB,YAAAxD,EAAA0G,OAAA2B,SAAAuH,MAAApM,aACAgD,EAAA5D,UAAAmlB,EAAAllB,iBAAAmG,EACA7I,EAAAoJ,OAAAC,UAAAhD,EAAA7C,EAAAwF,EAAAP,EAAAC,EAAAwH,+BCrFA,IAAAqY,EAAkBzoB,EAAQ,QAE1B0oB,EAAA,WACA,WAAAC,GAGA,QAAAC,KAAAH,EAAA,CAEAC,EAAAE,EAAA,gBAAAA,GAEA,gBAAAC,GAGA,MAFA,iBAAAA,IACAA,EAAA7T,MAAAlI,UAAA+H,MAAApK,KAAAwK,YACAwT,EAAAG,GAAAC,IALA,CAOGD,GAEH,IAAAE,EAAA,cAAAC,KAAAH,GACAI,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAGAJ,EAAAM,GAAAN,EAAAM,OAEAN,EAAAM,GAAAC,GAAAP,EAAAE,GAAA,SAAAA,GACA,gBAAAC,GACA,iBAAAA,IACAA,EAAA7T,MAAAlI,UAAA+H,MAAApK,KAAAwK,YAEA,IAAA0F,EAAA8N,EAAAG,GAAAC,GACA,oBAAAlO,QAAAtO,IAAAsO,EACA,OAAAA,EAEA,QAAAnY,EAAA,EAAqBA,EAAAmY,EAAA7W,OAAgBtB,IACrCmY,EAAAnY,GAAA/B,KAAAyoB,MAAAvO,EAAAnY,IACA,OAAAmY,GAXA,CAaGiO,GAKH,IAAAD,EAAA,WACAlnB,KAAA0nB,UAKAR,EAAA7b,UAAAsc,WAAA,SAAAC,EAAAtU,GACA,IAAA7H,EAAA6H,EAAA,GACA,YAAA1I,IAAAa,EAEAzL,KAAA6nB,UAAAD,IAGA,iBAAAnc,IACAA,EAAA8H,MAAAlI,UAAA+H,MAAApK,KAAAsK,IAGAtT,KAAA8nB,UAAAF,EAAAnc,KAIAyb,EAAA7b,UAAAyc,UAAA,SAAAF,EAAAnc,GAIA,OAHAzL,KAAA4nB,QACA5nB,KAAA0nB,SACA1nB,KAAA0nB,MAAAE,GAAAnc,EACAzL,MAMAknB,EAAA7b,UAAAwc,UAAA,SAAAD,GACA,IAAAG,EAAA/nB,KAAA0nB,MAAAE,GACA,IAAAG,EAAA,CACA,IAAAC,EAAAhoB,KAAA4nB,MACAL,EAAAvnB,KAAA0nB,MAAAM,GACAD,EAAAd,EAAAe,GAAAJ,GAAAL,GAEAvnB,KAAA0nB,MAAAE,GAAAG,EAEA,OAAAA,IAGA,oCAAAhV,QAAA,SAAA6U,GACAV,EAAA7b,UAAAuc,GAAA,SAAAG,GACA,OAAA/nB,KAAA2nB,WAAAC,EAAApU,cAIAlK,EAAAC,QAAA0d,uCCzFA3d,EAAAC,QAAA,SAAA2C,GAEAA,EAAA+b,OAAA,SAAAvd,EAAAhI,GAEA,OADAA,EAAAkG,KAAA,SACA,IAAAsD,EAAAxB,EAAAhI,wCCHA,IAAAwlB,EAAa3pB,EAAQ,QACrB2pB,EAAA,oBAAAA,IAAAC,OAAAD,OAEA,IAAA5pB,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB6pB,EAAY7pB,EAAQ,QACpB8pB,EAAmB9pB,EAAQ,QAG3B+pB,EAAArY,OAAAsY,mBAAA,iBACAC,EAAAvY,OAAAwY,kBAAA,iBAEAC,GACAC,aACAC,QAAA,EACA7e,KAAA,EACA8e,OAAA,6BAEAC,QACAF,QAAA,EACA7e,KAAA,IACA8e,OAAA,iBAEAE,QACAH,QAAA,EACA7e,KAAA,IACA8e,OAAA,iBAEAG,MACAJ,QAAA,EACA7e,KAAA,KACA8e,OAAA,aAEAI,KACAL,QAAA,EACA7e,KAAA,MACA8e,OAAA,QAEAK,MACAN,QAAA,EACA7e,KAAA,OACA8e,OAAA,UAEAM,OACAP,QAAA,EACA7e,KAAA,OACA8e,OAAA,QAEAO,SACAR,QAAA,EACA7e,KAAA,OACA8e,OAAA,UAEAQ,MACAT,QAAA,EACA7e,KAAA,SAIAuf,EAAAne,OAAAmL,KAAAoS,GAEA,SAAAa,EAAA9Q,EAAApO,GACA,OAAAoO,EAAApO,EAGA,SAAAmf,EAAAC,GACA,IAEA1oB,EAAA4J,EAAA/F,EAFA8kB,KACAC,KAGA,IAAA5oB,EAAA,EAAA4J,EAAA8e,EAAApnB,OAAiCtB,EAAA4J,IAAU5J,EAC3C6D,EAAA6kB,EAAA1oB,GACA2oB,EAAA9kB,KACA8kB,EAAA9kB,IAAA,EACA+kB,EAAAxnB,KAAAyC,IAIA,OAAA+kB,EAkBA,SAAAC,EAAAC,EAAAnZ,EAAAlK,EAAAsjB,GACA,cAAAA,IAAAD,EAAAxnB,OACA,QACI0nB,KAAArZ,EAAAsZ,IAAA,IACAD,KAAAvjB,EAAAwjB,IAAA,IAIJ,IAEAjpB,EAAA4J,EAAAsf,EAAAC,EAAA/Y,EAFAgZ,KACAV,GAAA/Y,GAGA,IAAA3P,EAAA,EAAA4J,EAAAkf,EAAAxnB,OAAsCtB,EAAA4J,IAAU5J,EAChDmpB,EAAAL,EAAA9oB,GACAmpB,EAAAxZ,GAAAwZ,EAAA1jB,GACAijB,EAAAtnB,KAAA+nB,GAMA,IAFAT,EAAAtnB,KAAAqE,GAEAzF,EAAA,EAAA4J,EAAA8e,EAAApnB,OAAiCtB,EAAA4J,IAAU5J,EAC3CoQ,EAAAsY,EAAA1oB,EAAA,GACAkpB,EAAAR,EAAA1oB,EAAA,GACAmpB,EAAAT,EAAA1oB,QAGA6J,IAAAqf,QAAArf,IAAAuG,GAAAnS,KAAAyoB,OAAAtW,EAAA8Y,GAAA,KAAAC,GACAC,EAAAhoB,MAAe4nB,KAAAG,EAAAF,IAAAjpB,GAAA4J,EAAA,KAIf,OAAAwf,EAIA,SAAAC,EAAAD,EAAAnX,EAAAlJ,GACA,IAEAugB,EAAAC,EAAAC,EAFAC,EAAA,EACA9Q,EAAAyQ,EAAA9nB,OAAA,EAGA,MAAAmoB,GAAA,GAAAA,GAAA9Q,EAAA,CAKA,GAJA2Q,EAAAG,EAAA9Q,GAAA,EACA4Q,EAAAH,EAAAE,EAAA,SACAE,EAAAJ,EAAAE,IAEAC,EAEA,OAAWE,GAAA,KAAA9Q,GAAA6Q,GACR,GAAAA,EAAAvX,GAAAlJ,EACH0gB,EAAAH,EAAA,MACG,MAAAC,EAAAtX,GAAAlJ,GAGH,OAAW0gB,GAAAF,EAAA5Q,GAAA6Q,GAFX7Q,EAAA2Q,EAAA,GAOA,OAASG,GAAAD,EAAA7Q,GAAA,MAST,SAAA5D,EAAAqU,EAAAM,EAAAC,EAAAC,GACA,IAAAC,EAAAR,EAAAD,EAAAM,EAAAC,GAGAT,EAAAW,EAAAJ,GAAAI,EAAAlR,GAAAkR,EAAAJ,GAAAL,IAAA9nB,OAAA,GAAA8nB,EAAA,GACAhZ,EAAAyZ,EAAAJ,GAAAI,EAAAlR,GAAAkR,EAAAlR,GAAAyQ,IAAA9nB,OAAA,GAAA8nB,EAAA,GAEAU,EAAA1Z,EAAAsZ,GAAAR,EAAAQ,GACAhQ,EAAAoQ,GAAAH,EAAAT,EAAAQ,IAAAI,EAAA,EACAC,GAAA3Z,EAAAwZ,GAAAV,EAAAU,IAAAlQ,EAEA,OAAAwP,EAAAU,GAAAG,EAOA,SAAAC,EAAAjhB,EAAAtF,GACA,IAAAwmB,EAAAxmB,EAAAwmB,OACAC,EAAAzmB,EAAAwmB,QAAAxmB,EAAAymB,OAEA,0BAAAD,EACAA,EAAAlhB,GAGA,kBAAAA,GAAA,kBAAAmhB,EACA/C,EAAApe,EAAAmhB,IAGAnhB,aAAAoe,IACApe,EAAAoe,EAAApe,IAGAA,EAAAohB,UACAphB,EAKA,oBAAAmhB,EACAA,EAAAnhB,GAGAA,GAGA,SAAAqhB,EAAAC,EAAApe,GACA,GAAAvO,EAAA4sB,cAAAD,GACA,YAGA,IAAA5mB,EAAAwI,EAAAxI,QAAAulB,KACAjgB,EAAAihB,EAAA/d,EAAAkD,cAAAkb,GAAA5mB,GACA,OAAAsF,EAAAohB,WAIA1mB,EAAAijB,OACA3d,EAAAwhB,QAAA9mB,EAAAijB,OAGA3d,EAAAyhB,WAPA,KAcA,SAAAC,EAAA9a,EAAAlK,EAAAilB,EAAAC,GACA,IAIA3qB,EAAA4J,EAAAghB,EAJAf,EAAApkB,EAAAkK,EACAkb,EAAAlD,EAAA+C,GACAI,EAAAD,EAAA7hB,KACA8e,EAAA+C,EAAA/C,MAGA,IAAAA,EACA,OAAA7pB,KAAA8sB,KAAAlB,GAAAc,EAAAG,IAGA,IAAA9qB,EAAA,EAAA4J,EAAAke,EAAAxmB,OAAiCtB,EAAA4J,IAAU5J,EAE3C,GADA4qB,EAAA9C,EAAA9nB,GACA/B,KAAA8sB,KAAAlB,GAAAiB,EAAAF,KAAAD,EACA,MAIA,OAAAC,EAMA,SAAAI,EAAAC,EAAAtb,EAAAlK,EAAAklB,GACA,IACA3qB,EAAA6qB,EAAAD,EADAhhB,EAAA2e,EAAAjnB,OAGA,IAAAtB,EAAAuoB,EAAAxV,QAAAkY,GAAiCjrB,EAAA4J,EAAA,IAAc5J,EAI/C,GAHA6qB,EAAAlD,EAAAY,EAAAvoB,IACA4qB,EAAAC,EAAA/C,MAAA+C,EAAA/C,MAAA+C,EAAA/C,MAAAxmB,OAAA,GAAAmmB,EAEAoD,EAAAhD,QAAA5pB,KAAA8sB,MAAAtlB,EAAAkK,IAAAib,EAAAC,EAAA7hB,QAAA2hB,EACA,OAAApC,EAAAvoB,GAIA,OAAAuoB,EAAA3e,EAAA,GAMA,SAAAshB,EAAAC,EAAAF,EAAAtb,EAAAlK,GACA,IAEAzF,EAAA0qB,EAFAU,EAAAjE,EAAAiE,SAAAjE,EAAA1hB,GAAA4lB,KAAAlE,EAAAxX,KACA/F,EAAA2e,EAAAjnB,OAGA,IAAAtB,EAAA4J,EAAA,EAAmB5J,GAAAuoB,EAAAxV,QAAAkY,GAA6BjrB,IAEhD,GADA0qB,EAAAnC,EAAAvoB,GACA2nB,EAAA+C,GAAA7C,QAAAuD,EAAAE,GAAAZ,IAAAS,EAAA7pB,OACA,OAAAopB,EAIA,OAAAnC,EAAA0C,EAAA1C,EAAAxV,QAAAkY,GAAA,GAGA,SAAAM,EAAAb,GACA,QAAA1qB,EAAAuoB,EAAAxV,QAAA2X,GAAA,EAAA9gB,EAAA2e,EAAAjnB,OAA2DtB,EAAA4J,IAAU5J,EACrE,GAAA2nB,EAAAY,EAAAvoB,IAAA6nB,OACA,OAAAU,EAAAvoB,GAWA,SAAAwrB,EAAA7b,EAAAlK,EAAAklB,EAAAlnB,GACA,IAUAulB,EAVAyC,EAAAhoB,EAAAulB,KACA0C,EAAAD,EAAAf,MAAAM,EAAAS,EAAAR,QAAAtb,EAAAlK,EAAAklB,GACAgB,EAAAJ,EAAAG,GACAE,EAAAluB,EAAAwG,eAAAunB,EAAAG,SAAAH,EAAAI,cACAC,EAAA,SAAAJ,GAAAD,EAAAM,WACAC,EAAAvoB,EAAA0nB,MAAAQ,MAAAM,QACApB,EAAAlD,EAAA+D,GACAQ,EAAA/E,EAAAxX,GACAwc,EAAAhF,EAAA1hB,GACA0lB,KAgCA,IA7BAS,IACAA,EAAAnB,EAAA9a,EAAAlK,EAAAimB,EAAAf,IAIAmB,IACAI,IAAAH,WAAAD,GACAK,IAAAJ,WAAAD,IAIAI,IAAA3B,QAAAuB,EAAA,MAAAJ,GACAS,IAAA5B,QAAAuB,EAAA,MAAAJ,GAGAS,EAAA1mB,GACA0mB,EAAAC,IAAA,EAAAV,GAGA1C,EAAA7B,EAAA+E,GAEAF,GAAAL,IAAAG,IAAAL,EAAA/E,QAIAsC,EAAAuB,QAAAoB,GACA3C,EAAAoD,QAAAF,EAAAlD,IAAA6B,EAAA7hB,KAAA4iB,MAAAF,IAGO1C,EAAAmD,EAAanD,EAAAoD,IAAAR,EAAAF,GACpBP,EAAA/pB,MAAA4nB,GAKA,OAFAmC,EAAA/pB,MAAA4nB,GAEAmC,EAOA,SAAAkB,EAAAjD,EAAA+B,EAAAxb,EAAAlK,EAAAhC,GACA,IAEA6oB,EAAAC,EAFAvpB,EAAA,EACAC,EAAA,EAsBA,OAnBAQ,EAAAsmB,QAAAoB,EAAA7pB,SACAmC,EAAAulB,KAAArZ,MACA2c,EAAAnB,EAAA7pB,OAAA,EAAA6pB,EAAA,GAAA1lB,EACA8mB,EAAApB,EAAA,GACAnoB,GACA+R,EAAAqU,EAAA,OAAAkD,EAAA,OACAvX,EAAAqU,EAAA,OAAAmD,EAAA,QACA,GAEA9oB,EAAAulB,KAAAvjB,MACA6mB,EAAAnB,IAAA7pB,OAAA,GACAirB,EAAApB,EAAA7pB,OAAA,EAAA6pB,IAAA7pB,OAAA,GAAAqO,EACA1M,GACA8R,EAAAqU,EAAA,OAAAkD,EAAA,OACAvX,EAAAqU,EAAA,OAAAmD,EAAA,QACA,KAISvpB,OAAAC,SAGT,SAAAupB,EAAA9hB,EAAA+hB,GACA,IACAzsB,EAAA4J,EAAAb,EAAA4iB,EADAR,KAGA,IAAAnrB,EAAA,EAAA4J,EAAAc,EAAApJ,OAAkCtB,EAAA4J,IAAU5J,EAC5C+I,EAAA2B,EAAA1K,GACA2rB,IAAAc,GAAA1jB,KAAAoe,EAAApe,GAAAwhB,QAAAkC,GAEAtB,EAAA/pB,MACA2H,QACA4iB,UAIA,OAAAR,EAGA,SAAAuB,EAAAptB,EAAAmsB,GACA,IAAAzrB,EAAA2sB,EAAAC,EACAhjB,EAAAtK,EAAAgC,OAIA,IAAAtB,EAAA,EAAYA,EAAA4J,EAAU5J,IAAA,CAEtB,GADA2sB,EAAA3C,EAAA1qB,EAAAU,GAAAyrB,GACA,IAAAkB,EAAA/E,cACA,kCAEA,IAAA+E,EAAA5E,UAAA,IAAA4E,EAAA3E,UAAA,IAAA2E,EAAA1E,SACA2E,GAAA,GAGA,OAAAA,EACA,wBAEA,cAGArkB,EAAAC,QAAA,WAEA,IAAAqkB,GACAtuB,SAAA,SASAwqB,aAAA,SASA+D,OAAA,OAEA9D,MACAiB,QAAA,EACAC,QAAA,EACAQ,MAAA,EACAhE,OAAA,EACAqG,eAAA,EACAhB,YAAA,EACAd,QAAA,cAGA+B,gBACApF,YAAA,gBACAG,OAAA,YACAC,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,SAGA6C,OACA8B,UAAA,EAUAC,OAAA,OAEAvB,OACAM,SAAA,KAKAkB,EAAA9F,EAAA5lB,QACAC,WAAA,WACA,IAAAylB,EACA,UAAAiG,MAAA,wIAGAnuB,KAAAouB,oBAEAhG,EAAA/c,UAAA5I,WAAAuG,KAAAhJ,OAGAO,OAAA,WACA,IAAA0C,EAAAjD,KACAwE,EAAAvB,EAAAuB,QAOA,OAJAA,EAAAulB,MAAAvlB,EAAAulB,KAAAkB,QACAoD,QAAAC,KAAA,0EAGAlG,EAAA/c,UAAA9K,OAAAmT,MAAAzQ,EAAAuQ,YAMAtD,cAAA,SAAAqe,GAIA,OAHAA,QAAA3jB,IAAA2jB,EAAApkB,IACAokB,IAAApkB,GAEAie,EAAA/c,UAAA6E,cAAAlH,KAAAhJ,KAAAuuB,IAGAC,oBAAA,WACA,IASAztB,EAAA0tB,EAAA9jB,EAAA+jB,EAAAruB,EAAAsuB,EATA1rB,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAusB,EAAAvpB,EAAAuB,QAAAulB,KACA0B,EAAAe,EAAAf,MAAA,MACA/a,EAAA8X,EACAhiB,EAAA8hB,EACAuB,KACAvpB,KACAG,KAIA,IAAAM,EAAA,EAAA4J,EAAA1K,EAAAI,KAAAI,OAAA4B,OAA+CtB,EAAA4J,IAAU5J,EACzDN,EAAA0B,KAAAgpB,EAAAlrB,EAAAI,KAAAI,OAAAM,GAAAkC,IAIA,IAAAlC,EAAA,EAAA4J,GAAA1K,EAAAI,KAAAC,cAAA+B,OAAyDtB,EAAA4J,IAAU5J,EACnE,GAAAd,EAAAmB,iBAAAL,GAIA,GAHAV,EAAAJ,EAAAI,KAAAC,SAAAS,GAAAV,KAGA5B,EAAA8L,SAAAlK,EAAA,IAGA,IAFAC,EAAAS,MAEA0tB,EAAA,EAAAC,EAAAruB,EAAAgC,OAAqCosB,EAAAC,IAAUD,EAC/CE,EAAAxD,EAAA9qB,EAAAouB,GAAAxrB,GACA4mB,EAAA1nB,KAAAwsB,GACAruB,EAAAS,GAAA0tB,GAAAE,OAGA9E,EAAA1nB,KAAAuR,MAAAmW,EAAAppB,GACAH,EAAAS,GAAAN,EAAA2S,MAAA,QAGA9S,EAAAS,MAIAN,EAAA4B,SAEA5B,EAAA+oB,EAAA/oB,GAAAmuB,KAAArF,GACA7Y,EAAA1R,KAAA0R,MAAAjQ,EAAA,IACA+F,EAAAxH,KAAAwH,MAAA/F,IAAA4B,OAAA,KAGAwnB,EAAAxnB,SACAwnB,EAAAL,EAAAK,GAAA+E,KAAArF,GACA7Y,EAAA1R,KAAA0R,MAAAmZ,EAAA,IACArjB,EAAAxH,KAAAwH,MAAAqjB,IAAAxnB,OAAA,KAGAqO,EAAAya,EAAAqB,EAAA9b,IAAAzN,IAAAyN,EACAlK,EAAA2kB,EAAAqB,EAAAhmB,IAAAvD,IAAAuD,EAGAkK,MAAA8X,GAAAN,IAAAoD,QAAAG,GAAA/a,EACAlK,MAAA8hB,GAAAJ,IAAA2G,MAAApD,GAAA,EAAAjlB,EAGAvD,EAAAyN,IAAA1R,KAAA0R,MAAAlK,GACAvD,EAAAuD,IAAAxH,KAAAwH,IAAAkK,EAAA,EAAAlK,GAGAvD,EAAA6rB,YAAA7rB,EAAAY,eACAZ,EAAA8rB,UACA9rB,EAAA+rB,aACA3uB,KAAAwpB,EACAvpB,WACAG,WAIAwuB,WAAA,WACA,IAOAluB,EAAA4J,EAAAgkB,EAPA1rB,EAAAjD,KACA0Q,EAAAzN,EAAAyN,IACAlK,EAAAvD,EAAAuD,IACAhC,EAAAvB,EAAAuB,QACAgoB,EAAAhoB,EAAAulB,KACAF,KACAqC,KAGA,OAAA1nB,EAAA0nB,MAAA+B,QACA,WACApE,EAAA5mB,EAAA+rB,YAAA3uB,KACA,MACA,aACAwpB,EAAA5mB,EAAA+rB,YAAAvuB,OACA,MACA,WACA,QACAopB,EAAA0C,EAAA7b,EAAAlK,EAAAvD,EAAAisB,iBAAAxe,GAAAlM,GAaA,IAVA,UAAAA,EAAAqpB,QAAAhE,EAAAxnB,SACAqO,EAAAmZ,EAAA,GACArjB,EAAAqjB,IAAAxnB,OAAA,IAIAqO,EAAAya,EAAAqB,EAAA9b,IAAAzN,IAAAyN,EACAlK,EAAA2kB,EAAAqB,EAAAhmB,IAAAvD,IAAAuD,EAGAzF,EAAA,EAAA4J,EAAAkf,EAAAxnB,OAAwCtB,EAAA4J,IAAU5J,EAClD4tB,EAAA9E,EAAA9oB,GACA4tB,GAAAje,GAAAie,GAAAnoB,GACA0lB,EAAA/pB,KAAAwsB,GAcA,OAVA1rB,EAAAyN,MACAzN,EAAAuD,MAGAvD,EAAAksB,MAAA3C,EAAAf,MAAAQ,EAAAC,EAAAM,EAAAR,QAAA/oB,EAAAyN,IAAAzN,EAAAuD,KACAvD,EAAAmsB,WAAA9C,EAAArpB,EAAAksB,OACAlsB,EAAA8rB,OAAAnF,EAAA3mB,EAAA+rB,YAAA3uB,KAAAqQ,EAAAlK,EAAAhC,EAAAslB,cACA7mB,EAAAosB,SAAAjC,EAAAnqB,EAAA8rB,OAAA7C,EAAAxb,EAAAlK,EAAAhC,GACAvB,EAAAqsB,aAAA7B,EAAAxqB,EAAA+rB,YAAA3uB,KAAAmsB,GAEAe,EAAArB,EAAAjpB,EAAAmsB,aAGAG,iBAAA,SAAA1vB,EAAAC,GACA,IAAAmD,EAAAjD,KACAK,EAAA4C,EAAAhD,MAAAI,KACAmsB,EAAAvpB,EAAAuB,QAAAulB,KACA9oB,EAAAZ,EAAAI,QAAAZ,EAAAQ,EAAAI,OAAA4B,OAAAhC,EAAAI,OAAAZ,GAAA,GACAiK,EAAAzJ,EAAAC,SAAAR,GAAAO,KAAAR,GAKA,OAHApB,EAAA8L,SAAAT,KACA7I,EAAAgC,EAAAiN,cAAApG,IAEA0iB,EAAAgD,cACAzE,EAAA9pB,EAAAurB,GAAAvB,OAAAuB,EAAAgD,eAEA,kBAAAvuB,EACAA,EAGA8pB,EAAA9pB,EAAAurB,GAAAvB,OAAAhoB,EAAAqsB,eAOAG,mBAAA,SAAAC,EAAA7vB,EAAAqsB,EAAAyD,GACA,IAAA1sB,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACAulB,EAAA2F,EAAAnE,UACAqE,EAAAprB,EAAAulB,KAAAgE,eACA8B,EAAAD,EAAA3sB,EAAAksB,OACA3B,EAAAvqB,EAAAmsB,WACAU,EAAAF,EAAApC,GACAuC,EAAAL,EAAA5Y,QAAAwU,QAAAkC,GAAAjC,UACAyE,EAAAxrB,EAAA0nB,MAAAQ,MACAA,EAAAsD,EAAAhD,SAAAQ,GAAAsC,GAAA/F,IAAAgG,EACA9uB,EAAAyuB,EAAAzE,OAAA0E,IAAAjD,EAAAoD,EAAAD,IACAI,EAAAvD,EAAAsD,EAAAxrB,EAAA0nB,MAAAO,MACAyD,EAAAzxB,EAAAwG,eAAAgrB,EAAAvrB,SAAAurB,EAAAE,cAEA,OAAAD,IAAAjvB,EAAApB,EAAAqsB,GAAAjrB,GAGAmvB,qBAAA,SAAAlE,GACA,IACAnrB,EAAA4J,EADAlK,KAGA,IAAAM,EAAA,EAAA4J,EAAAuhB,EAAA7pB,OAAmCtB,EAAA4J,IAAU5J,EAC7CN,EAAA0B,KAAAnC,KAAAyvB,mBAAAvH,EAAAgE,EAAAnrB,GAAA+I,OAAA/I,EAAAmrB,IAGA,OAAAzrB,GAMA4vB,kBAAA,SAAAtG,GACA,IAAA9mB,EAAAjD,KACA+J,EAAA9G,EAAA6rB,YAAA7rB,EAAAa,MAAAb,EAAAgB,OACAkR,EAAAlS,EAAA6rB,YAAA7rB,EAAAc,KAAAd,EAAAiB,IACA8lB,EAAAlU,EAAA7S,EAAA8rB,OAAA,OAAAhF,EAAA,OAEA,OAAA5U,EAAApL,GAAA9G,EAAAosB,SAAAtrB,KAAAimB,IAAA/mB,EAAAosB,SAAAtrB,KAAA,EAAAd,EAAAosB,SAAArrB,QAGAmL,iBAAA,SAAArF,EAAAjK,EAAAC,GACA,IAAAmD,EAAAjD,KACA+pB,EAAA,KAUA,QARAnf,IAAA/K,QAAA+K,IAAA9K,IACAiqB,EAAA9mB,EAAA+rB,YAAA1uB,SAAAR,GAAAD,IAGA,OAAAkqB,IACAA,EAAAoB,EAAArhB,EAAA7G,IAGA,OAAA8mB,EACA,OAAA9mB,EAAAotB,kBAAAtG,IAIAuG,gBAAA,SAAAzwB,GACA,IAAAqsB,EAAAlsB,KAAAuwB,WACA,OAAA1wB,GAAA,GAAAA,EAAAqsB,EAAA7pB,OACArC,KAAAqwB,kBAAAnE,EAAArsB,GAAAiK,OACA,MAGA0mB,iBAAA,SAAAC,GACA,IAAAxtB,EAAAjD,KACA+J,EAAA9G,EAAA6rB,YAAA7rB,EAAAa,MAAAb,EAAAgB,OACAkR,EAAAlS,EAAA6rB,YAAA7rB,EAAAc,KAAAd,EAAAiB,IACA8lB,GAAAjgB,GAAA0mB,EAAAtb,GAAApL,EAAA,IAAA9G,EAAAosB,SAAAtrB,KAAA,EAAAd,EAAAosB,SAAAtrB,MAAAd,EAAAosB,SAAArrB,MACA+lB,EAAAjU,EAAA7S,EAAA8rB,OAAA,MAAA/E,EAAA,QAEA,OAAA9B,EAAA6B,IAOA2G,cAAA,SAAAzvB,GACA,IAAAgC,EAAAjD,KACA2wB,EAAA1tB,EAAAuB,QAAA0nB,MACA0E,EAAA3tB,EAAA6B,IAAAkB,YAAA/E,GAAA6C,MACA+sB,EAAApyB,EAAAqyB,UAAAH,EAAAI,aACAC,EAAAhyB,KAAAid,IAAA4U,GACAI,EAAAjyB,KAAAkd,IAAA2U,GACAK,EAAAzyB,EAAAwG,eAAA0rB,EAAA7xB,SAAAR,EAAA0G,OAAAE,iBAEA,OAAA0rB,EAAAI,EAAAE,EAAAD,GAMA/B,iBAAA,SAAAiC,GACA,IAAAluB,EAAAjD,KAEA2vB,EAAA1sB,EAAAuB,QAAAulB,KAAAgE,eAAApF,YAEAyI,EAAAnuB,EAAAwsB,mBAAAvH,EAAAiJ,GAAA,KAAAxB,GACAiB,EAAA3tB,EAAAytB,cAAAU,GACAC,EAAApuB,EAAAY,eAAAZ,EAAAa,MAAAb,EAAAgB,OAEAynB,EAAA1sB,KAAA2a,MAAA0X,EAAAT,GACA,OAAAlF,EAAA,EAAAA,EAAA,KAIArD,EAAAiJ,kBAAA,OAAApD,EAAAN,uCC7wBAtkB,EAAAC,QAAiBhL,EAAQ,QACzB+K,EAAAC,QAAAwB,OAAwBxM,EAAQ,QAChC+K,EAAAC,QAAA1B,OAAwBtJ,EAAQ,QAChC+K,EAAAC,QAAA/E,QAAyBjG,EAAQ,6CCHjC,IAAAE,EAAcF,EAAQ,QAKtBgL,EAAAD,EAAAC,SAKAgoB,MAAA,SAAAtxB,GACAA,EAAA6E,IAAA0sB,UAAA,IAAAvxB,EAAA6D,MAAA7D,EAAAgE,SAcAwtB,YAAA,SAAA3sB,EAAAoC,EAAAC,EAAArD,EAAAG,EAAAwD,GACA,GAAAA,EAAA,CAGA,IAAAiqB,EAAA,KACAtnB,EAAApL,KAAA0R,IAAAjJ,EAAAxD,EAAA,EAAAytB,EAAA5tB,EAAA,EAAA4tB,GAEA5sB,EAAA0D,OAAAtB,EAAAkD,EAAAjD,GACArC,EAAA2D,OAAAvB,EAAApD,EAAAsG,EAAAjD,GACArC,EAAA6sB,MAAAzqB,EAAApD,EAAAqD,EAAAD,EAAApD,EAAAqD,EAAAiD,KACAtF,EAAA2D,OAAAvB,EAAApD,EAAAqD,EAAAlD,EAAAmG,GACAtF,EAAA6sB,MAAAzqB,EAAApD,EAAAqD,EAAAlD,EAAAiD,EAAApD,EAAAsG,EAAAjD,EAAAlD,EAAAmG,GACAtF,EAAA2D,OAAAvB,EAAAkD,EAAAjD,EAAAlD,GACAa,EAAA6sB,MAAAzqB,EAAAC,EAAAlD,EAAAiD,EAAAC,EAAAlD,EAAAmG,KACAtF,EAAA2D,OAAAvB,EAAAC,EAAAiD,GACAtF,EAAA6sB,MAAAzqB,EAAAC,EAAAD,EAAAkD,EAAAjD,EAAAiD,GACAtF,EAAA8sB,YACA9sB,EAAA0D,OAAAtB,EAAAC,QAEArC,EAAA+sB,KAAA3qB,EAAAC,EAAArD,EAAAG,IAIA6D,UAAA,SAAAhD,EAAAgtB,EAAArqB,EAAAP,EAAAC,EAAAwH,GACA,IAAA/F,EAAAmpB,EAAAC,EAAAC,EAAAhuB,EAAA8F,EAGA,GAFA4E,KAAA,EAEAmjB,GAAA,kBAAAA,IACAlpB,EAAAkpB,EAAAI,WACA,8BAAAtpB,GAAA,+BAAAA,GACA9D,EAAAqtB,UAAAL,EAAA5qB,EAAA4qB,EAAAhuB,MAAA,EAAAqD,EAAA2qB,EAAA7tB,OAAA,EAAA6tB,EAAAhuB,MAAAguB,EAAA7tB,aAKA,KAAAmD,MAAAK,OAAA,IASA,OALA3C,EAAAuC,OACAvC,EAAAstB,UAAAlrB,EAAAC,GACArC,EAAAutB,OAAA1jB,EAAA3P,KAAA4c,GAAA,KACA9W,EAAAyD,YAEAupB,GAEA,QACAhtB,EAAAwtB,IAAA,IAAA7qB,EAAA,IAAAzI,KAAA4c,IACA9W,EAAA8sB,YACA,MACA,eACAG,EAAA,EAAAtqB,EAAAzI,KAAA6c,KAAA,GACA5X,EAAA8tB,EAAA/yB,KAAA6c,KAAA,KACA/W,EAAA0D,QAAAupB,EAAA,EAAA9tB,EAAA,GACAa,EAAA2D,OAAAspB,EAAA,EAAA9tB,EAAA,GACAa,EAAA2D,OAAA,KAAAxE,EAAA,GACAa,EAAA8sB,YACA,MACA,WACA7nB,EAAA,EAAA/K,KAAAC,MAAAwI,EACA3C,EAAA+sB,MAAA9nB,KAAA,EAAAA,EAAA,EAAAA,GACA,MACA,kBACA,IAAA+gB,EAAArjB,EAAAzI,KAAAC,MACAszB,GAAAzH,EACA0H,GAAA1H,EACA2H,EAAAzzB,KAAAC,MAAAwI,EAMAzH,KAAAyxB,YAAA3sB,EAAAytB,EAAAC,EAAAC,IAAA,KAAAhrB,GACA,MACA,cACAsC,EAAA,EAAA/K,KAAAC,MAAAwI,EACA3C,EAAA0D,QAAAuB,EAAA,GACAjF,EAAA2D,OAAA,EAAAsB,GACAjF,EAAA2D,OAAAsB,EAAA,GACAjF,EAAA2D,OAAA,GAAAsB,GACAjF,EAAA8sB,YACA,MACA,YACA9sB,EAAA0D,OAAA,EAAAf,GACA3C,EAAA2D,OAAA,GAAAhB,GACA3C,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACA,MACA,eACAuqB,EAAAhzB,KAAAid,IAAAjd,KAAA4c,GAAA,GAAAnU,EACAwqB,EAAAjzB,KAAAkd,IAAAld,KAAA4c,GAAA,GAAAnU,EACA3C,EAAA0D,QAAAwpB,GAAAC,GACAntB,EAAA2D,OAAAupB,EAAAC,GACAntB,EAAA0D,QAAAwpB,EAAAC,GACAntB,EAAA2D,OAAAupB,GAAAC,GACA,MACA,WACAntB,EAAA0D,OAAA,EAAAf,GACA3C,EAAA2D,OAAA,GAAAhB,GACA3C,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACAuqB,EAAAhzB,KAAAid,IAAAjd,KAAA4c,GAAA,GAAAnU,EACAwqB,EAAAjzB,KAAAkd,IAAAld,KAAA4c,GAAA,GAAAnU,EACA3C,EAAA0D,QAAAwpB,GAAAC,GACAntB,EAAA2D,OAAAupB,EAAAC,GACAntB,EAAA0D,QAAAwpB,EAAAC,GACAntB,EAAA2D,OAAAupB,GAAAC,GACA,MACA,WACAntB,EAAA0D,QAAAf,EAAA,GACA3C,EAAA2D,OAAAhB,EAAA,GACA,MACA,WACA3C,EAAA0D,OAAA,KACA1D,EAAA2D,OAAAhB,EAAA,GACA,MAGA3C,EAAA4I,OACA5I,EAAA4D,SACA5D,EAAAmD,YAGAsJ,SAAA,SAAAzM,EAAAwL,GACAxL,EAAAuC,OACAvC,EAAAyD,YACAzD,EAAA+sB,KAAAvhB,EAAAvM,KAAAuM,EAAApM,IAAAoM,EAAAtM,MAAAsM,EAAAvM,KAAAuM,EAAAnM,OAAAmM,EAAApM,KACAY,EAAA4tB,QAGAlhB,WAAA,SAAA1M,GACAA,EAAAmD,WAGAQ,OAAA,SAAA3D,EAAAkM,EAAAmF,EAAAwc,GACA,GAAAxc,EAAAxI,YAOA,MANA,UAAAwI,EAAAxI,cAAAglB,GAAA,UAAAxc,EAAAxI,aAAAglB,EACA7tB,EAAA2D,OAAAuI,EAAA9J,EAAAiP,EAAAhP,GAEArC,EAAA2D,OAAA0N,EAAAjP,EAAA8J,EAAA7J,QAEArC,EAAA2D,OAAA0N,EAAAjP,EAAAiP,EAAAhP,GAIAgP,EAAA/I,QAKAtI,EAAA8tB,cACAD,EAAA3hB,EAAAD,sBAAAC,EAAAE,kBACAyhB,EAAA3hB,EAAAC,sBAAAD,EAAAI,kBACAuhB,EAAAxc,EAAAjF,kBAAAiF,EAAApF,sBACA4hB,EAAAxc,EAAA/E,kBAAA+E,EAAAlF,sBACAkF,EAAAjP,EACAiP,EAAAhP,GAVArC,EAAA2D,OAAA0N,EAAAjP,EAAAiP,EAAAhP,KAuBA1I,EAAA8yB,MAAAhoB,EAAAgoB,MASA9yB,EAAAo0B,qBAAA,SAAA/tB,GACAA,EAAAyD,YACAgB,EAAAkoB,YAAA/d,MAAAnK,EAAAiK,iDC7MAlK,EAAAC,QAAA,SAAA2C,GACAA,EAAA4mB,QAAA,SAAApoB,EAAAhI,GAEA,OADAA,EAAAkG,KAAA,UACA,IAAAsD,EAAAxB,EAAAhI,0CCHA4G,EAAAC,QAAA,SAAA2C,GAEAA,EAAA6mB,SAAA,SAAAroB,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,WAEA,IAAAsD,EAAAxB,EAAAhI,0CCFA,IAAAjE,GAIAE,KAAA,aAOAq0B,IAAA,WACA,IAAA5wB,EAAA,EACA,kBACA,OAAAA,KAHA,GAaAipB,cAAA,SAAAvhB,GACA,cAAAA,GAAA,qBAAAA,GASAlJ,QAAA2S,MAAA3S,QAAA2S,MAAA3S,QAAA,SAAAkJ,GACA,yBAAAqB,OAAAE,UAAA6mB,SAAAlpB,KAAAc,IASAS,SAAA,SAAAT,GACA,cAAAA,GAAA,oBAAAqB,OAAAE,UAAA6mB,SAAAlpB,KAAAc,IASA7E,eAAA,SAAA6E,EAAAmpB,GACA,2BAAAnpB,EAAAmpB,EAAAnpB,GAUAsE,sBAAA,SAAAtE,EAAAjK,EAAAozB,GACA,OAAAx0B,EAAAwG,eAAAxG,EAAAmC,QAAAkJ,KAAAjK,GAAAiK,EAAAmpB,IAWAvuB,SAAA,SAAAwuB,EAAA5f,EAAA6f,GACA,GAAAD,GAAA,oBAAAA,EAAAlqB,KACA,OAAAkqB,EAAAxf,MAAAyf,EAAA7f,IAaAvN,KAAA,SAAAqtB,EAAAF,EAAAC,EAAA3zB,GACA,IAAAuB,EAAAsyB,EAAA/c,EACA,GAAA7X,EAAAmC,QAAAwyB,GAEA,GADAC,EAAAD,EAAA/wB,OACA7C,EACA,IAAAuB,EAAAsyB,EAAA,EAAqBtyB,GAAA,EAAQA,IAC7BmyB,EAAAlqB,KAAAmqB,EAAAC,EAAAryB,WAGA,IAAAA,EAAA,EAAeA,EAAAsyB,EAAStyB,IACxBmyB,EAAAlqB,KAAAmqB,EAAAC,EAAAryB,WAGG,GAAAtC,EAAA8L,SAAA6oB,GAGH,IAFA9c,EAAAnL,OAAAmL,KAAA8c,GACAC,EAAA/c,EAAAjU,OACAtB,EAAA,EAAcA,EAAAsyB,EAAStyB,IACvBmyB,EAAAlqB,KAAAmqB,EAAAC,EAAA9c,EAAAvV,IAAAuV,EAAAvV,KAYAuyB,YAAA,SAAAC,EAAAC,GACA,IAAAzyB,EAAA4J,EAAA8oB,EAAAC,EAEA,IAAAH,IAAAC,GAAAD,EAAAlxB,SAAAmxB,EAAAnxB,OACA,SAGA,IAAAtB,EAAA,EAAA4J,EAAA4oB,EAAAlxB,OAA+BtB,EAAA4J,IAAU5J,EAIzC,GAHA0yB,EAAAF,EAAAxyB,GACA2yB,EAAAF,EAAAzyB,GAEA0yB,aAAAlgB,OAAAmgB,aAAAngB,OACA,IAAA9U,EAAA60B,YAAAG,EAAAC,GACA,cAEI,GAAAD,IAAAC,EAEJ,SAIA,UAQA5c,MAAA,SAAAmX,GACA,GAAAxvB,EAAAmC,QAAAqtB,GACA,OAAAA,EAAAptB,IAAApC,EAAAqY,OAGA,GAAArY,EAAA8L,SAAA0jB,GAAA,CAMA,IALA,IAAA9X,KACAG,EAAAnL,OAAAmL,KAAA2X,GACA0F,EAAArd,EAAAjU,OACA2V,EAAA,EAESA,EAAA2b,IAAU3b,EACnB7B,EAAAG,EAAA0B,IAAAvZ,EAAAqY,MAAAmX,EAAA3X,EAAA0B,KAGA,OAAA7B,EAGA,OAAA8X,GAQA2F,QAAA,SAAA5gB,EAAAmD,EAAA8X,EAAAzpB,GACA,IAAAqvB,EAAA1d,EAAAnD,GACA0X,EAAAuD,EAAAjb,GAEAvU,EAAA8L,SAAAspB,IAAAp1B,EAAA8L,SAAAmgB,GACAjsB,EAAAiN,MAAAmoB,EAAAnJ,EAAAlmB,GAEA2R,EAAAnD,GAAAvU,EAAAqY,MAAA4T,IAQAoJ,UAAA,SAAA9gB,EAAAmD,EAAA8X,GACA,IAAA4F,EAAA1d,EAAAnD,GACA0X,EAAAuD,EAAAjb,GAEAvU,EAAA8L,SAAAspB,IAAAp1B,EAAA8L,SAAAmgB,GACAjsB,EAAAiL,QAAAmqB,EAAAnJ,GACGvU,EAAAI,eAAAvD,KACHmD,EAAAnD,GAAAvU,EAAAqY,MAAA4T,KAaAhf,MAAA,SAAAyK,EAAA8X,EAAAzpB,GACA,IAEAkH,EAAA3K,EAAAuV,EAAAqd,EAAA3b,EAFA+b,EAAAt1B,EAAAmC,QAAAqtB,SACAtjB,EAAAopB,EAAA1xB,OAGA,IAAA5D,EAAA8L,SAAA4L,GACA,OAAAA,EAMA,IAHA3R,QACAkH,EAAAlH,EAAAwvB,QAAAv1B,EAAAm1B,QAEA7yB,EAAA,EAAaA,EAAA4J,IAAU5J,EAEvB,GADAktB,EAAA8F,EAAAhzB,GACAtC,EAAA8L,SAAA0jB,GAKA,IADA3X,EAAAnL,OAAAmL,KAAA2X,GACAjW,EAAA,EAAA2b,EAAArd,EAAAjU,OAAkC2V,EAAA2b,IAAU3b,EAC5CtM,EAAA4K,EAAA0B,GAAA7B,EAAA8X,EAAAzpB,GAIA,OAAA2R,GAUAzM,QAAA,SAAAyM,EAAA8X,GACA,OAAAxvB,EAAAiN,MAAAyK,EAAA8X,GAAwC+F,OAAAv1B,EAAAq1B,aAUxCtxB,OAAA,SAAA2T,GAIA,IAHA,IAAA8d,EAAA,SAAAnqB,EAAAkJ,GACAmD,EAAAnD,GAAAlJ,GAEA/I,EAAA,EAAA4J,EAAA6I,UAAAnR,OAA0CtB,EAAA4J,IAAU5J,EACpDtC,EAAAsH,KAAAyN,UAAAzS,GAAAkzB,GAEA,OAAA9d,GAMAP,SAAA,SAAAse,GACA,IAAAjxB,EAAAjD,KACAm0B,EAAAD,KAAA3d,eAAA,eAAA2d,EAAAE,YAAA,WACA,OAAAnxB,EAAAyQ,MAAA1T,KAAAwT,YAGA6gB,EAAA,WACAr0B,KAAAo0B,YAAAD,GAYA,OATAE,EAAAhpB,UAAApI,EAAAoI,UACA8oB,EAAA9oB,UAAA,IAAAgpB,EACAF,EAAA3xB,OAAA/D,EAAAmX,SAEAse,GACAz1B,EAAA+D,OAAA2xB,EAAA9oB,UAAA6oB,GAGAC,EAAAG,UAAArxB,EAAAoI,UACA8oB,IAIA7qB,EAAAC,QAAA9K,EAWAA,EAAA81B,aAAA91B,EAAAiG,SAUAjG,EAAAqV,QAAA,SAAArB,EAAA7N,EAAA4vB,GACA,OAAAjhB,MAAAlI,UAAAyI,QAAA9K,KAAAyJ,EAAA7N,EAAA4vB,IAUA/1B,EAAAg2B,kBAAAh2B,EAAAwG,eASAxG,EAAAi2B,yBAAAj2B,EAAA2P,2DChVA9E,EAAAC,SACAuT,WAAA,aACAC,cAAA,aACAC,MAAA,WACAC,YAAA,aACAC,OAAA,aACAC,OAAA,aACAC,QAAA,aACAC,OAAA,OACAC,gBAAA,aACAC,MAAA,SACAC,YAAA,YACAC,OAAA,WACAC,WAAA,aACAC,WAAA,YACAC,YAAA,WACAC,WAAA,YACAC,OAAA,YACAC,gBAAA,aACAC,UAAA,aACAC,SAAA,WACAC,MAAA,WACAC,UAAA,SACAC,UAAA,WACAC,eAAA,YACAC,UAAA,aACAC,WAAA,SACAC,UAAA,aACAC,WAAA,aACAC,aAAA,WACAC,gBAAA,WACAC,YAAA,WACAC,YAAA,YACAC,SAAA,SACAC,YAAA,aACAC,cAAA,aACAC,eAAA,WACAC,eAAA,UACAC,eAAA,UACAC,eAAA,WACAC,YAAA,WACAC,UAAA,YACAC,aAAA,WACAC,SAAA,aACAC,SAAA,aACAC,YAAA,YACAC,WAAA,WACAC,aAAA,aACAC,aAAA,WACAC,SAAA,WACAC,WAAA,aACAC,YAAA,aACAC,MAAA,WACAC,WAAA,YACAC,MAAA,aACAC,OAAA,SACAC,aAAA,YACAC,MAAA,aACAC,UAAA,aACAC,SAAA,aACAC,WAAA,WACAC,QAAA,UACAC,OAAA,aACAC,OAAA,aACAC,UAAA,aACAC,eAAA,aACAC,WAAA,WACAC,cAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,sBAAA,aACAC,WAAA,aACAC,YAAA,aACAC,WAAA,aACAC,WAAA,aACAC,aAAA,aACAC,eAAA,YACAC,cAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,aACAC,MAAA,SACAC,WAAA,WACAC,OAAA,aACAC,SAAA,WACAC,QAAA,SACAC,kBAAA,aACAC,YAAA,SACAC,cAAA,YACAC,cAAA,aACAC,gBAAA,YACAC,iBAAA,aACAC,mBAAA,WACAC,iBAAA,YACAC,iBAAA,YACAC,cAAA,WACAC,WAAA,aACAC,WAAA,aACAC,UAAA,aACAC,aAAA,aACAC,MAAA,SACAC,SAAA,aACAC,OAAA,WACAC,WAAA,YACAC,QAAA,WACAC,WAAA,UACAC,QAAA,aACAC,eAAA,aACAC,WAAA,aACAC,eAAA,aACAC,eAAA,aACAC,YAAA,aACAC,WAAA,aACAC,MAAA,YACAC,MAAA,aACAC,MAAA,aACAC,YAAA,aACAC,QAAA,WACAC,eAAA,YACAC,KAAA,SACAC,WAAA,aACAC,WAAA,YACAC,aAAA,WACAC,QAAA,aACAC,YAAA,YACAC,UAAA,WACAC,UAAA,aACAC,QAAA,WACAC,QAAA,aACAC,SAAA,aACAC,WAAA,YACAC,WAAA,aACAC,WAAA,aACAC,MAAA,aACAC,aAAA,WACAC,WAAA,YACAC,KAAA,aACAC,MAAA,WACAC,SAAA,aACAC,QAAA,WACAC,WAAA,YACAC,QAAA,aACAC,OAAA,aACAC,OAAA,aACAC,YAAA,aACAC,QAAA,WACAC,aAAA,kDCpJA,IAAA3nB,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtBo2B,EAAAr2B,EAAA0G,OAEA1G,EAAAa,KAAA,UACAwH,UACAC,MACAwG,QAAA,GACAjM,gBAAAwzB,EAAArtB,aACAxF,YAAA,EACAE,YAAA2yB,EAAArtB,aACAhG,eAAA,OACAE,cACAE,iBAAA,EACAE,gBAAA,QACAyP,iBAAA,EACA3D,MAAA,MAKApE,EAAAC,QAAA/K,EAAAgE,QACAiE,KAAA,WACA,IAOA5G,EAAA+0B,EAAA5jB,EAAA6jB,EAPA5xB,EAAAjD,KACAqmB,EAAApjB,EAAA4T,MACA/R,EAAA7B,EAAAsR,OAAAzP,IACA8G,EAAAya,EAAAza,SACAkB,EAAA7J,EAAAuK,UAAA4F,QACA0hB,EAAAH,EAAAhuB,SAAAC,KACAmuB,GAAA,EA2BA,IAvBA9xB,EAAA+xB,OAAAloB,EAAAzK,QACAyK,EAAA3K,KAAA2K,EAAA,IAGAhI,EAAAuC,OAGAvC,EAAAzD,QAAAglB,EAAA/kB,gBAAAwzB,EAAAxzB,eAGAwD,EAAA0C,aACA1C,EAAA0C,YAAA6e,EAAA7kB,YAAAszB,EAAAtzB,YAGAsD,EAAArD,eAAA4kB,EAAA3kB,kBAAAozB,EAAApzB,iBACAoD,EAAAnD,SAAA0kB,EAAAzkB,iBAAAkzB,EAAAlzB,gBACAkD,EAAAjD,UAAAwkB,EAAAvkB,aAAAgzB,EAAAhzB,YACAgD,EAAA/C,YAAAskB,EAAArkB,aAAA2yB,EAAArtB,aAGAxC,EAAAyD,YACAwsB,GAAA,EAEAl1B,EAAA,EAAiBA,EAAAiN,EAAAzK,SAAuBxC,EACxC+0B,EAAA9nB,EAAAjN,GACAmR,EAAAvS,EAAAoS,aAAA/D,EAAAjN,GACAg1B,EAAAD,EAAA/d,MAGA,IAAAhX,EACAg1B,EAAAnlB,OACA5K,EAAA0D,OAAAqsB,EAAA3tB,EAAA2tB,EAAA1tB,GACA4tB,EAAAl1B,IAGAmR,GAAA,IAAA+jB,EAAA/jB,EAAAlE,EAAAioB,GAEAF,EAAAnlB,OACAqlB,IAAAl1B,EAAA,IAAA+L,IAAA,IAAAmpB,EAEAjwB,EAAA0D,OAAAqsB,EAAA3tB,EAAA2tB,EAAA1tB,GAGA1I,EAAAoJ,OAAAY,OAAA3D,EAAAkM,EAAA6F,MAAA+d,EAAA/d,OAEAke,EAAAl1B,IAKAiF,EAAA4D,SACA5D,EAAAmD,gDCtFA,IAAA3J,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACA81B,aAQA3rB,EAAAC,SAKA2rB,YAQAC,SAAA,EAMAC,SAAA,SAAAH,GACA,IAAApb,EAAA7Z,KAAAk1B,YACAG,OAAAJ,GAAAliB,QAAA,SAAAuiB,IACA,IAAAzb,EAAA/F,QAAAwhB,IACAzb,EAAA1X,KAAAmzB,KAIAt1B,KAAAm1B,YAOAI,WAAA,SAAAN,GACA,IAAApb,EAAA7Z,KAAAk1B,YACAG,OAAAJ,GAAAliB,QAAA,SAAAuiB,GACA,IAAAE,EAAA3b,EAAA/F,QAAAwhB,IACA,IAAAE,GACA3b,EAAA9F,OAAAyhB,EAAA,KAIAx1B,KAAAm1B,YAOA5D,MAAA,WACAvxB,KAAAk1B,YACAl1B,KAAAm1B,YAQA/f,MAAA,WACA,OAAApV,KAAAk1B,SAAA7yB,QAQAozB,OAAA,WACA,OAAAz1B,KAAAk1B,UAYAQ,OAAA,SAAAz1B,EAAA01B,EAAAriB,GACA,IAEAvS,EAAA60B,EAAAN,EAAAO,EAAA5iB,EAFA6iB,EAAA91B,KAAA81B,YAAA71B,GACA0K,EAAAmrB,EAAAzzB,OAGA,IAAAtB,EAAA,EAAaA,EAAA4J,IAAU5J,EAIvB,GAHA60B,EAAAE,EAAA/0B,GACAu0B,EAAAM,EAAAN,OACAriB,EAAAqiB,EAAAK,GACA,oBAAA1iB,IACA4iB,GAAA51B,GAAAo1B,OAAA/hB,OACAuiB,EAAA1zB,KAAAyzB,EAAApxB,UACA,IAAAyO,EAAAS,MAAA4hB,EAAAO,IACA,SAKA,UAQAC,YAAA,SAAA71B,GACA,IAAA81B,EAAA91B,EAAA+1B,WAAA/1B,EAAA+1B,aACA,GAAAD,EAAA3zB,KAAApC,KAAAm1B,SACA,OAAAY,EAAAD,YAGA,IAAAb,KACAa,KACApzB,EAAAzC,KAAAyC,WACA8B,EAAA9B,EAAA8B,SAAA9B,EAAA8B,QAAAywB,YA2BA,OAzBAj1B,KAAAk1B,SAAAG,OAAA3yB,EAAAuyB,aAAAliB,QAAA,SAAAuiB,GACA,IAAAE,EAAAP,EAAAnhB,QAAAwhB,GACA,QAAAE,EAAA,CAIA,IAAApzB,EAAAkzB,EAAAlzB,GACAyC,EAAAL,EAAApC,IACA,IAAAyC,KAIA,IAAAA,IACAA,EAAApG,EAAAqY,MAAAxY,EAAA0G,OAAAiwB,QAAA7yB,KAGA6yB,EAAA9yB,KAAAmzB,GACAQ,EAAA3zB,MACAmzB,SACA9wB,QAAAK,YAIAkxB,EAAAD,cACAC,EAAA3zB,GAAApC,KAAAm1B,SACAW,GASAG,YAAA,SAAAh2B,UACAA,EAAA+1B,mCCrKA,IAAA9pB,EAAY3N,EAAQ,QAARA,GAEZ2N,EAAAzN,QAAgBF,EAAQ,QAGxBA,EAAQ,OAARA,CAA6B2N,GAE7BA,EAAAgqB,UAAkB33B,EAAQ,QAC1B2N,EAAAiqB,iBAAyB53B,EAAQ,QACjC2N,EAAA5N,SAAiBC,EAAQ,QACzB2N,EAAA1N,QAAgBD,EAAQ,QACxB2N,EAAAvF,SAAiBpI,EAAQ,QACzB2N,EAAAkqB,YAAoB73B,EAAQ,QAC5B2N,EAAAxN,QAAgBH,EAAQ,QACxB2N,EAAAmqB,SAAiB93B,EAAQ,QACzB2N,EAAA+oB,QAAgB12B,EAAQ,QACxB2N,EAAAkc,MAAc7pB,EAAQ,QACtB2N,EAAAmc,aAAqB9pB,EAAQ,QAC7B2N,EAAAoqB,MAAc/3B,EAAQ,QACtB2N,EAAAqqB,QAAgBh4B,EAAQ,QAExBA,EAAQ,OAARA,CAAgC2N,GAChC3N,EAAQ,OAARA,CAAuC2N,GAEvC3N,EAAQ,OAARA,CAAmC2N,GACnC3N,EAAQ,OAARA,CAAiC2N,GACjC3N,EAAQ,OAARA,CAA+B2N,GAC/B3N,EAAQ,OAARA,CAAoC2N,GACpC3N,EAAQ,QAARA,CAAqC2N,GACrC3N,EAAQ,OAARA,CAA6B2N,GAI7B3N,EAAQ,QAARA,CAAsC2N,GACtC3N,EAAQ,OAARA,CAAyC2N,GACzC3N,EAAQ,OAARA,CAA2C2N,GAC3C3N,EAAQ,OAARA,CAAuC2N,GACvC3N,EAAQ,OAARA,CAA4C2N,GAC5C3N,EAAQ,OAARA,CAAwC2N,GACxC3N,EAAQ,OAARA,CAA0C2N,GAE1C3N,EAAQ,OAARA,CAA4B2N,GAC5B3N,EAAQ,OAARA,CAA+B2N,GAC/B3N,EAAQ,OAARA,CAAiC2N,GACjC3N,EAAQ,OAARA,CAA6B2N,GAC7B3N,EAAQ,OAARA,CAAkC2N,GAClC3N,EAAQ,OAARA,CAA8B2N,GAC9B3N,EAAQ,OAARA,CAAgC2N,GAGhC,IAAA+oB,EAAc12B,EAAQ,QACtB,QAAAyZ,KAAAid,EACAA,EAAA1e,eAAAyB,IACA9L,EAAA+oB,QAAAG,SAAAH,EAAAjd,IAIA9L,EAAAmqB,SAAA5zB,aAEA6G,EAAAC,QAAA2C,EACA,qBAAAic,SACAA,OAAAjc,SAYAA,EAAA3J,OAAA0yB,EAAA71B,OAAAoK,SASA0C,EAAAsqB,MAAAvB,EAAAwB,MAAAjtB,SASA0C,EAAAwqB,cAAAxqB,EAAA+oB,QAUA/oB,EAAAyqB,WAAAzqB,EAAA1N,QAAAgE,WASA0J,EAAA0qB,cAAA1qB,EAAAzN,QAAAoJ,OASAqE,EAAA2qB,cAAA3qB,EAAAxN,6CCxHA,IAAAJ,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,YACA23B,WAEAC,eAAA,EAEAC,cAAA,GAEAnrB,OACAC,KAAA,UAEA5J,eAAA,SAAAjC,GACA,IAAAe,KACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aAEA,IAAA/B,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAG,EAAAJ,EAAAI,OAEA,GAAAH,EAAA+B,OACA,QAAAtB,EAAA,EAAkBA,EAAAT,EAAA,GAAAD,KAAAgC,SAA6BtB,EAC/CC,EAAAmB,KAAA,qCAAA7B,EAAA,GAAAa,gBAAAJ,GAAA,aACAN,EAAAM,IACAC,EAAAmB,KAAA1B,EAAAM,IAEAC,EAAAmB,KAAA,SAKA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,KAEAlD,QACAqB,QACAE,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAAA,EAAAI,OAAA4B,QAAAhC,EAAAC,SAAA+B,OACAhC,EAAAI,OAAAI,IAAA,SAAAI,EAAAF,GACA,IAAAb,EAAAD,EAAAE,eAAA,GACAwP,EAAAtP,EAAAC,SAAA,GACAgyB,EAAApyB,EAAAG,KAAAU,GACA6L,EAAA0lB,KAAA1lB,WACAwB,EAAA3P,EAAA2P,sBACA6oB,EAAAh3B,EAAAuE,QAAAmC,SAAA2rB,IACA5kB,EAAAd,EAAAzL,gBAAAyL,EAAAzL,gBAAAiN,EAAAuB,EAAAxO,gBAAAJ,EAAAk2B,EAAA91B,iBACAuH,EAAAkE,EAAA5K,YAAA4K,EAAA5K,YAAAoM,EAAAuB,EAAA3N,YAAAjB,EAAAk2B,EAAAj1B,aACAk1B,EAAAtqB,EAAA9K,YAAA8K,EAAA9K,YAAAsM,EAAAuB,EAAA7N,YAAAf,EAAAk2B,EAAAn1B,aAEA,OACAd,KAAAC,EACAC,UAAAwM,EACA3L,YAAA2G,EACA7G,UAAAq1B,EACA92B,OAAAgH,MAAAuI,EAAAtP,KAAAU,KAAAb,EAAAG,KAAAU,GAAAX,OAGAP,MAAAkB,UAQArB,QAAA,SAAAC,EAAAC,GACA,IAEAmB,EAAA4J,EAAAzK,EAFAL,EAAAD,EAAAC,MACAI,EAAAD,KAAAC,MAGA,IAAAc,EAAA,EAAA4J,GAAA1K,EAAAI,KAAAC,cAAA+B,OAAyDtB,EAAA4J,IAAU5J,EACnEb,EAAAD,EAAAE,eAAAY,GAEAb,EAAAG,KAAAR,KACAK,EAAAG,KAAAR,GAAAO,QAAAF,EAAAG,KAAAR,GAAAO,QAIAH,EAAAM,WAKA42B,iBAAA,GAGAxoB,UAAA,GAAA3P,KAAA4c,GAGAwb,cAAA,EAAAp4B,KAAA4c,GAGAyb,UACAC,WACAb,MAAA,WACA,UAEAx1B,MAAA,SAAAs2B,EAAAl3B,GACA,IAAAm3B,EAAAn3B,EAAAI,OAAA82B,EAAA13B,OACAiK,EAAA,KAAAzJ,EAAAC,SAAAi3B,EAAAz3B,cAAAO,KAAAk3B,EAAA13B,OAWA,OATApB,EAAAmC,QAAA42B,IAGAA,IAAApkB,QACAokB,EAAA,IAAA1tB,GAEA0tB,GAAA1tB,EAGA0tB,OAMAl5B,EAAAa,KAAA,MAAAV,EAAAqY,MAAAxY,EAAAm5B,WACAn5B,EAAAa,KAAA,OACAg4B,iBAAA,IAGA7tB,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAAorB,SAAAvrB,EAAAG,YAAAqrB,IAAAxrB,EAAAI,kBAAA9J,QAEAiK,gBAAA9F,EAAAgxB,IAEA3jB,WAAAvV,EAAAE,KAGAi5B,aAAA,SAAA93B,GAGA,IAFA,IAAA+3B,EAAA,EAEApJ,EAAA,EAAkBA,EAAA3uB,IAAkB2uB,EACpCzuB,KAAAC,MAAAmB,iBAAAqtB,MACAoJ,EAIA,OAAAA,GAGAt3B,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAsQ,EAAAtQ,EAAAsQ,UACA1L,EAAA5E,EAAAuE,QACAyyB,EAAApyB,EAAA8B,SAAA2rB,IACAwF,EAAAvnB,EAAAvM,MAAAuM,EAAAxM,KAAAkzB,EAAAn1B,YACAi2B,EAAAxnB,EAAApM,OAAAoM,EAAArM,IAAA+yB,EAAAn1B,YACA8B,EAAA5E,KAAA0R,IAAAonB,EAAAC,GACAjN,GAAiB5jB,EAAA,EAAAC,EAAA,GACjBjH,EAAA+C,EAAA4J,UACAsqB,EAAAtyB,EAAAsyB,iBACAC,EAAAvyB,EAAAuyB,cAGA,GAAAA,EAAA,EAAAp4B,KAAA4c,GAAA,CACA,IAAAoc,EAAAnzB,EAAA8J,UAAA,EAAA3P,KAAA4c,IACAoc,GAAA,EAAAh5B,KAAA4c,IAAAoc,GAAAh5B,KAAA4c,IAAA,EAAAoc,GAAAh5B,KAAA4c,GAAA,KACA,IAAAqc,EAAAD,EAAAZ,EACAjiB,GAAiBjO,EAAAlI,KAAAid,IAAA+b,GAAA7wB,EAAAnI,KAAAkd,IAAA8b,IACjBE,GAAehxB,EAAAlI,KAAAid,IAAAgc,GAAA9wB,EAAAnI,KAAAkd,IAAA+b,IACfE,EAAAH,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAh5B,KAAA4c,IAAA,EAAA5c,KAAA4c,IAAAqc,EACAG,EAAAJ,GAAA,GAAAh5B,KAAA4c,IAAA,GAAA5c,KAAA4c,IAAAqc,GAAAD,GAAA,IAAAh5B,KAAA4c,IAAA,IAAA5c,KAAA4c,IAAAqc,EACAI,EAAAL,IAAAh5B,KAAA4c,KAAA5c,KAAA4c,IAAAqc,GAAAD,GAAAh5B,KAAA4c,IAAA5c,KAAA4c,IAAAqc,EACAK,EAAAN,GAAA,IAAAh5B,KAAA4c,IAAA,IAAA5c,KAAA4c,IAAAqc,GAAAD,GAAA,IAAAh5B,KAAA4c,IAAA,IAAA5c,KAAA4c,IAAAqc,EACAM,EAAApB,EAAA,IACAzmB,GAAexJ,EAAAmxB,GAAA,EAAAr5B,KAAA0R,IAAAyE,EAAAjO,GAAAiO,EAAAjO,EAAA,IAAAqxB,GAAAL,EAAAhxB,GAAAgxB,EAAAhxB,EAAA,IAAAqxB,IAAApxB,EAAAmxB,GAAA,EAAAt5B,KAAA0R,IAAAyE,EAAAhO,GAAAgO,EAAAhO,EAAA,IAAAoxB,GAAAL,EAAA/wB,GAAA+wB,EAAA/wB,EAAA,IAAAoxB,KACf/xB,GAAeU,EAAAixB,EAAA,EAAAn5B,KAAAwH,IAAA2O,EAAAjO,GAAAiO,EAAAjO,EAAA,IAAAqxB,GAAAL,EAAAhxB,GAAAgxB,EAAAhxB,EAAA,IAAAqxB,IAAApxB,EAAAixB,EAAA,EAAAp5B,KAAAwH,IAAA2O,EAAAhO,GAAAgO,EAAAhO,EAAA,IAAAoxB,GAAAL,EAAA/wB,GAAA+wB,EAAA/wB,EAAA,IAAAoxB,KACfxuB,GAAgBjG,MAAA,IAAA0C,EAAAU,EAAAwJ,EAAAxJ,GAAAjD,OAAA,IAAAuC,EAAAW,EAAAuJ,EAAAvJ,IAChBvD,EAAA5E,KAAA0R,IAAAonB,EAAA/tB,EAAAjG,MAAAi0B,EAAAhuB,EAAA9F,QACA6mB,GAAc5jB,GAAA,IAAAV,EAAAU,EAAAwJ,EAAAxJ,GAAAC,GAAA,IAAAX,EAAAW,EAAAuJ,EAAAvJ,IAGdlH,EAAA6B,YAAAmB,EAAAu1B,kBAAAt4B,EAAAG,MACAJ,EAAAw4B,YAAAz5B,KAAAwH,KAAA5C,EAAA3D,EAAA6B,aAAA,KACA7B,EAAAy4B,YAAA15B,KAAAwH,IAAA2wB,EAAAl3B,EAAAw4B,YAAA,WACAx4B,EAAA04B,cAAA14B,EAAAw4B,YAAAx4B,EAAAy4B,aAAAz4B,EAAA24B,yBACA34B,EAAA44B,QAAA/N,EAAA5jB,EAAAjH,EAAAw4B,YACAx4B,EAAA64B,QAAAhO,EAAA3jB,EAAAlH,EAAAw4B,YAEAv4B,EAAA64B,MAAA91B,EAAA+1B,iBAEA/1B,EAAAw1B,YAAAx4B,EAAAw4B,YAAAx4B,EAAA04B,aAAA11B,EAAA20B,aAAA30B,EAAApD,OACAoD,EAAAy1B,YAAA15B,KAAAwH,IAAAvD,EAAAw1B,YAAAx4B,EAAA04B,aAAA,GAEAl6B,EAAAsH,KAAA7F,EAAAG,KAAA,SAAAiyB,EAAAzyB,GACAoD,EAAA8K,cAAAukB,EAAAzyB,EAAA8M,MAIAoB,cAAA,SAAAukB,EAAAzyB,EAAA8M,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAsQ,EAAAtQ,EAAAsQ,UACA1L,EAAA5E,EAAAuE,QACAy0B,EAAAp0B,EAAAiyB,UACAnvB,GAAA4I,EAAAxM,KAAAwM,EAAAvM,OAAA,EACA4D,GAAA2I,EAAArM,IAAAqM,EAAApM,QAAA,EACA6zB,EAAAnzB,EAAA8J,SACAspB,EAAApzB,EAAA8J,SACA7N,EAAAmC,EAAAkK,aACAiqB,EAAAzqB,GAAAssB,EAAAlC,cAAA,EAAAzE,EAAAlyB,OAAA,EAAA6C,EAAAi2B,uBAAAp4B,EAAAT,KAAAR,KAAAgF,EAAAuyB,eAAA,EAAAp4B,KAAA4c,KACA8c,EAAA/rB,GAAAssB,EAAAjC,aAAA,EAAA/zB,EAAAy1B,YACAD,EAAA9rB,GAAAssB,EAAAjC,aAAA,EAAA/zB,EAAAw1B,YACArqB,EAAA3P,EAAA2P,sBAEA3P,EAAA+D,OAAA8vB,GAEA/kB,cAAAtK,EAAApD,MACA4P,OAAA5P,EAGA4N,QACAvG,EAAAS,EAAA1H,EAAA44B,QACA1xB,EAAAS,EAAA3H,EAAA64B,QACAd,aACAC,WACAb,gBACAqB,cACAC,cACAz3B,MAAAmN,EAAAtN,EAAAG,MAAApB,EAAAI,EAAAI,KAAAI,OAAAZ,OAIA,IAAAuQ,EAAAkiB,EAAA7kB,OAGAb,EAAA0lB,EAAA1lB,WACA3H,EAAAxG,EAAA2P,sBACA+qB,EAAAn5B,KAAAC,MAAAuE,QAAAmC,SAAA2rB,IACAliB,EAAAjP,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA8D,EAAAnE,EAAAK,gBAAAtB,EAAAs5B,EAAAh4B,iBACAiP,EAAApO,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAiD,EAAAnE,EAAAkB,YAAAnC,EAAAs5B,EAAAn3B,aACAoO,EAAAtO,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAmD,EAAAnE,EAAAgB,YAAAjC,EAAAs5B,EAAAr3B,aAGA6K,GAAAssB,EAAAlC,gBAEA3mB,EAAA4nB,WADA,IAAAn4B,EACAgF,EAAA8J,SAEA1L,EAAA4J,UAAAxM,KAAAR,EAAA,GAAA4N,OAAAwqB,SAGA7nB,EAAA6nB,SAAA7nB,EAAA4nB,WAAA5nB,EAAAgnB,eAGA9E,EAAAxkB,SAGAkrB,eAAA,WACA,IAGAlvB,EAHAhJ,EAAAd,KAAAmN,aACAjN,EAAAF,KAAA6M,UACAksB,EAAA,EAcA,OAXAt6B,EAAAsH,KAAA7F,EAAAG,KAAA,SAAAqR,EAAA7R,GACAiK,EAAAhJ,EAAAT,KAAAR,GACAuH,MAAA0C,IAAA4H,EAAAtR,SACA24B,GAAA/5B,KAAAsnB,IAAAxc,MAQAivB,GAGAG,uBAAA,SAAApvB,GACA,IAAAivB,EAAA/4B,KAAA6M,UAAAksB,MACA,OAAAA,EAAA,IAAA3xB,MAAA0C,GACA,EAAA9K,KAAA4c,IAAA5c,KAAAsnB,IAAAxc,GAAAivB,GAEA,GAIAP,kBAAA,SAAAY,GAOA,IANA,IAGAt3B,EACAu3B,EAJA7yB,EAAA,EACA3G,EAAAG,KAAAH,MACAwC,EAAA+2B,EAAA/2B,OAIAtB,EAAA,EAAkBA,EAAAsB,EAAYtB,IAC9Be,EAAAs3B,EAAAr4B,GAAA0M,OAAA2rB,EAAAr4B,GAAA0M,OAAA3L,YAAA,EACAu3B,EAAAD,EAAAr4B,GAAAwT,OAAA6kB,EAAAr4B,GAAAwT,OAAA7R,OAAArC,KAAAC,SAAAT,GAAAoS,iBAAA,EAEAzL,EAAA1E,EAAA0E,EAAA1E,EAAA0E,EACAA,EAAA6yB,EAAA7yB,EAAA6yB,EAAA7yB,EAEA,OAAAA,2CCvSA,IAAAlI,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACAwH,UACA2rB,KACAnxB,gBAAA7C,EAAA0G,OAAAsC,aACAtF,YAAA,OACAF,YAAA,MAKAwH,EAAAC,QAAA/K,EAAAgE,QACAkkB,aAAA,SAAAN,GACA,IAAAC,EAAArmB,KAAA6W,MAEA,QAAAwP,GACArnB,KAAAsZ,IAAA8N,EAAAC,EAAAnf,EAAA,GAAAlI,KAAAsZ,IAAA+N,EAAA5e,OAAA4e,EAAAlU,YAAA,IAKAsU,QAAA,SAAA6S,EAAAC,GACA,IAAAlT,EAAArmB,KAAA6W,MAEA,GAAAwP,EAAA,CACA,IAAAmT,EAAA/6B,EAAAg7B,kBAAApT,GAA8Dnf,EAAAoyB,EAAAnyB,EAAAoyB,IAC9D1I,EAAA2I,EAAA3I,MACA6I,EAAAF,EAAAE,SAGA1B,EAAA3R,EAAA2R,WACAC,EAAA5R,EAAA4R,SACA,MAAAA,EAAAD,EACAC,GAAA,EAAAj5B,KAAA4c,GAEA,MAAAiV,EAAAoH,EACApH,GAAA,EAAA7xB,KAAA4c,GAEA,MAAAiV,EAAAmH,EACAnH,GAAA,EAAA7xB,KAAA4c,GAIA,IAAA+d,EAAA9I,GAAAmH,GAAAnH,GAAAoH,EACA2B,EAAAF,GAAArT,EAAAqS,aAAAgB,GAAArT,EAAAoS,YAEA,OAAAkB,GAAAC,EAEA,UAGA/S,eAAA,WACA,IAAAR,EAAArmB,KAAA6W,MACAgjB,GAAAxT,EAAA2R,WAAA3R,EAAA4R,UAAA,EACA6B,GAAAzT,EAAAqS,YAAArS,EAAAoS,aAAA,EACA,OACAvxB,EAAAmf,EAAAnf,EAAAlI,KAAAid,IAAA4d,GAAAC,EACA3yB,EAAAkf,EAAAlf,EAAAnI,KAAAkd,IAAA2d,GAAAC,IAIAhT,QAAA,WACA,IAAAT,EAAArmB,KAAA6W,MACA,OAAA7X,KAAA4c,KAAAyK,EAAA4R,SAAA5R,EAAA2R,aAAA,EAAAh5B,KAAA4c,MAAA5c,KAAAsZ,IAAA+N,EAAAoS,YAAA,GAAAz5B,KAAAsZ,IAAA+N,EAAAqS,YAAA,KAGA1hB,gBAAA,WACA,IAAAqP,EAAArmB,KAAA6W,MACAkjB,EAAA1T,EAAA2R,YAAA3R,EAAA4R,SAAA5R,EAAA2R,YAAA,EACAgC,GAAA3T,EAAAoS,YAAApS,EAAAqS,aAAA,EAAArS,EAAAqS,YAEA,OACAxxB,EAAAmf,EAAAnf,EAAAlI,KAAAid,IAAA8d,GAAAC,EACA7yB,EAAAkf,EAAAlf,EAAAnI,KAAAkd,IAAA6d,GAAAC,IAIAvzB,KAAA,WACA,IAAA3B,EAAA9E,KAAAuU,OAAAzP,IACAuhB,EAAArmB,KAAA6W,MACAojB,EAAA5T,EAAA2R,WACAkC,EAAA7T,EAAA4R,SAEAnzB,EAAAyD,YAEAzD,EAAAwtB,IAAAjM,EAAAnf,EAAAmf,EAAAlf,EAAAkf,EAAAoS,YAAAwB,EAAAC,GACAp1B,EAAAwtB,IAAAjM,EAAAnf,EAAAmf,EAAAlf,EAAAkf,EAAAqS,YAAAwB,EAAAD,GAAA,GAEAn1B,EAAA8sB,YACA9sB,EAAA/C,YAAAskB,EAAArkB,YACA8C,EAAAjD,UAAAwkB,EAAAvkB,YAEAgD,EAAA5D,UAAAmlB,EAAAllB,gBAEA2D,EAAA4I,OACA5I,EAAAnD,SAAA,QAEA0kB,EAAAvkB,aACAgD,EAAA4D,iDCrGA,IAAApK,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB8pB,EAAmB9pB,EAAQ,QAC3B+3B,EAAY/3B,EAAQ,QAEpB+K,EAAAC,QAAA,SAAA2C,GAEA,IAAA0hB,GACAtuB,SAAA,OACA4sB,OACAxnB,SAAA4xB,EAAA6D,WAAAC,SAIAC,EAAAnuB,EAAAouB,gBAAA93B,QAEAgsB,oBAAA,WACA,IAAAvrB,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAvE,EAAAgD,EAAAhD,MACAI,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAuD,EAAAZ,EAAAY,eACA02B,EAAA,EACAC,EAAA,EAEA,SAAAC,EAAAv6B,GACA,OAAA2D,EAAA3D,EAAA4O,UAAA7L,EAAAb,GAAAlC,EAAAgN,UAAAjK,EAAAb,GAIAa,EAAAyN,IAAA,KACAzN,EAAAuD,IAAA,KAEA,IAAAk0B,EAAA71B,EAAAkL,QAeA,QAdAnF,IAAA8vB,GACAj8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAA46B,EAAA,CAIA,IAAAx6B,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,SACA0K,IAAA1K,EAAAy6B,QACAD,GAAA,MAKA71B,EAAAkL,SAAA2qB,EAAA,CACA,IAAAE,KAEAn8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAkT,GACA9S,EAAA0I,UAEAgC,IAAA/F,EAAAkL,cAAAnF,IAAA1K,EAAAy6B,MAAA76B,EAAA,GACAI,EAAAy6B,OACAr4B,KAAA,UAEAsI,IAAAgwB,EAAA5nB,KACA4nB,EAAA5nB,IACA6nB,kBACAC,oBAKA,IAAAD,EAAAD,EAAA5nB,GAAA6nB,eACAC,EAAAF,EAAA5nB,GAAA8nB,eAEA76B,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAkuB,EAAA1uB,GACA,IAAAiK,GAAA7G,EAAAiN,cAAAqe,GACAnnB,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,SAIAy6B,EAAAh7B,GAAAg7B,EAAAh7B,IAAA,EACAi7B,EAAAj7B,GAAAi7B,EAAAj7B,IAAA,EAEAgF,EAAAk2B,eACAF,EAAAh7B,GAAA,IACQiK,EAAA,EACRgxB,EAAAj7B,IAAAiK,EAEA+wB,EAAAh7B,IAAAiK,OAMArL,EAAAsH,KAAA60B,EAAA,SAAAI,GACA,IAAAvvB,EAAAuvB,EAAAH,eAAAxF,OAAA2F,EAAAF,gBACAG,EAAAx8B,EAAAiS,IAAAjF,GACAyvB,EAAAz8B,EAAA+H,IAAAiF,GACAxI,EAAAyN,IAAA,OAAAzN,EAAAyN,IAAAuqB,EAAAj8B,KAAA0R,IAAAzN,EAAAyN,IAAAuqB,GACAh4B,EAAAuD,IAAA,OAAAvD,EAAAuD,IAAA00B,EAAAl8B,KAAAwH,IAAAvD,EAAAuD,IAAA00B,UAIAz8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAkuB,EAAA1uB,GACA,IAAAiK,GAAA7G,EAAAiN,cAAAqe,GACAnnB,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,SAIA,OAAA6C,EAAAyN,IACAzN,EAAAyN,IAAA5G,EACQA,EAAA7G,EAAAyN,MACRzN,EAAAyN,IAAA5G,GAGA,OAAA7G,EAAAuD,IACAvD,EAAAuD,IAAAsD,EACQA,EAAA7G,EAAAuD,MACRvD,EAAAuD,IAAAsD,QAOA7G,EAAAyN,IAAAiG,SAAA1T,EAAAyN,OAAAtJ,MAAAnE,EAAAyN,KAAAzN,EAAAyN,IAAA6pB,EACAt3B,EAAAuD,IAAAmQ,SAAA1T,EAAAuD,OAAAY,MAAAnE,EAAAuD,KAAAvD,EAAAuD,IAAAg0B,EAGAx6B,KAAAm7B,0BAEAC,aAAA,WACA,IAAAC,EACAp4B,EAAAjD,KACAiwB,EAAAhtB,EAAAuB,QAAA0nB,MAEA,GAAAjpB,EAAAY,eACAw3B,EAAAr8B,KAAA0R,IAAAuf,EAAAqL,cAAArL,EAAAqL,cAAA,GAAAt8B,KAAA8sB,KAAA7oB,EAAAa,MAAA,SACI,CAEJ,IAAAotB,EAAAzyB,EAAAwG,eAAAgrB,EAAAnxB,SAAAR,EAAA0G,OAAAE,iBACAm2B,EAAAr8B,KAAA0R,IAAAuf,EAAAqL,cAAArL,EAAAqL,cAAA,GAAAt8B,KAAA8sB,KAAA7oB,EAAAgB,QAAA,EAAAitB,KAGA,OAAAmK,GAGAE,yBAAA,WACAv7B,KAAA6D,gBAEA7D,KAAAksB,MAAA1sB,WAGA+vB,iBAAA,SAAA1vB,EAAAC,GACA,OAAAE,KAAAkQ,cAAAlQ,KAAAC,MAAAI,KAAAC,SAAAR,GAAAO,KAAAR,KAGAsP,iBAAA,SAAArF,GAGA,IAIA2mB,EAJAxtB,EAAAjD,KACAmV,EAAAlS,EAAAkS,MAEAhF,GAAAlN,EAAAiN,cAAApG,GAEA8gB,EAAA3nB,EAAAi1B,IAAA/iB,EAOA,OAJAsb,EADAxtB,EAAAY,eACAZ,EAAAc,KAAAd,EAAAa,MAAA8mB,GAAAza,EAAAgF,GAEAlS,EAAAkB,OAAAlB,EAAAgB,OAAA2mB,GAAAza,EAAAgF,GAEAsb,GAEAD,iBAAA,SAAAC,GACA,IAAAxtB,EAAAjD,KACA6D,EAAAZ,EAAAY,eACA23B,EAAA33B,EAAAZ,EAAAa,MAAAb,EAAAgB,OACA6mB,GAAAjnB,EAAA4sB,EAAAxtB,EAAAc,KAAAd,EAAAkB,OAAAssB,GAAA+K,EACA,OAAAv4B,EAAAkS,OAAAlS,EAAAi1B,IAAAj1B,EAAAkS,OAAA2V,GAEAwF,gBAAA,SAAAzwB,GACA,OAAAG,KAAAmP,iBAAAnP,KAAAy7B,eAAA57B,OAIAwoB,EAAAiJ,kBAAA,SAAA+I,EAAAzM,uCC5LA,IAAAnvB,EAAcF,EAAQ,QACtB6pB,EAAY7pB,EAAQ,QACpB8pB,EAAmB9pB,EAAQ,QAC3B+3B,EAAY/3B,EAAQ,QAQpB,SAAAm9B,EAAAC,EAAAC,GACA,IAWAC,EAAAC,EAXA5P,KACAjnB,EAAAxG,EAAAwG,eAMA82B,EAAA92B,EAAA02B,EAAAjrB,IAAA1R,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAAJ,EAAAlrB,QAEAurB,EAAAj9B,KAAA2a,MAAAlb,EAAAu9B,MAAAJ,EAAAp1B,MACA01B,EAAAl9B,KAAA8sB,KAAA8P,EAAAp1B,IAAAxH,KAAAsZ,IAAA,GAAA2jB,IAGA,IAAAF,GACAF,EAAA78B,KAAA2a,MAAAlb,EAAAu9B,MAAAJ,EAAAO,aACAL,EAAA98B,KAAA2a,MAAAiiB,EAAAO,WAAAn9B,KAAAsZ,IAAA,GAAAujB,IAEA3P,EAAA/pB,KAAA45B,GACAA,EAAAD,EAAA98B,KAAAsZ,IAAA,GAAAujB,KAEAA,EAAA78B,KAAA2a,MAAAlb,EAAAu9B,MAAAD,IACAD,EAAA98B,KAAA2a,MAAAoiB,EAAA/8B,KAAAsZ,IAAA,GAAAujB,KAEA,IAAAO,EAAAP,EAAA,EAAA78B,KAAAsZ,IAAA,GAAAtZ,KAAAsnB,IAAAuV,IAAA,EAEA,GACA3P,EAAA/pB,KAAA45B,KAEAD,EACA,KAAAA,IACAA,EAAA,IACAD,EACAO,EAAAP,GAAA,IAAAO,GAGAL,EAAA/8B,KAAAyoB,MAAAqU,EAAA98B,KAAAsZ,IAAA,GAAAujB,GAAAO,WACEP,EAAAI,GAAAJ,IAAAI,GAAAH,EAAAI,GAEF,IAAAG,EAAAp3B,EAAA02B,EAAAn1B,IAAAu1B,GAGA,OAFA7P,EAAA/pB,KAAAk6B,GAEAnQ,EAIA5iB,EAAAC,QAAA,SAAA2C,GAEA,IAAA0hB,GACAtuB,SAAA,OAGA4sB,OACAxnB,SAAA4xB,EAAA6D,WAAAmC,cAIAC,EAAAnU,EAAA5lB,QACAgsB,oBAAA,WACA,IAAAvrB,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAvE,EAAAgD,EAAAhD,MACAI,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAuD,EAAAZ,EAAAY,eACA,SAAA42B,EAAAv6B,GACA,OAAA2D,EAAA3D,EAAA4O,UAAA7L,EAAAb,GAAAlC,EAAAgN,UAAAjK,EAAAb,GAIAa,EAAAyN,IAAA,KACAzN,EAAAuD,IAAA,KACAvD,EAAAk5B,WAAA,KAEA,IAAAzB,EAAA71B,EAAAkL,QAeA,QAdAnF,IAAA8vB,GACAj8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAA46B,EAAA,CAIA,IAAAx6B,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,SACA0K,IAAA1K,EAAAy6B,QACAD,GAAA,MAKA71B,EAAAkL,SAAA2qB,EAAA,CACA,IAAAE,KAEAn8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAkT,GACA9S,EAAA0I,UAEAgC,IAAA/F,EAAAkL,cAAAnF,IAAA1K,EAAAy6B,MAAA76B,EAAA,GACAI,EAAAy6B,OACAr4B,KAAA,KAEArC,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,UACA0K,IAAAgwB,EAAA5nB,KACA4nB,EAAA5nB,OAGAvU,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAkuB,EAAA1uB,GACA,IAAA4L,EAAAmvB,EAAA5nB,GACAlJ,GAAA7G,EAAAiN,cAAAqe,GAEAnnB,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,QAAA0J,EAAA,IAGA2B,EAAA5L,GAAA4L,EAAA5L,IAAA,EACA4L,EAAA5L,IAAAiK,QAKArL,EAAAsH,KAAA60B,EAAA,SAAAI,GACA,GAAAA,EAAA34B,OAAA,GACA,IAAA44B,EAAAx8B,EAAAiS,IAAAsqB,GACAE,EAAAz8B,EAAA+H,IAAAw0B,GACA/3B,EAAAyN,IAAA,OAAAzN,EAAAyN,IAAAuqB,EAAAj8B,KAAA0R,IAAAzN,EAAAyN,IAAAuqB,GACAh4B,EAAAuD,IAAA,OAAAvD,EAAAuD,IAAA00B,EAAAl8B,KAAAwH,IAAAvD,EAAAuD,IAAA00B,WAKAz8B,EAAAsH,KAAAzF,EAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAAD,EAAAE,eAAAL,GACAG,EAAAmB,iBAAAtB,IAAA26B,EAAAv6B,IACAzB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAkuB,EAAA1uB,GACA,IAAAiK,GAAA7G,EAAAiN,cAAAqe,GAEAnnB,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,QAAA0J,EAAA,IAIA,OAAA7G,EAAAyN,IACAzN,EAAAyN,IAAA5G,EACQA,EAAA7G,EAAAyN,MACRzN,EAAAyN,IAAA5G,GAGA,OAAA7G,EAAAuD,IACAvD,EAAAuD,IAAAsD,EACQA,EAAA7G,EAAAuD,MACRvD,EAAAuD,IAAAsD,GAGA,IAAAA,IAAA,OAAA7G,EAAAk5B,YAAAryB,EAAA7G,EAAAk5B,cACAl5B,EAAAk5B,WAAAryB,QAQA9J,KAAAm7B,0BAEAA,uBAAA,WACA,IAAAl4B,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MACAjnB,EAAAxG,EAAAwG,eACAs1B,EAAA,EACAC,EAAA,GAEAv3B,EAAAyN,IAAAzL,EAAAgrB,EAAAvf,IAAAzN,EAAAyN,KACAzN,EAAAuD,IAAAvB,EAAAgrB,EAAAzpB,IAAAvD,EAAAuD,KAEAvD,EAAAyN,MAAAzN,EAAAuD,MACA,IAAAvD,EAAAyN,KAAA,OAAAzN,EAAAyN,KACAzN,EAAAyN,IAAA1R,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAA/4B,EAAAyN,MAAA,GACAzN,EAAAuD,IAAAxH,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAA/4B,EAAAuD,MAAA,KAEAvD,EAAAyN,IAAA6pB,EACAt3B,EAAAuD,IAAAg0B,IAGA,OAAAv3B,EAAAyN,MACAzN,EAAAyN,IAAA1R,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAA/4B,EAAAuD,MAAA,IAEA,OAAAvD,EAAAuD,MACAvD,EAAAuD,IAAA,IAAAvD,EAAAyN,IACA1R,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAA/4B,EAAAyN,MAAA,GACA8pB,GAEA,OAAAv3B,EAAAk5B,aACAl5B,EAAAyN,IAAA,EACAzN,EAAAk5B,WAAAl5B,EAAAyN,IACKzN,EAAAuD,IAAA,EACLvD,EAAAk5B,WAAAn9B,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAA/4B,EAAAuD,OAEAvD,EAAAk5B,WAAA5B,IAIAtL,WAAA,WACA,IAAAhsB,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MACA1sB,GAAAyD,EAAAY,eAEA83B,GACAjrB,IAAAuf,EAAAvf,IACAlK,IAAAypB,EAAAzpB,KAEA0lB,EAAAjpB,EAAAipB,MAAAwP,EAAAC,EAAA14B,GAIAA,EAAAuD,IAAA/H,EAAA+H,IAAA0lB,GACAjpB,EAAAyN,IAAAjS,EAAAiS,IAAAwb,GAEA+D,EAAAzwB,SACAA,KACAyD,EAAAkS,MAAAlS,EAAAuD,IACAvD,EAAAi1B,IAAAj1B,EAAAyN,MAEAzN,EAAAkS,MAAAlS,EAAAyN,IACAzN,EAAAi1B,IAAAj1B,EAAAuD,KAEAhH,GACA0sB,EAAA1sB,WAGA4wB,qBAAA,WACApwB,KAAAw8B,WAAAx8B,KAAAksB,MAAA9Y,QAEAgV,EAAA/c,UAAA+kB,qBAAApnB,KAAAhJ,OAGAuvB,iBAAA,SAAA1vB,EAAAC,GACA,OAAAE,KAAAkQ,cAAAlQ,KAAAC,MAAAI,KAAAC,SAAAR,GAAAO,KAAAR,KAEAywB,gBAAA,SAAAzwB,GACA,OAAAG,KAAAmP,iBAAAnP,KAAAw8B,WAAA38B,KAQA48B,mBAAA,SAAA3yB,GACA,IAAA+xB,EAAA78B,KAAA2a,MAAAlb,EAAAu9B,MAAAlyB,IACAgyB,EAAA98B,KAAA2a,MAAA7P,EAAA9K,KAAAsZ,IAAA,GAAAujB,IAEA,OAAAC,EAAA98B,KAAAsZ,IAAA,GAAAujB,IAEA1sB,iBAAA,SAAArF,GACA,IAKA0xB,EAAA/K,EAAAtb,EAAA+iB,EAAAwE,EALAz5B,EAAAjD,KACAR,EAAAyD,EAAAuB,QAAA0nB,MAAA1sB,QACAw8B,EAAAv9B,EAAAu9B,MACAW,EAAA15B,EAAAw5B,mBAAAx5B,EAAAk5B,YACArR,EAAA,EAmCA,OAhCAhhB,GAAA7G,EAAAiN,cAAApG,GACAtK,GACA2V,EAAAlS,EAAAi1B,IACAA,EAAAj1B,EAAAkS,MACAunB,GAAA,IAEAvnB,EAAAlS,EAAAkS,MACA+iB,EAAAj1B,EAAAi1B,IACAwE,EAAA,GAEAz5B,EAAAY,gBACA23B,EAAAv4B,EAAAa,MACA2sB,EAAAjxB,EAAAyD,EAAAe,MAAAf,EAAAc,OAEAy3B,EAAAv4B,EAAAgB,OACAy4B,IAAA,EACAjM,EAAAjxB,EAAAyD,EAAAiB,IAAAjB,EAAAkB,QAEA2F,IAAAqL,IACA,IAAAA,IACA2V,EAAArsB,EAAAg2B,kBACAxxB,EAAAuB,QAAA0nB,MAAAptB,SACAoN,EAAA5N,SAAA0G,OAAAE,iBAEAs2B,GAAA1Q,EACA3V,EAAAwnB,GAEA,IAAA7yB,IACAghB,GAAA0Q,GAAAQ,EAAA9D,GAAA8D,EAAA7mB,KAAA6mB,EAAAlyB,GAAAkyB,EAAA7mB,KAEAsb,GAAAiM,EAAA5R,GAEA2F,GAEAD,iBAAA,SAAAC,GACA,IAIA+K,EAAArmB,EAAA+iB,EAAApuB,EAJA7G,EAAAjD,KACAR,EAAAyD,EAAAuB,QAAA0nB,MAAA1sB,QACAw8B,EAAAv9B,EAAAu9B,MACAW,EAAA15B,EAAAw5B,mBAAAx5B,EAAAk5B,YAiBA,GAdA38B,GACA2V,EAAAlS,EAAAi1B,IACAA,EAAAj1B,EAAAkS,QAEAA,EAAAlS,EAAAkS,MACA+iB,EAAAj1B,EAAAi1B,KAEAj1B,EAAAY,gBACA23B,EAAAv4B,EAAAa,MACAgG,EAAAtK,EAAAyD,EAAAe,MAAAysB,IAAAxtB,EAAAc,OAEAy3B,EAAAv4B,EAAAgB,OACA6F,EAAAtK,EAAAixB,EAAAxtB,EAAAiB,IAAAjB,EAAAkB,OAAAssB,GAEA3mB,IAAAqL,EAAA,CACA,OAAAA,EAAA,CACA,IAAA2V,EAAArsB,EAAAg2B,kBACAxxB,EAAAuB,QAAA0nB,MAAAptB,SACAoN,EAAA5N,SAAA0G,OAAAE,iBAEA4E,GAAAghB,EACA0Q,GAAA1Q,EACA3V,EAAAwnB,EAEA7yB,GAAAkyB,EAAA9D,GAAA8D,EAAA7mB,GACArL,GAAA0xB,EACA1xB,EAAA9K,KAAAsZ,IAAA,GAAA0jB,EAAA7mB,GAAArL,GAEA,OAAAA,KAIAue,EAAAiJ,kBAAA,cAAAiL,EAAA3O,wCCzVA,IAAAtvB,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAiGtB,SAAAq+B,EAAA5vB,EAAA6vB,GACA,IAEA5S,EAAAC,EAAAnpB,EAAA4J,EAFA+F,EAAA1D,EAAAnJ,eAAAmJ,EAAAlJ,MAAAkJ,EAAA/I,OACAioB,EAAAlf,EAAAujB,WAGA,IAAAxvB,EAAA,EAAA4J,EAAAkyB,EAAAx6B,OAAkCtB,EAAA4J,IAAU5J,EAC5C2P,EAAA1R,KAAA0R,MAAAmsB,EAAA97B,GAAA87B,EAAA97B,EAAA,IAGA,IAAAA,EAAA,EAAA4J,EAAAuhB,EAAA7pB,OAAiCtB,EAAA4J,IAAU5J,EAC3CmpB,EAAAld,EAAAsjB,gBAAAvvB,GACA2P,EAAA3P,EAAA,EAAA/B,KAAA0R,MAAAwZ,EAAAD,GAAAvZ,EACAuZ,EAAAC,EAGA,OAAAxZ,EASA,SAAAosB,EAAAj9B,EAAAk9B,EAAAv4B,GACA,IAGAuF,EAAA0Q,EAHAuiB,EAAAx4B,EAAAy4B,aACA7nB,EAAA2nB,EAAAG,WACAhT,EAAA6S,EAAAF,OAAAh9B,GAcA,OAXApB,EAAA4sB,cAAA2R,IACAjzB,EAAAgzB,EAAArsB,IAAAlM,EAAA24B,mBACA1iB,EAAAjW,EAAA44B,gBAKArzB,EAAAizB,EAAA5nB,EACAqF,EAAA,IAIA4iB,MAAAtzB,EAAAqL,EACAqF,QACAtF,MAAA+U,EAAAngB,EAAA,GAUA,SAAAuzB,EAAAz9B,EAAAk9B,EAAAv4B,GACA,IAKA2Q,EAAApL,EALA8yB,EAAAE,EAAAF,OACA3S,EAAA2S,EAAAh9B,GACAoqB,EAAApqB,EAAA,EAAAg9B,EAAAh9B,EAAA,QACAsR,EAAAtR,EAAAg9B,EAAAx6B,OAAA,EAAAw6B,EAAAh9B,EAAA,QACA09B,EAAA/4B,EAAA24B,mBAiBA,OAdA,OAAAlT,IAGAA,EAAAC,GAAA,OAAA/Y,EAAA4rB,EAAA7E,IAAAhO,EAAA/Y,EAAA+Y,IAGA,OAAA/Y,IAEAA,EAAA+Y,IAAAD,GAGA9U,EAAA+U,KAAAD,GAAA,EAAAsT,EACAxzB,GAAAoH,EAAA8Y,GAAA,EAAAsT,GAGAF,MAAAtzB,EAAAgzB,EAAAG,WACAziB,MAAAjW,EAAA44B,cACAjoB,SA9KA7W,EAAAa,KAAA,OACA0M,OACAC,KAAA,SAGAC,QACAC,QACApD,KAAA,WAGAu0B,mBAAA,GACAC,cAAA,GAGAtS,QAAA,EAGA0S,WACAC,iBAAA,KAIAxxB,QACArD,KAAA,cAKAtK,EAAAa,KAAA,iBACA0M,OACAC,KAAA,QACA4xB,KAAA,KAGA3xB,QACAC,QACApD,KAAA,SACAtJ,SAAA,WAGA2M,QACA3M,SAAA,OACAsJ,KAAA,WAGAu0B,mBAAA,GACAC,cAAA,GAGAtS,QAAA,EAGA0S,WACAC,iBAAA,MAKA92B,UACAg3B,WACAC,cAAA,SAIAvG,UACAC,WACAb,MAAA,SAAA7xB,EAAAvE,GAEA,IAAAo2B,EAAA,GAUA,OARA7xB,EAAAvC,OAAA,IACAuC,EAAA,GAAAi5B,OACApH,EAAA7xB,EAAA,GAAAi5B,OACMx9B,EAAAI,OAAA4B,OAAA,GAAAuC,EAAA,GAAA/E,MAAAQ,EAAAI,OAAA4B,SACNo0B,EAAAp2B,EAAAI,OAAAmE,EAAA,GAAA/E,SAIA42B,GAGAx1B,MAAA,SAAA2D,EAAAvE,GACA,IAAAy9B,EAAAz9B,EAAAC,SAAAsE,EAAA9E,cAAAmB,OAAA,GACA,OAAA68B,EAAA,KAAAl5B,EAAAm5B,SAGAjyB,KAAA,QACA4xB,KAAA,OA2FAp0B,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAA2xB,IAAA9xB,EAAAI,kBAAA9J,QAEAiK,gBAAA9F,EAAAs3B,UAEAx7B,WAAA,WACA,IACAvC,EADA+C,EAAAjD,KAGAkM,EAAAI,kBAAAjB,UAAA5I,WAAAiR,MAAAzQ,EAAAuQ,WAEAtT,EAAA+C,EAAA4J,UACA3M,EAAAy6B,MAAA13B,EAAAkK,aAAAwtB,MACAz6B,EAAA89B,KAAA,GAGAz9B,OAAA,SAAAoM,GACA,IAEA5L,EAAA4J,EAFA1H,EAAAjD,KACAk+B,EAAAj7B,EAAA4J,UAAAxM,KAKA,IAFA4C,EAAAk7B,OAAAl7B,EAAAm7B,WAEAr9B,EAAA,EAAA4J,EAAAuzB,EAAA77B,OAAmCtB,EAAA4J,IAAU5J,EAC7CkC,EAAA8K,cAAAmwB,EAAAn9B,KAAA4L,IAIAoB,cAAA,SAAA4vB,EAAA99B,EAAA8M,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACA/L,EAAAmC,EAAAkK,aACAP,EAAA+wB,EAAA/wB,WACAyxB,EAAAp+B,EAAAuE,QAAAmC,SAAAg3B,UAEAA,EAAApuB,QAAAtM,EAAAgK,cAAA/M,EAAA4O,SACA6uB,EAAAnuB,QAAAvM,EAAAgK,cAAA/M,EAAAgN,SACAywB,EAAApwB,cAAAtK,EAAApD,MACA89B,EAAAluB,OAAA5P,EAEA89B,EAAAlwB,QACAqwB,aAAAh9B,EAAAG,MACAA,MAAAhB,EAAAI,KAAAI,OAAAZ,GACA+9B,cAAAhxB,EAAAgxB,cAAAhxB,EAAAgxB,cAAAS,EAAAT,cACAz8B,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA1C,EAAA2P,sBAAAtN,EAAAK,gBAAAtB,EAAAw+B,EAAAl9B,iBACAa,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAvD,EAAA2P,sBAAAtN,EAAAkB,YAAAnC,EAAAw+B,EAAAr8B,aACAF,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAArD,EAAA2P,sBAAAtN,EAAAgB,YAAAjC,EAAAw+B,EAAAv8B,cAGAmB,EAAAq7B,sBAAAX,EAAA99B,EAAA8M,GAEAgxB,EAAA7vB,SAMAwwB,sBAAA,SAAAX,EAAA99B,EAAA8M,GACA,IAAA1J,EAAAjD,KACAoQ,EAAAutB,EAAAlwB,OACA8wB,EAAAt7B,EAAAu7B,gBACAnrB,EAAAkrB,EAAAlvB,eACAovB,EAAAF,EAAA16B,eACAk5B,EAAA95B,EAAAk7B,QAAAl7B,EAAAm7B,WACAM,EAAAz7B,EAAA07B,wBAAA17B,EAAApD,SACA++B,EAAA37B,EAAA47B,wBAAA57B,EAAApD,QAAAk9B,GAEA3sB,EAAAquB,aACAruB,EAAAiD,KAAA1G,EAAA0G,EAAAqrB,EAAArrB,KACAjD,EAAAlJ,EAAAu3B,EAAA9xB,EAAA0G,EAAAqrB,EAAAI,KAAAF,EAAAG,OACA3uB,EAAAjJ,EAAAs3B,EAAAG,EAAAG,OAAApyB,EAAA0G,EAAAqrB,EAAAI,KACA1uB,EAAAnM,OAAAw6B,EAAAG,EAAA70B,UAAAa,EACAwF,EAAAtM,MAAA26B,OAAA7zB,EAAAg0B,EAAA70B,MAMAi1B,gBAAA,WACA,OAAAh/B,KAAA6M,UAAAK,SAMA+xB,gBAAA,WACA,OAAAj/B,KAAA6M,UAAAiC,SAMA0vB,cAAA,WACA,OAAAx+B,KAAAiN,cAAAjN,KAAAg/B,oBAMAE,cAAA,WACA,OAAAl/B,KAAAiN,cAAAjN,KAAAi/B,oBASAE,WAAA,SAAAjS,GACA,IAMAnsB,EAAAb,EANA+C,EAAAjD,KACAC,EAAAgD,EAAAhD,MACA+M,EAAA/J,EAAAi8B,gBACAnvB,EAAA/C,EAAAxI,QAAAuL,QACApF,OAAAC,IAAAsiB,EAAAjtB,EAAAI,KAAAC,SAAA+B,OAAA6qB,EAAA,EACAkS,KAGA,IAAAr+B,EAAA,EAAcA,EAAA4J,IAAU5J,EACxBb,EAAAD,EAAAE,eAAAY,GACAb,EAAA89B,KAAA/9B,EAAAmB,iBAAAL,MACA,IAAAgP,IACA,IAAAA,IAAA,IAAAqvB,EAAAtrB,QAAA5T,EAAAy6B,aACA/vB,IAAAmF,SAAAnF,IAAA1K,EAAAy6B,QAAA,IAAAyE,EAAAtrB,QAAA5T,EAAAy6B,UACAyE,EAAAj9B,KAAAjC,EAAAy6B,OAIA,OAAAyE,GAOAC,cAAA,WACA,OAAAr/B,KAAAm/B,aAAA98B,QAUAi9B,cAAA,SAAAx/B,EAAAy/B,GACA,IAAAH,EAAAp/B,KAAAm/B,WAAAr/B,GACAD,OAAA+K,IAAA20B,EACAH,EAAAtrB,QAAAyrB,IACA,EAEA,WAAA1/B,EACAu/B,EAAA/8B,OAAA,EACAxC,GAMAu+B,SAAA,WACA,IAQAr9B,EAAA4J,EAAA+F,EARAzN,EAAAjD,KACAgN,EAAA/J,EAAAi8B,gBACAhC,EAAAj6B,EAAAo8B,gBACAv/B,EAAAmD,EAAApD,MACAgE,EAAAmJ,EAAAnJ,eACAsR,EAAAtR,EAAAmJ,EAAAjJ,KAAAiJ,EAAA9I,IACAg0B,EAAA/iB,GAAAtR,EAAAmJ,EAAAlJ,MAAAkJ,EAAA/I,QACA44B,KAGA,IAAA97B,EAAA,EAAA4J,EAAA1H,EAAA4J,UAAAxM,KAAAgC,OAA+CtB,EAAA4J,IAAU5J,EACzD87B,EAAA16B,KAAA6K,EAAAmC,iBAAA,KAAApO,EAAAjB,IAOA,OAJA4Q,EAAAjS,EAAA4sB,cAAAre,EAAAxI,QAAAy4B,cACAL,EAAA5vB,EAAA6vB,IACA,GAGAnsB,MACAmsB,SACA1nB,QACA+iB,MACAgF,aACAlwB,UAQA2xB,wBAAA,SAAA7+B,EAAAD,GACA,IASAkB,EAAAy+B,EAAAC,EAAApsB,EAAAyrB,EAAA/0B,EATA9G,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAC,EAAA+C,EAAA4J,UACAG,EAAA/J,EAAAu7B,gBACAl+B,EAAAL,EAAAI,KAAAC,SACAwJ,EAAAkD,EAAAkD,cAAA5P,EAAAR,GAAAO,KAAAR,IACAkQ,EAAA/C,EAAAxI,QAAAuL,QACA4qB,EAAAz6B,EAAAy6B,MACAxlB,EAAA,EAGA,GAAApF,QAAAnF,IAAAmF,QAAAnF,IAAA+vB,EACA,IAAA55B,EAAA,EAAeA,EAAAjB,IAAkBiB,EACjCy+B,EAAAv/B,EAAAE,eAAAY,GAEAy+B,EAAAxB,KACAwB,EAAA7E,WACA6E,EAAAE,WAAAV,oBAAAhyB,EAAA5K,IACAnC,EAAAmB,iBAAAL,KAEA0+B,EAAAzyB,EAAAkD,cAAA5P,EAAAS,GAAAV,KAAAR,KACAiK,EAAA,GAAA21B,EAAA,GAAA31B,GAAA,GAAA21B,EAAA,KACAtqB,GAAAsqB,IAUA,OAJApsB,EAAArG,EAAAmC,iBAAAgG,GACA2pB,EAAA9xB,EAAAmC,iBAAAgG,EAAArL,GACAC,GAAA+0B,EAAAzrB,GAAA,GAGAtJ,OACAsJ,OACAyrB,OACAC,OAAAD,EAAA/0B,EAAA,IAOA80B,wBAAA,SAAA/+B,EAAAD,EAAAk9B,GACA,IAAA95B,EAAAjD,KACAwE,EAAAu4B,EAAA/vB,MAAAxI,QACAomB,EAAA,SAAApmB,EAAAy4B,aACAK,EAAAz9B,EAAAk9B,EAAAv4B,GACAs4B,EAAAj9B,EAAAk9B,EAAAv4B,GAEAm7B,EAAA18B,EAAAq8B,cAAAx/B,EAAAmD,EAAA4J,UAAA8tB,OACAoE,EAAAnU,EAAAzV,MAAAyV,EAAAyS,MAAAsC,EAAA/U,EAAAyS,MAAA,EACAtzB,EAAA/K,KAAA0R,IACAjS,EAAAwG,eAAAT,EAAAo7B,gBAAAC,KACAjV,EAAAyS,MAAAzS,EAAAnQ,OAEA,OACApH,KAAA0rB,EAAAh1B,EAAA,EACA+0B,KAAAC,EAAAh1B,EAAA,EACAg1B,SACAh1B,SAIAtD,KAAA,WACA,IAAAxD,EAAAjD,KACAC,EAAAgD,EAAAhD,MACA+M,EAAA/J,EAAAu7B,gBACAN,EAAAj7B,EAAA4J,UAAAxM,KACAS,EAAAmC,EAAAkK,aACAxC,EAAAuzB,EAAA77B,OACAtB,EAAA,EAIA,IAFAtC,EAAAoJ,OAAA0J,SAAAtR,EAAA6E,IAAA7E,EAAAsQ,WAESxP,EAAA4J,IAAU5J,EACnBqG,MAAA4F,EAAAkD,cAAApP,EAAAT,KAAAU,MACAm9B,EAAAn9B,GAAA0F,OAIAhI,EAAAoJ,OAAA2J,WAAAvR,EAAA6E,QAIAoH,EAAAG,YAAAyzB,cAAA5zB,EAAAG,YAAA2xB,IAAAx7B,QAIAw8B,gBAAA,WACA,OAAAh/B,KAAA6M,UAAAiC,SAMAmwB,gBAAA,WACA,OAAAj/B,KAAA6M,UAAAK,iDC3dA,IAAA5O,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,SACA6N,OACApE,KAAA,gBAEAjC,UACAC,MACAwG,QAAA,MAKA9D,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAA0zB,MAAA7zB,EAAAI,kBAAA9J,QAEA+J,mBAAA5F,EAAA6F,KAEAC,gBAAA9F,EAAA+F,MAEAsH,WAAAvV,EAAAE,KAEA4B,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAjG,EAAA1G,EAAAY,QACAgM,EAAA5M,EAAAG,KACAuM,EAAAhG,EAAAgG,WACA9L,EAAAmC,EAAAkK,aACAJ,EAAA9J,EAAAhD,MAAAuE,QAAAmC,SAAAC,KACAoG,EAAA/J,EAAAhD,MAAA+M,WAGApC,IAAA9J,EAAAsM,cAAAxC,IAAA9J,EAAAuM,cACAvM,EAAAuM,YAAAvM,EAAAsM,SAGA3O,EAAA+D,OAAAtC,EAAAY,SAEAyM,cAAAtK,EAAApD,MACAyN,OAAAN,EAEAQ,UAAAV,EACAkoB,OAAA,EAEAvnB,QAEAL,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAAN,EAAAK,SACAjM,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAAL,EAAAK,iBAAA4L,EAAA5L,gBACAW,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAhB,EAAAgB,aAAAiL,EAAAjL,YACAE,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAlB,EAAAkB,aAAA+K,EAAA/K,YACA0L,KAAAd,EAAAc,KAAAd,EAAAc,UAAA9C,IAAA9J,EAAA4M,KAAA5M,EAAA4M,KAAAX,EAAAW,KACApM,eAAAsL,EAAAtL,eAAAsL,EAAAtL,eAAAR,EAAAQ,gBAAAyL,EAAAzL,eACAE,WAAAoL,EAAApL,WAAAoL,EAAApL,WAAAV,EAAAU,YAAAuL,EAAAvL,WACAE,iBAAAkL,EAAAlL,iBAAAkL,EAAAlL,iBAAAZ,EAAAY,kBAAAqL,EAAArL,iBACAE,gBAAAgL,EAAAhL,gBAAAgL,EAAAhL,gBAAAd,EAAAc,iBAAAmL,EAAAnL,mBAIA1B,EAAAY,QAAAgN,QAGArP,EAAAsH,KAAA+G,EAAA,SAAAoB,EAAArO,GACAoD,EAAA8K,cAAAG,EAAArO,EAAA8M,IACI1J,GAGJA,EAAA+K,6BAEAD,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IAAA1J,EAAAjD,KACA4M,EAAAsB,EAAAtB,WACA9L,EAAAmC,EAAAkK,aACAH,EAAA/J,EAAAhD,MAAA+M,MACAgzB,EAAA/8B,EAAAhD,MAAAuE,QAAAmC,SAAAuH,MACA+xB,EAAAjzB,EAAAkzB,yBAAArgC,EAAAiB,EAAAT,KAAAR,SAGA+K,IAAA9J,EAAA2G,aAAAmD,IAAA9J,EAAAkO,cACAlO,EAAAkO,YAAAlO,EAAA2G,aAEAmD,IAAA9J,EAAAmO,gBAAArE,IAAA9J,EAAAoO,iBACApO,EAAAoO,eAAApO,EAAAmO,WAGAxQ,EAAA+D,OAAA0L,GAEAX,cAAAtK,EAAApD,MACA4P,OAAA5P,EACAyN,OAAAN,EAGAS,QACAvG,EAAAyF,EAAAK,EAAAmzB,QAAAF,EAAA/4B,EACAC,EAAAwF,EAAAK,EAAAozB,QAAAH,EAAA94B,EAGAiG,QAAAR,EAAAQ,QAAAR,EAAAQ,QAAA3O,EAAAwG,eAAAnE,EAAAuM,YAAApK,EAAAhD,MAAAuE,QAAAmC,SAAAC,KAAAwG,SACA3F,OAAAmF,EAAAnF,OAAAmF,EAAAnF,OAAAhJ,EAAA2P,sBAAAtN,EAAAkO,YAAAnP,EAAAmgC,EAAAv4B,QACAtG,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA1C,EAAA2P,sBAAAtN,EAAAqN,qBAAAtO,EAAAmgC,EAAA7+B,iBACAa,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAvD,EAAA2P,sBAAAtN,EAAAwN,iBAAAzO,EAAAmgC,EAAAh+B,aACAF,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAArD,EAAA2P,sBAAAtN,EAAA0N,iBAAA3O,EAAAmgC,EAAAl+B,aACAG,WAAA2K,EAAA3K,WAAA2K,EAAA3K,WAAAxD,EAAA2P,sBAAAtN,EAAAmB,WAAApC,EAAAmgC,EAAA/9B,YACA0M,SAAA/B,EAAA+B,SAAA/B,EAAA+B,SAAAlQ,EAAA2P,sBAAAtN,EAAA4N,cAAA7O,EAAAmgC,EAAArxB,UAGAM,UAAArC,EAAAqC,UAAArC,EAAAqC,UAAAxQ,EAAA2P,sBAAAtN,EAAAoO,eAAArP,EAAAmgC,EAAA/wB,cAIAf,EAAAT,OAAAiC,KAAA9C,EAAA8C,KAAA9C,EAAA8C,KAAAtI,MAAA8G,EAAAT,OAAAvG,IAAAE,MAAA8G,EAAAT,OAAAtG,IAEA6G,0BAAA,WACA,IAAAuC,EAAAvQ,KAAAC,MAAAsQ,UACArQ,EAAAF,KAAA6M,UAEApO,EAAAsH,KAAA7F,EAAAG,KAAA,SAAA6N,EAAArO,GACA,IAAAuQ,EAAAlC,EAAAT,OACA4C,EAAA5R,EAAAmS,YACAnS,EAAAoS,aAAA3Q,EAAAG,KAAAR,GAAA,GAAA4N,OACA2C,EACA3R,EAAAqS,SAAA5Q,EAAAG,KAAAR,GAAA,GAAA4N,OACA2C,EAAAhD,SAIAgD,EAAAW,sBAAA/R,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAW,SAAA9J,EAAAqJ,EAAAvM,OAAAuM,EAAAxM,MACAqM,EAAAa,sBAAAjS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAW,SAAA7J,EAAAoJ,EAAApM,QAAAoM,EAAArM,KAEAkM,EAAAc,kBAAAlS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAc,KAAAjK,EAAAqJ,EAAAvM,OAAAuM,EAAAxM,MACAqM,EAAAgB,kBAAApS,KAAAwH,IAAAxH,KAAA0R,IAAAL,EAAAc,KAAAhK,EAAAoJ,EAAApM,QAAAoM,EAAArM,KAGAgK,EAAAJ,WAIA2D,cAAA,SAAAvD,GAEA,IAAApN,EAAAd,KAAAC,MAAAI,KAAAC,SAAA4N,EAAAX,eACAX,EAAAsB,EAAAtB,WACA/M,EAAAqO,EAAAuB,OACAW,EAAAlC,EAAAT,OAEAS,EAAAyD,gBACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAGA2I,EAAA3I,OAAAmF,EAAAuF,YAAAvF,EAAAuF,YAAA1T,EAAA2P,sBAAAtN,EAAAsR,iBAAAvS,EAAAG,KAAAC,MAAAuE,QAAAmC,SAAAuH,MAAAiE,aACA/B,EAAAjP,gBAAAyL,EAAAgF,qBAAAhF,EAAAgF,qBAAAnT,EAAA2P,sBAAAtN,EAAA+Q,0BAAAhS,EAAApB,EAAAqT,cAAA1B,EAAAjP,kBACAiP,EAAApO,YAAA4K,EAAAmF,iBAAAnF,EAAAmF,iBAAAtT,EAAA2P,sBAAAtN,EAAAkR,sBAAAnS,EAAApB,EAAAqT,cAAA1B,EAAApO,cACAoO,EAAAtO,YAAA8K,EAAAqF,iBAAArF,EAAAqF,iBAAAxT,EAAA2P,sBAAAtN,EAAAoR,sBAAArS,EAAAuQ,EAAAtO,sDC7JA,IAAAxD,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACA0M,OACAC,KAAA,UAGAC,QACAC,QACApD,KAAA,SACAtJ,SAAA,SACA8C,GAAA,aAEA6J,QACArD,KAAA,SACAtJ,SAAA,OACA8C,GAAA,cAIAi1B,UACAC,WACAb,MAAA,WAEA,UAEAx1B,MAAA,SAAA2D,EAAAvE,GACA,IAAAy9B,EAAAz9B,EAAAC,SAAAsE,EAAA9E,cAAAmB,OAAA,GACAo/B,EAAAhgC,EAAAC,SAAAsE,EAAA9E,cAAAO,KAAAuE,EAAA/E,OACA,OAAAi+B,EAAA,MAAAl5B,EAAAm5B,OAAA,KAAAn5B,EAAAi5B,OAAA,KAAAwC,EAAAj2B,EAAA,SAOAd,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAAi0B,OAAAp0B,EAAAI,kBAAA9J,QAIAiK,gBAAA9F,EAAA+F,MAKAnM,OAAA,SAAAoM,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAC,EAAA5M,EAAAG,KAGA5B,EAAAsH,KAAA+G,EAAA,SAAAoB,EAAArO,GACAoD,EAAA8K,cAAAG,EAAArO,EAAA8M,MAOAoB,cAAA,SAAAG,EAAArO,EAAA8M,GACA,IAAA1J,EAAAjD,KACAE,EAAA+C,EAAA4J,UACAD,EAAAsB,EAAAtB,WACAiC,EAAA5L,EAAAgK,cAAA/M,EAAA4O,SACAF,EAAA3L,EAAAgK,cAAA/M,EAAAgN,SACA1I,EAAAvB,EAAAs9B,uBAAAryB,EAAArO,GACAQ,EAAA4C,EAAAkK,aAAA9M,KAAAR,GACA2gC,EAAAv9B,EAAApD,MAEAqH,EAAAyF,EAAAkC,EAAA4xB,mBAAA,IAAA5xB,EAAAM,iBAAA,kBAAA9O,IAAA+O,IAAAvP,EAAA2gC,GACAr5B,EAAAwF,EAAAiC,EAAAS,eAAAT,EAAAO,iBAAA9O,EAAAR,EAAA2gC,GAEAtyB,EAAAqB,QAAAV,EACAX,EAAAsB,QAAAZ,EACAV,EAAAwyB,SAAAl8B,EACA0J,EAAAX,cAAAizB,EACAtyB,EAAAuB,OAAA5P,EACAqO,EAAAT,QACAtM,gBAAAqD,EAAArD,gBACAa,YAAAwC,EAAAxC,YACAF,YAAA0C,EAAA1C,YACAmN,UAAAzK,EAAAyK,UACAhN,WAAAuC,EAAAvC,WACA0M,SAAAnK,EAAAmK,SACAlH,OAAAkF,EAAA,EAAAnI,EAAAiD,OACAiI,KAAA9C,EAAA8C,MAAAtI,MAAAF,IAAAE,MAAAD,GACAD,IACAC,KAGA+G,EAAAJ,SAMA2D,cAAA,SAAAvD,GACA,IAAAkC,EAAAlC,EAAAT,OACAjJ,EAAA0J,EAAAwyB,SACAxyB,EAAAyD,gBACAxQ,gBAAAiP,EAAAjP,gBACAa,YAAAoO,EAAApO,YACAF,YAAAsO,EAAAtO,YACA2F,OAAA2I,EAAA3I,QAEA2I,EAAAjP,gBAAA1C,EAAAwG,eAAAT,EAAAoN,qBAAAnT,EAAAqT,cAAAtN,EAAArD,kBACAiP,EAAApO,YAAAvD,EAAAwG,eAAAT,EAAAuN,iBAAAtT,EAAAqT,cAAAtN,EAAAxC,cACAoO,EAAAtO,YAAArD,EAAAwG,eAAAT,EAAAyN,iBAAAzN,EAAA1C,aACAsO,EAAA3I,OAAAjD,EAAAiD,OAAAjD,EAAA2N,aAMAouB,uBAAA,SAAAryB,EAAArO,GACA,IASAkB,EAAA4J,EAAAqI,EATA/P,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAK,EAAAL,EAAAI,KAAAC,SACAQ,EAAAR,EAAA2C,EAAApD,OACA+M,EAAAsB,EAAAtB,WACApI,EAAAvE,EAAAuE,QAAAmC,SAAAuH,MACA1D,EAAA/L,EAAA+F,QAAAgG,QACAnK,EAAAS,EAAAT,KAAAR,GACA4L,KAIAf,GACAzK,QACA0gC,UAAA9gC,EACAiB,UACAhB,aAAAmD,EAAApD,OAGAyW,GACA,kBACA,cACA,cACA,uBACA,mBACA,mBACA,cACA,YACA,aACA,YAGA,IAAAvV,EAAA,EAAA4J,EAAA2L,EAAAjU,OAAkCtB,EAAA4J,IAAU5J,EAC5CiS,EAAAsD,EAAAvV,GACA0K,EAAAuH,GAAAxI,GACAoC,EAAAoG,GACAlS,EAAAkS,GACAxO,EAAAwO,IACAtI,EAAA7K,GAUA,OANA4L,EAAAhE,OAAA+C,GACAoC,EAAAnF,OACApH,IAAA+J,OAAAQ,EACA9J,EAAA2G,OACAjD,EAAAiD,QACAiD,EAAA7K,GACA4L,2CCvKA,IAAAnN,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtB+3B,EAAY/3B,EAAQ,QA8DpB,SAAAqiC,EAAA1U,GACA,IACAnrB,EAAA4J,EADAlK,KAGA,IAAAM,EAAA,EAAA4J,EAAAuhB,EAAA7pB,OAAiCtB,EAAA4J,IAAU5J,EAC3CN,EAAA0B,KAAA+pB,EAAAnrB,GAAAE,OAGA,OAAAR,EAGA,SAAAogC,EAAA7zB,EAAAnN,EAAA49B,GACA,IAAAqD,EAAA9zB,EAAAsjB,gBAAAzwB,GASA,OAPA49B,IAEAqD,GADA,IAAAjhC,GACAmN,EAAAsjB,gBAAA,GAAAwQ,GAAA,GAEAA,EAAA9zB,EAAAsjB,gBAAAzwB,EAAA,OAGAihC,EAGA,SAAAC,EAAAr2B,EAAAglB,EAAAhqB,GACA,OAAAjH,EAAAmC,QAAA8uB,GACAjxB,EAAAuiC,YAAAt2B,EAAAhF,EAAAgqB,GACAhlB,EAAA1E,YAAA0pB,GAAA5rB,MAGA,SAAAm9B,EAAAz8B,GACA,IAAAS,EAAAxG,EAAAwG,eACA0vB,EAAAr2B,EAAA0G,OACA+E,EAAA9E,EAAAT,EAAA1F,SAAA61B,EAAAzvB,iBACA4sB,EAAA7sB,EAAAT,EAAAW,UAAAwvB,EAAAvvB,kBACA87B,EAAAj8B,EAAAT,EAAAa,WAAAsvB,EAAArvB,mBAEA,OACAyE,OACA+nB,QACAoP,SACAx7B,KAAAjH,EAAA+G,WAAAuE,EAAA+nB,EAAAoP,IAIA,SAAAC,EAAA38B,GACA,OAAA/F,EAAA+F,QAAAqF,aACApL,EAAAwG,eAAAT,EAAA48B,WAAA,KACA3iC,EAAAwG,eAAAT,EAAA1F,SAAAR,EAAA0G,OAAAE,kBA5GA5G,EAAAa,KAAA,SACAE,SAAA,EACAC,SAAA,OACAwrB,QAAA,EAGA0S,WACAn+B,SAAA,EACAwW,MAAA,qBACAhU,UAAA,EACAw/B,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,sBACAC,yBAAA,EACAnE,iBAAA,EACAj8B,cACAE,iBAAA,GAIAmgC,YAEAxiC,SAAA,EAGAyiC,YAAA,GAGAV,WAAA,IAGA1gC,SACAwD,IAAA,EACAC,OAAA,IAKA+nB,OACA6V,aAAA,EACAC,YAAA,EACAjR,YAAA,GACAkR,QAAA,EACAvhC,QAAA,EACAlB,SAAA,EACAH,SAAA,EACA2uB,UAAA,EACAkU,gBAAA,EACAC,YAAA,EAEAz9B,SAAA4xB,EAAA6D,WAAA1uB,OACAghB,SACAC,YAuDApjB,EAAAC,QAAA/K,EAAAgE,QAOA4/B,WAAA,WACA,IAAAn/B,EAAAjD,KACA,OACA+D,KAAAd,EAAAmB,aAAA,EACAF,IAAAjB,EAAAoB,YAAA,EACAL,MAAAf,EAAAqB,cAAA,EACAH,OAAAlB,EAAAsB,eAAA,IAQAgsB,SAAA,WACA,OAAAvwB,KAAAqiC,QAOAjU,kBAAA,WACA,IAAAlC,EAAAlsB,KAAAwE,QAAA0nB,MAWA,QAAAlZ,KAVA,IAAAkZ,EAAAO,QACAP,EAAAO,OACAptB,SAAA,KAGA,IAAA6sB,EAAAQ,QACAR,EAAAQ,OACArtB,SAAA,IAGA6sB,EACA,UAAAlZ,GAAA,UAAAA,IACA,qBAAAkZ,EAAAO,MAAAzZ,KACAkZ,EAAAO,MAAAzZ,GAAAkZ,EAAAlZ,IAEA,qBAAAkZ,EAAAQ,MAAA1Z,KACAkZ,EAAAQ,MAAA1Z,GAAAkZ,EAAAlZ,MAKAnQ,aAAA,WACApE,EAAAiG,SAAA1E,KAAAwE,QAAA3B,cAAA7C,QAGAO,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IACAjC,EAAA4J,EAAAlK,EAAAQ,EAAAirB,EAAAwD,EADAzsB,EAAAjD,KAwDA,IApDAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,QAAAvE,EAAA+D,QACAuB,KAAA,EACAC,MAAA,EACAE,IAAA,EACAC,OAAA,GACGnB,GACHC,EAAAq/B,iBAAAr/B,EAAAq/B,qBAGAr/B,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAGAH,EAAAs/B,mBACAt/B,EAAAurB,sBACAvrB,EAAAu/B,kBASAv/B,EAAAw/B,mBAIAvW,EAAAjpB,EAAAgsB,iBAEAhsB,EAAAy/B,kBAEAz/B,EAAA0/B,8BAKAliC,EAAAwC,EAAAmtB,qBAAAlE,IAAAjpB,EAAAipB,MAEAjpB,EAAA2/B,6BAEA3/B,EAAAipB,MAAAzrB,EAKAM,EAAA,EAAA4J,EAAAlK,EAAA4B,OAAmCtB,EAAA4J,IAAU5J,EAC7CE,EAAAR,EAAAM,GACA2uB,EAAAxD,EAAAnrB,GACA2uB,EAMAA,EAAAzuB,QALAirB,EAAA/pB,KAAAutB,GACAzuB,QACAyrB,OAAA,IAoBA,OAbAzpB,EAAAo/B,OAAAnW,EAGAjpB,EAAA4/B,8BACA5/B,EAAA6/B,wBACA7/B,EAAA8/B,6BAEA9/B,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAGAD,YAAA,WACAlF,EAAAiG,SAAA1E,KAAAwE,QAAAb,aAAA3D,QAKAkD,oBAAA,WACAzE,EAAAiG,SAAA1E,KAAAwE,QAAAtB,qBAAAlD,QAEAmD,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,GAEAnB,mBAAA,WACA3E,EAAAiG,SAAA1E,KAAAwE,QAAApB,oBAAApD,QAIAuiC,iBAAA,WACA9jC,EAAAiG,SAAA1E,KAAAwE,QAAA+9B,kBAAAviC,QAEAwuB,oBAAA/vB,EAAAE,KACA6jC,gBAAA,WACA/jC,EAAAiG,SAAA1E,KAAAwE,QAAAg+B,iBAAAxiC,QAIAyiC,iBAAA,WACAhkC,EAAAiG,SAAA1E,KAAAwE,QAAAi+B,kBAAAziC,QAEAivB,WAAAxwB,EAAAE,KACA+jC,gBAAA,WACAjkC,EAAAiG,SAAA1E,KAAAwE,QAAAk+B,iBAAA1iC,QAGA2iC,4BAAA,WACAlkC,EAAAiG,SAAA1E,KAAAwE,QAAAm+B,6BAAA3iC,QAEAowB,qBAAA,WACA,IAAAntB,EAAAjD,KAEAiwB,EAAAhtB,EAAAuB,QAAA0nB,MACAjpB,EAAAipB,MAAAjpB,EAAAipB,MAAArrB,IAAAovB,EAAAE,cAAAF,EAAAvrB,SAAA1E,OAEA4iC,2BAAA,WACAnkC,EAAAiG,SAAA1E,KAAAwE,QAAAo+B,4BAAA5iC,QAKA6iC,4BAAA,WACApkC,EAAAiG,SAAA1E,KAAAwE,QAAAq+B,6BAAA7iC,QAEA8iC,sBAAA,WACA,IAAA7/B,EAAAjD,KACA0K,EAAAzH,EAAA6B,IACAmrB,EAAAhtB,EAAAuB,QAAA0nB,MACAzrB,EAAAmgC,EAAA39B,EAAAo/B,QAIAW,EAAA/B,EAAAhR,GACAvlB,EAAAhF,KAAAs9B,EAAAt9B,KAEA,IAAAu9B,EAAAhT,EAAA+R,aAAA,EAEA,GAAAvhC,EAAA4B,QAAAY,EAAAuB,QAAAnF,SAAA4D,EAAAY,eAAA,CACA,IAEAmtB,EAAAC,EAFAiS,EAAAzkC,EAAAuiC,YAAAt2B,EAAAs4B,EAAAt9B,KAAAjF,EAAAwC,EAAAq/B,kBACAa,EAAAD,EAIAE,EAAAngC,EAAAqtB,gBAAA,GAAArtB,EAAAqtB,gBAAA,KAGA,MAAA6S,EAAAC,GAAAH,EAAAhT,EAAAc,YAAA,CACA,IAAAsS,EAAA5kC,EAAAqyB,UAAAmS,GAIA,GAHAjS,EAAAhyB,KAAAid,IAAAonB,GACApS,EAAAjyB,KAAAkd,IAAAmnB,GAEApS,EAAAiS,EAAAjgC,EAAAF,UAAA,CAEAkgC,IACA,MAGAA,IACAE,EAAAnS,EAAAkS,GAIAjgC,EAAAggC,iBAEAF,2BAAA,WACAtkC,EAAAiG,SAAA1E,KAAAwE,QAAAu+B,4BAAA/iC,QAKAwD,UAAA,WACA/E,EAAAiG,SAAA1E,KAAAwE,QAAAhB,WAAAxD,QAEAyD,IAAA,WACA,IAAAR,EAAAjD,KAEA4D,EAAAX,EAAAW,SACAE,MAAA,EACAG,OAAA,GAGAxD,EAAAmgC,EAAA39B,EAAAo/B,QAEAx9B,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MACAoX,EAAAz+B,EAAAg9B,WACA0B,EAAA1+B,EAAA24B,UACAn+B,EAAAwF,EAAAxF,QACAwE,EAAAZ,EAAAY,eAEAm/B,EAAA/B,EAAAhR,GACAuR,EAAA38B,EAAA24B,UAAAgE,eAkBA,GAbA59B,EAAAE,MAFAD,EAEAZ,EAAAugC,cAAAvgC,EAAAH,SAAAG,EAAAD,QAAAe,KAAAd,EAAAD,QAAAgB,MAAAf,EAAAH,SAEAzD,GAAAkkC,EAAAhC,UAAAC,EAAA,EAKA59B,EAAAK,OADAJ,EACAxE,GAAAkkC,EAAAhC,UAAAC,EAAA,EAEAv+B,EAAAF,UAIAugC,EAAAjkC,WAAA,CACA,IAAAokC,EAAAtC,EAAAmC,GACAI,EAAAjlC,EAAA+F,QAAA0F,UAAAo5B,EAAA5iC,SACAijC,EAAAF,EAAAC,EAAAz/B,OAEAJ,EACAD,EAAAK,QAAA0/B,EAEA//B,EAAAE,OAAA6/B,EAKA,GAAA1T,EAAA5wB,WAAA,CACA,IAAAukC,EAAAnlC,EAAAuiC,YAAA/9B,EAAA6B,IAAAk+B,EAAAt9B,KAAAjF,EAAAwC,EAAAq/B,kBACAuB,EAAAplC,EAAAqlC,mBAAArjC,GACAsjC,EAAA,GAAAf,EAAAj5B,KACAi6B,EAAA/gC,EAAAuB,QAAA0nB,MAAAxrB,QAEA,GAAAmD,EAAA,CAEAZ,EAAAghC,kBAAAL,EAEA,IAAAP,EAAA5kC,EAAAqyB,UAAA7tB,EAAAggC,eACAjS,EAAAhyB,KAAAid,IAAAonB,GACApS,EAAAjyB,KAAAkd,IAAAmnB,GAGAa,EAAAjT,EAAA2S,EACAZ,EAAAj5B,KAAA85B,EACAE,GAAAF,EAAA,GACAE,EAEAngC,EAAAK,OAAAjF,KAAA0R,IAAAzN,EAAAF,UAAAa,EAAAK,OAAAigC,EAAAF,GAEA/gC,EAAA6B,IAAAY,KAAAs9B,EAAAt9B,KACA,IAAAy+B,EAAApD,EAAA99B,EAAA6B,IAAArE,EAAA,GAAAuiC,EAAAt9B,MACA0+B,EAAArD,EAAA99B,EAAA6B,IAAArE,IAAA4B,OAAA,GAAA2gC,EAAAt9B,MAIA,IAAAzC,EAAAggC,eACAhgC,EAAAmB,YAAA,WAAAS,EAAAvF,SAAA0xB,EAAAmT,EAAA,EAAAnT,EAAA+S,EAAA,EACA9gC,EAAAqB,aAAA,WAAAO,EAAAvF,SAAA0xB,EAAA+S,EAAA,EAAA/S,EAAAoT,EAAA,IAEAnhC,EAAAmB,YAAA+/B,EAAA,IACAlhC,EAAAqB,aAAA8/B,EAAA,UAKAnU,EAAAgS,OACA2B,EAAA,EAIAA,GAAAI,EAAAD,EAGAngC,EAAAE,MAAA9E,KAAA0R,IAAAzN,EAAAH,SAAAc,EAAAE,MAAA8/B,GAEA3gC,EAAAoB,WAAA2+B,EAAAj5B,KAAA,EACA9G,EAAAsB,cAAAy+B,EAAAj5B,KAAA,EAIA9G,EAAAohC,gBAEAphC,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAOAogC,cAAA,WACA,IAAAphC,EAAAjD,KACAiD,EAAAD,UACAC,EAAAmB,YAAApF,KAAAwH,IAAAvD,EAAAmB,YAAAnB,EAAAD,QAAAe,KAAA,GACAd,EAAAoB,WAAArF,KAAAwH,IAAAvD,EAAAoB,WAAApB,EAAAD,QAAAkB,IAAA,GACAjB,EAAAqB,aAAAtF,KAAAwH,IAAAvD,EAAAqB,aAAArB,EAAAD,QAAAgB,MAAA,GACAf,EAAAsB,cAAAvF,KAAAwH,IAAAvD,EAAAsB,cAAAtB,EAAAD,QAAAmB,OAAA,KAIAT,SAAA,WACAjF,EAAAiG,SAAA1E,KAAAwE,QAAAd,UAAA1D,QAIA6D,aAAA,WACA,cAAA7D,KAAAwE,QAAAlF,UAAA,WAAAU,KAAAwE,QAAAlF,UAEAkkC,YAAA,WACA,OAAAxjC,KAAAwE,QAAA,WAIA0L,cAAA,SAAAqe,GAEA,GAAA9vB,EAAA4sB,cAAAkD,GACA,OAAAnf,IAGA,qBAAAmf,IAAA5X,SAAA4X,GACA,OAAAnf,IAGA,GAAAmf,EACA,GAAAvuB,KAAA6D,gBACA,QAAA+G,IAAA2jB,EAAArnB,EACA,OAAAlH,KAAAkQ,cAAAqe,EAAArnB,QAEI,QAAA0D,IAAA2jB,EAAApnB,EACJ,OAAAnH,KAAAkQ,cAAAqe,EAAApnB,GAKA,OAAAonB,GAQAgB,iBAAA9wB,EAAAE,KASAwQ,iBAAA1Q,EAAAE,KAOA6xB,iBAAA/xB,EAAAE,KAMA2xB,gBAAA,SAAAzwB,GACA,IAAAoD,EAAAjD,KACA8qB,EAAA7nB,EAAAuB,QAAAsmB,OACA,GAAA7nB,EAAAY,eAAA,CACA,IAAAwtB,EAAApuB,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,cACA8+B,EAAA/R,EAAAryB,KAAAwH,IAAAvD,EAAAo/B,OAAAhgC,QAAAyoB,EAAA,QACA2F,EAAA2S,EAAAvjC,EAAAoD,EAAAmB,YAEA0mB,IACA2F,GAAA2S,EAAA,GAGA,IAAAkB,EAAArhC,EAAAc,KAAA/E,KAAAyoB,MAAAgJ,GAEA,OADA6T,GAAArhC,EAAAugC,cAAAvgC,EAAAD,QAAAe,KAAA,EACAugC,EAEA,IAAAC,EAAAthC,EAAAgB,QAAAhB,EAAAoB,WAAApB,EAAAsB,eACA,OAAAtB,EAAAiB,IAAArE,GAAA0kC,GAAAthC,EAAAo/B,OAAAhgC,OAAA,KAOAo+B,mBAAA,SAAA+D,GACA,IAAAvhC,EAAAjD,KACA,GAAAiD,EAAAY,eAAA,CACA,IAAAwtB,EAAApuB,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,cACAmgC,EAAApT,EAAAmT,EAAAvhC,EAAAmB,YAEAkgC,EAAArhC,EAAAc,KAAA/E,KAAAyoB,MAAAgd,GAEA,OADAH,GAAArhC,EAAAugC,cAAAvgC,EAAAD,QAAAe,KAAA,EACAugC,EAEA,OAAArhC,EAAAiB,IAAAsgC,EAAAvhC,EAAAgB,QAOAoL,aAAA,WACA,OAAArP,KAAAmP,iBAAAnP,KAAA0kC,iBAGAA,aAAA,WACA,IAAAzhC,EAAAjD,KACA0Q,EAAAzN,EAAAyN,IACAlK,EAAAvD,EAAAuD,IAEA,OAAAvD,EAAA8+B,YAAA,EACArxB,EAAA,GAAAlK,EAAA,EAAAA,EACAkK,EAAA,GAAAlK,EAAA,EAAAkK,EACA,GAOAi0B,UAAA,SAAAzY,GACA,IAAA0Y,EASA7jC,EAAA2uB,EAAAmV,EAGAxJ,EAXAp4B,EAAAjD,KACA6D,EAAAZ,EAAAY,eACAihC,EAAA7hC,EAAAuB,QAAA0nB,MAAAO,MACAsY,EAAA7Y,EAAA7pB,OACA2iC,EAAAvmC,EAAAqyB,UAAA7tB,EAAAggC,eACAjS,EAAAhyB,KAAAid,IAAA+oB,GACAC,EAAAhiC,EAAAghC,kBAAAjT,EACAkU,KAuBA,IAlBAJ,EAAAxJ,gBACAD,EAAAyJ,EAAAxJ,eAGAz3B,IACA+gC,GAAA,GAEAK,EAAAH,EAAA5C,iBAAA6C,EAAA9hC,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,gBACAsgC,EAAA,EAAA5lC,KAAA2a,OAAAsrB,EAAAH,EAAA5C,iBAAA6C,GAAA9hC,EAAAa,OAAAb,EAAAmB,YAAAnB,EAAAqB,iBAKA+2B,GAAA0J,EAAA1J,IACAuJ,EAAA5lC,KAAAwH,IAAAo+B,EAAA5lC,KAAA2a,MAAAorB,EAAA1J,MAIAt6B,EAAA,EAAaA,EAAAgkC,EAAehkC,IAC5B2uB,EAAAxD,EAAAnrB,GAGA8jC,EAAAD,EAAA,GAAA7jC,EAAA6jC,EAAA,GAAA7jC,EAAA6jC,IAAA,GAAA7jC,EAAA6jC,GAAAG,EACAF,GAAA9jC,IAAAgkC,EAAA,UAEArV,EAAAzuB,MAEAikC,EAAA/iC,KAAAutB,GAEA,OAAAwV,GAKAz+B,KAAA,SAAA8J,GACA,IAAAtN,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACA,GAAAA,EAAAnF,QAAA,CAIA,IAAAqL,EAAAzH,EAAA6B,IACA6vB,EAAAr2B,EAAA0G,OACA8/B,EAAAtgC,EAAA0nB,MAAAO,MACA0Y,EAAA3gC,EAAA0nB,MAAAQ,OAAAoY,EACAtH,EAAAh5B,EAAAg5B,UACAqE,EAAAr9B,EAAAq9B,WAEAuD,EAAA,IAAAniC,EAAAggC,cACAp/B,EAAAZ,EAAAY,eAEAqoB,EAAA4Y,EAAA9W,SAAA/qB,EAAA0hC,UAAA1hC,EAAAstB,YAAAttB,EAAAstB,WACA8U,EAAA5mC,EAAAwG,eAAA6/B,EAAA/9B,UAAA4tB,EAAA3tB,kBACAg8B,EAAA/B,EAAA6D,GACAQ,EAAA7mC,EAAAwG,eAAAkgC,EAAAp+B,UAAA4tB,EAAA3tB,kBACAu+B,EAAAtE,EAAAkE,GAEAK,EAAAhI,EAAA+D,UAAA/D,EAAAgE,eAAA,EAEAiE,EAAAhnC,EAAAwG,eAAA48B,EAAA96B,UAAA4tB,EAAA3tB,kBACA0+B,EAAAzE,EAAAY,GACA6B,EAAAjlC,EAAA+F,QAAA0F,UAAA23B,EAAAnhC,SACAskC,EAAAvmC,EAAAqyB,UAAA7tB,EAAAggC,eAEA0C,KAEAC,EAAA3iC,EAAAuB,QAAAg5B,UAAA37B,UACAgkC,EAAA,UAAArhC,EAAAlF,SAAA2D,EAAAc,KAAAd,EAAAe,MAAA4hC,EAAAJ,EACAM,EAAA,UAAAthC,EAAAlF,SAAA2D,EAAAc,KAAAyhC,EAAAviC,EAAAe,MACA+hC,EAAA,WAAAvhC,EAAAlF,SAAA2D,EAAAiB,IAAA0hC,EAAA3iC,EAAAkB,OAAAqhC,EAAAI,EACAI,EAAA,WAAAxhC,EAAAlF,SAAA2D,EAAAiB,IAAA0hC,EAAAJ,EAAAviC,EAAAkB,OAAAyhC,EAqKA,GAnKAnnC,EAAAsH,KAAAmmB,EAAA,SAAAwD,EAAA7vB,GAEA,IAAApB,EAAA4sB,cAAAqE,EAAAzuB,OAAA,CAIA,IACAY,EAAAokC,EAAAzkC,EAAAE,EAeAwkC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA/qB,EAAAgrB,EAAAC,EAhBAzlC,EAAAyuB,EAAAzuB,MAEApB,IAAAoD,EAAA0jC,eAAAniC,EAAAsmB,SAAA0S,EAAAC,iBAEA57B,EAAA27B,EAAAiE,cACAwE,EAAAzI,EAAAkE,cACAlgC,EAAAg8B,EAAAmE,mBACAjgC,EAAA87B,EAAAoE,2BAEA//B,EAAApD,EAAA2P,sBAAAovB,EAAA37B,UAAAhC,GACAomC,EAAAxnC,EAAA2P,sBAAAovB,EAAA3nB,MAAAhW,GACA2B,EAAA/C,EAAAwG,eAAAu4B,EAAAh8B,WAAAmzB,EAAAnzB,YACAE,EAAAjD,EAAAwG,eAAAu4B,EAAA97B,iBAAAizB,EAAAjzB,mBAKA,IAAAmE,EAAA,SACAC,EAAA,SACAk+B,EAAAc,EAAApkC,QAEA,GAAAmD,EAAA,CACA,IAAA+iC,EAAApB,EAAAxB,EAEA,WAAAx/B,EAAAlF,UAEAwG,EAAAs/B,EAAA,eACAv/B,EAAAu/B,EAAA,iBACAsB,EAAAzjC,EAAAiB,IAAA0iC,IAGA9gC,EAAAs/B,EAAA,kBACAv/B,EAAAu/B,EAAA,gBACAsB,EAAAzjC,EAAAkB,OAAAyiC,GAGA,IAAAC,EAAAhG,EAAA59B,EAAApD,EAAA29B,EAAAC,iBAAAvR,EAAA7pB,OAAA,GACAwkC,EAAA5jC,EAAAc,OACAkiC,EAAA,iBAEAY,GAAApoC,EAAAqoC,WAAAjlC,GAEA4kC,EAAAxjC,EAAAqtB,gBAAAzwB,GAAAilC,EAAA3C,YAEA+D,EAAAE,EAAAE,EAAAE,EAAAK,EACAV,EAAAJ,EACAM,EAAAL,EACAO,EAAAh2B,EAAArM,IACAuX,EAAAlL,EAAApM,OAAAyhC,MACI,CACJ,IACAmB,EADAC,EAAA,SAAAxiC,EAAAlF,SAGAwlC,EAAA7C,QACAp8B,EAAAmhC,EAAA,eACAD,EAAA/C,IAEAn+B,EAAAmhC,EAAA,eACAD,EAAAvB,EAAAxB,GAGAyC,EAAAO,EAAA/jC,EAAAe,MAAA+iC,EAAA9jC,EAAAc,KAAAgjC,EAEA,IAAAE,EAAApG,EAAA59B,EAAApD,EAAA29B,EAAAC,iBAAAvR,EAAA7pB,OAAA,GACA4kC,EAAAhkC,EAAAiB,MACA+hC,EAAA,iBAEAgB,GAAAxoC,EAAAqoC,WAAAjlC,GAEA6kC,EAAAzjC,EAAAqtB,gBAAAzwB,GAAAilC,EAAA3C,YAEA+D,EAAAL,EACAO,EAAAN,EACAQ,EAAA/1B,EAAAxM,KACAyiC,EAAAj2B,EAAAvM,MAAA4hC,EACAO,EAAAE,EAAAE,EAAA9qB,EAAAwrB,EAGAtB,EAAAxjC,MACA+jC,MACAC,MACAC,MACAC,MACAC,KACAC,KACAC,KACA/qB,KACAgrB,SACAC,SACAQ,QAAArlC,EACAslC,QAAAlB,EACAmB,aAAA5lC,EACA6lC,mBAAA3lC,EACAiN,UAAA,EAAAq2B,EACA/jC,QACAyrB,MAAAgD,EAAAhD,MACA5mB,eACAD,iBAKApH,EAAAsH,KAAA4/B,EAAA,SAAA2B,GA0BA,GAzBA9J,EAAAn+B,UACAqL,EAAArD,OACAqD,EAAA7I,UAAAylC,EAAAJ,QACAx8B,EAAA3I,YAAAulC,EAAAH,QACAz8B,EAAAlD,cACAkD,EAAAlD,YAAA8/B,EAAAF,cACA18B,EAAAjJ,eAAA6lC,EAAAD,oBAGA38B,EAAAnC,YAEAi1B,EAAA+D,YACA72B,EAAAlC,OAAA8+B,EAAApB,IAAAoB,EAAAnB,KACAz7B,EAAAjC,OAAA6+B,EAAAlB,IAAAkB,EAAAjB,MAGA7I,EAAA8D,kBACA52B,EAAAlC,OAAA8+B,EAAAhB,GAAAgB,EAAAf,IACA77B,EAAAjC,OAAA6+B,EAAAd,GAAAc,EAAA7rB,KAGA/Q,EAAAhC,SACAgC,EAAAzC,WAGA68B,EAAAzlC,QAAA,CAEAqL,EAAArD,OACAqD,EAAA0nB,UAAAkV,EAAAb,OAAAa,EAAAZ,QACAh8B,EAAA2nB,OAAAiV,EAAA34B,UACAjE,EAAAhF,KAAA4hC,EAAA5a,MAAA6Y,EAAA7/B,KAAAs9B,EAAAt9B,KACAgF,EAAAxJ,UAAAomC,EAAA5a,MAAA4Y,EAAAD,EACA36B,EAAA5E,aAAAwhC,EAAAxhC,aACA4E,EAAA7E,UAAAyhC,EAAAzhC,UAEA,IAAA5E,EAAAqmC,EAAArmC,MACA,GAAAxC,EAAAmC,QAAAK,GAKA,IAJA,IAAAsmC,EAAAtmC,EAAAoB,OACA++B,EAAA,IAAA4B,EAAAj5B,KACA5C,EAAAlE,EAAAY,eAAA,GAAAu9B,GAAAmG,EAAA,KAEAxmC,EAAA,EAAoBA,EAAAwmC,IAAexmC,EAEnC2J,EAAAxC,SAAA,GAAAjH,EAAAF,GAAA,EAAAoG,GAEAA,GAAAi6B,OAGA12B,EAAAxC,SAAAjH,EAAA,KAEAyJ,EAAAzC,aAIA45B,EAAAxiC,QAAA,CAEA,IAAAmoC,EACAC,EACA94B,EAAA,EACA+4B,EAAAvG,EAAAU,GAAA,EAEA,GAAAh+B,EACA2jC,EAAAvkC,EAAAc,MAAAd,EAAAe,MAAAf,EAAAc,MAAA,EACA0jC,EAAA,WAAAjjC,EAAAlF,SACA2D,EAAAkB,OAAAujC,EAAAhE,EAAAv/B,OACAlB,EAAAiB,IAAAwjC,EAAAhE,EAAAx/B,QACI,CACJ,IAAA8iC,EAAA,SAAAxiC,EAAAlF,SACAkoC,EAAAR,EACA/jC,EAAAc,KAAA2jC,EAAAhE,EAAAx/B,IACAjB,EAAAe,MAAA0jC,EAAAhE,EAAAx/B,IACAujC,EAAAxkC,EAAAiB,KAAAjB,EAAAkB,OAAAlB,EAAAiB,KAAA,EACAyK,EAAAq4B,GAAA,GAAAhoC,KAAA4c,GAAA,GAAA5c,KAAA4c,GAGAlR,EAAArD,OACAqD,EAAA0nB,UAAAoV,EAAAC,GACA/8B,EAAA2nB,OAAA1jB,GACAjE,EAAA7E,UAAA,SACA6E,EAAA5E,aAAA,SACA4E,EAAAxJ,UAAAukC,EACA/6B,EAAAhF,KAAAggC,EAAAhgC,KACAgF,EAAAxC,SAAA25B,EAAAC,YAAA,KACAp3B,EAAAzC,UAGA,GAAAu1B,EAAA6D,WAAA,CAEA32B,EAAA7I,UAAApD,EAAA2P,sBAAAovB,EAAA37B,UAAA,GACA6I,EAAA3I,YAAAtD,EAAA2P,sBAAAovB,EAAA3nB,MAAA,GACA,IAAAywB,EAAArjC,EAAAc,KACAyiC,EAAAvjC,EAAAe,MAAA4hC,EACAW,EAAAtjC,EAAAiB,IACAuX,EAAAxY,EAAAkB,OAAAyhC,EAEAkB,EAAAroC,EAAAqoC,WAAAp8B,EAAA7I,WACAgC,GACA0iC,EAAA9qB,EAAA,QAAAjX,EAAAlF,SAAA2D,EAAAkB,OAAAlB,EAAAiB,IACAqiC,GAAAO,EACArrB,GAAAqrB,IAEAR,EAAAE,EAAA,SAAAhiC,EAAAlF,SAAA2D,EAAAe,MAAAf,EAAAc,KACAuiC,GAAAQ,EACAN,GAAAM,GAGAp8B,EAAAnC,YACAmC,EAAAlC,OAAA89B,EAAAC,GACA77B,EAAAjC,OAAA+9B,EAAA/qB,GACA/Q,EAAAhC,iDC/5BA,IAAApK,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACA23B,WACA3K,SAAA,IACAphB,OAAA,eACA48B,WAAAlpC,EAAAE,KACAipC,WAAAnpC,EAAAE,QAIA2K,EAAAC,SACAs+B,cAAA,GACAC,cACAC,WAAA,EACAC,QAAA,KAQAC,aAAA,SAAAhoC,EAAA62B,EAAA3K,EAAA+b,GACA,IACAnnC,EAAA4J,EADAm9B,EAAA9nC,KAAA8nC,WASA,IANAhR,EAAA72B,QAEAioC,IACAjoC,EAAAkoC,WAAA,GAGApnC,EAAA,EAAA4J,EAAAm9B,EAAAzlC,OAAuCtB,EAAA4J,IAAU5J,EACjD,GAAA+mC,EAAA/mC,GAAAd,UAEA,YADA6nC,EAAA/mC,GAAA+1B,GAKAgR,EAAA3lC,KAAA20B,GAGA,IAAAgR,EAAAzlC,QACArC,KAAAooC,yBAIAC,gBAAA,SAAApoC,GACA,IAAAJ,EAAApB,EAAA6pC,UAAAtoC,KAAA8nC,WAAA,SAAAhR,GACA,OAAAA,EAAA72B,aAGA,IAAAJ,IACAG,KAAA8nC,WAAA/zB,OAAAlU,EAAA,GACAI,EAAAkoC,WAAA,IAIAC,sBAAA,WACA,IAAAnlC,EAAAjD,KACA,OAAAiD,EAAA+kC,UAIA/kC,EAAA+kC,QAAAvpC,EAAA8pC,iBAAAv/B,KAAAmf,OAAA,WACAllB,EAAA+kC,QAAA,KACA/kC,EAAAulC,kBAQAA,YAAA,WACA,IAAAvlC,EAAAjD,KACAyoC,EAAAC,KAAAC,MACAC,EAAA,EAEA3lC,EAAA8kC,WAAA,IACAa,EAAA5pC,KAAA2a,MAAA1W,EAAA8kC,YACA9kC,EAAA8kC,WAAA9kC,EAAA8kC,WAAA,GAGA9kC,EAAA4lC,QAAA,EAAAD,GAEA,IAAAE,EAAAJ,KAAAC,MAEA1lC,EAAA8kC,aAAAe,EAAAL,GAAAxlC,EAAA4kC,cAGA5kC,EAAA6kC,WAAAzlC,OAAA,GACAY,EAAAmlC,yBAOAS,QAAA,SAAAzzB,GACA,IACA0hB,EAAA72B,EADA6nC,EAAA9nC,KAAA8nC,WAEA/mC,EAAA,EAEA,MAAAA,EAAA+mC,EAAAzlC,OACAy0B,EAAAgR,EAAA/mC,GACAd,EAAA62B,EAAA72B,MAEA62B,EAAAjsB,aAAAisB,EAAAjsB,aAAA,GAAAuK,EACA0hB,EAAAjsB,YAAA7L,KAAA0R,IAAAomB,EAAAjsB,YAAAisB,EAAAhsB,UAEArM,EAAAiG,SAAAoyB,EAAA9rB,QAAA/K,EAAA62B,GAAA72B,GACAxB,EAAAiG,SAAAoyB,EAAA7rB,qBAAA6rB,GAAA72B,GAEA62B,EAAAjsB,aAAAisB,EAAAhsB,UACArM,EAAAiG,SAAAoyB,EAAA5rB,qBAAA4rB,GAAA72B,GACAA,EAAAkoC,WAAA,EACAL,EAAA/zB,OAAAhT,EAAA,MAEAA,yCC1HA,IAAAtC,EAAcF,EAAQ,QAEtB,SAAAwqC,EAAAt2B,EAAAnT,GACA,OAAAb,EAAAuqC,MAAAv2B,EAAA,SAAAiF,GACA,OAAAA,EAAApY,eAIA,SAAA2pC,EAAAx2B,EAAAjT,GACAiT,EAAAM,QAAA,SAAA2E,EAAA3W,GAEA,OADA2W,EAAAwxB,WAAAnoC,EACA2W,IAEAjF,EAAAmc,KAAA,SAAAnW,EAAApO,GACA,IAAAopB,EAAAj0B,EAAA6K,EAAAoO,EACAib,EAAAl0B,EAAAiZ,EAAApO,EACA,OAAAopB,EAAAh0B,SAAAi0B,EAAAj0B,OACAg0B,EAAAyV,WAAAxV,EAAAwV,WACAzV,EAAAh0B,OAAAi0B,EAAAj0B,SAEAgT,EAAAM,QAAA,SAAA2E,UACAA,EAAAwxB,aAwBA5/B,EAAAC,SACAjL,YAQA+K,OAAA,SAAApJ,EAAA2E,GACA3E,EAAAkpC,QACAlpC,EAAAkpC,UAIAvkC,EAAArF,UAAAqF,EAAArF,YAAA,EACAqF,EAAAtF,SAAAsF,EAAAtF,UAAA,MACAsF,EAAAnF,OAAAmF,EAAAnF,QAAA,EAEAQ,EAAAkpC,MAAAhnC,KAAAyC,IAQA+E,UAAA,SAAA1J,EAAAmpC,GACA,IAAAvpC,EAAAI,EAAAkpC,MAAAlpC,EAAAkpC,MAAAr1B,QAAAs1B,IAAA,GACA,IAAAvpC,GACAI,EAAAkpC,MAAAp1B,OAAAlU,EAAA,IAUAuJ,UAAA,SAAAnJ,EAAA2E,EAAAJ,GAMA,IALA,IAGA6kC,EAHAC,GAAA,iCACA3+B,EAAA2+B,EAAAjnC,OACAtB,EAAA,EAGQA,EAAA4J,IAAU5J,EAClBsoC,EAAAC,EAAAvoC,GACAyD,EAAA+R,eAAA8yB,KACAzkC,EAAAykC,GAAA7kC,EAAA6kC,KAYA9oC,OAAA,SAAAN,EAAA6D,EAAAG,GACA,GAAAhE,EAAA,CAIA,IAAAspC,EAAAtpC,EAAAuE,QAAAglC,WACA9oC,EAAAjC,EAAA+F,QAAA0F,UAAAq/B,EAAA7oC,SACA+oC,EAAA/oC,EAAAqD,KACA2lC,EAAAhpC,EAAAsD,MACA2lC,EAAAjpC,EAAAwD,IACA0lC,EAAAlpC,EAAAyD,OAEA0lC,EAAAd,EAAA9oC,EAAAkpC,MAAA,QACAW,EAAAf,EAAA9oC,EAAAkpC,MAAA,SACAY,EAAAhB,EAAA9oC,EAAAkpC,MAAA,OACAa,EAAAjB,EAAA9oC,EAAAkpC,MAAA,UACAc,EAAAlB,EAAA9oC,EAAAkpC,MAAA,aAGAF,EAAAY,GAAA,GACAZ,EAAAa,GAAA,GACAb,EAAAc,GAAA,GACAd,EAAAe,GAAA,GAwCA,IAAAE,EAAApmC,EAAA2lC,EAAAC,EACAS,EAAAlmC,EAAA0lC,EAAAC,EACAQ,EAAAF,EAAA,EACAG,EAAAF,EAAA,EAGAG,GAAAxmC,EAAAsmC,IAAAP,EAAAxnC,OAAAynC,EAAAznC,QAGAkoC,GAAAtmC,EAAAomC,IAAAN,EAAA1nC,OAAA2nC,EAAA3nC,QAGAmoC,EAAAN,EACAO,EAAAN,EACAO,KAqBAjsC,EAAAsH,KAAA8jC,EAAAxU,OAAAyU,EAAAC,EAAAC,GAAAW,GAGA,IAAAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EAEAtsC,EAAAsH,KAAAgkC,EAAA1U,OAAA2U,GAAA,SAAAgB,GACA,GAAAA,EAAA5I,WAAA,CACA,IAAA6I,EAAAD,EAAA5I,aACAwI,EAAA5rC,KAAAwH,IAAAokC,EAAAK,EAAAlnC,MACA8mC,EAAA7rC,KAAAwH,IAAAqkC,EAAAI,EAAAjnC,UAIAvF,EAAAsH,KAAA8jC,EAAAxU,OAAAyU,GAAA,SAAAoB,GACA,GAAAA,EAAA9I,WAAA,CACA,IAAA6I,EAAAC,EAAA9I,aACA0I,EAAA9rC,KAAAwH,IAAAskC,EAAAG,EAAA/mC,KACA6mC,EAAA/rC,KAAAwH,IAAAukC,EAAAE,EAAA9mC,WAOA,IAAAgnC,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EA2BAnrC,EAAAsH,KAAA8jC,EAAAxU,OAAAyU,GAAAyB,GAEA9sC,EAAAsH,KAAA8jC,EAAA,SAAA2B,GACAL,GAAAK,EAAA1nC,QAGArF,EAAAsH,KAAA+jC,EAAA,SAAA0B,GACAJ,GAAAI,EAAA1nC,QAIArF,EAAAsH,KAAAgkC,EAAA1U,OAAA2U,GAAAuB,GAGA9sC,EAAAsH,KAAAgkC,EAAA,SAAAyB,GACAH,GAAAG,EAAAvnC,SAGAxF,EAAAsH,KAAAikC,EAAA,SAAAwB,GACAF,GAAAE,EAAAvnC,SAqBAxF,EAAAsH,KAAA8jC,EAAAxU,OAAAyU,GAAA2B,GAGAN,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EACA2B,EAAA1B,EAEAnrC,EAAAsH,KAAA8jC,EAAA,SAAA2B,GACAL,GAAAK,EAAA1nC,QAGArF,EAAAsH,KAAA+jC,EAAA,SAAA0B,GACAJ,GAAAI,EAAA1nC,QAGArF,EAAAsH,KAAAgkC,EAAA,SAAAyB,GACAH,GAAAG,EAAAvnC,SAEAxF,EAAAsH,KAAAikC,EAAA,SAAAwB,GACAF,GAAAE,EAAAvnC,SAIA,IAAAynC,EAAA1sC,KAAAwH,IAAAokC,EAAAO,EAAA,GACAA,GAAAO,EACAN,GAAApsC,KAAAwH,IAAAqkC,EAAAO,EAAA,GAEA,IAAAO,EAAA3sC,KAAAwH,IAAAskC,EAAAO,EAAA,GACAA,GAAAM,EACAL,GAAAtsC,KAAAwH,IAAAukC,EAAAO,EAAA,GAKA,IAAAM,EAAA3nC,EAAAonC,EAAAC,EACAO,EAAA/nC,EAAAqnC,EAAAC,EAEAS,IAAArB,GAAAoB,IAAAnB,IACAhsC,EAAAsH,KAAA8jC,EAAA,SAAA2B,GACAA,EAAAvnC,OAAA2nC,IAGAntC,EAAAsH,KAAA+jC,EAAA,SAAA0B,GACAA,EAAAvnC,OAAA2nC,IAGAntC,EAAAsH,KAAAgkC,EAAA,SAAAyB,GACAA,EAAAjsC,YACAisC,EAAA1nC,MAAA+nC,KAIAptC,EAAAsH,KAAAikC,EAAA,SAAAwB,GACAA,EAAAjsC,YACAisC,EAAA1nC,MAAA+nC,KAIApB,EAAAmB,EACApB,EAAAqB,GAIA,IAAA9nC,EAAA0lC,EAAAiC,EACAxnC,EAAAylC,EAAAgC,EAwBAltC,EAAAsH,KAAA8jC,EAAAxU,OAAA0U,GAAA+B,GAGA/nC,GAAAymC,EACAtmC,GAAAumC,EAEAhsC,EAAAsH,KAAA+jC,EAAAgC,GACArtC,EAAAsH,KAAAikC,EAAA8B,GAGA7rC,EAAAsQ,WACAxM,KAAAonC,EACAjnC,IAAAmnC,EACArnC,MAAAmnC,EAAAX,EACArmC,OAAAknC,EAAAZ,GAIAhsC,EAAAsH,KAAAkkC,EAAA,SAAAuB,GACAA,EAAAznC,KAAA9D,EAAAsQ,UAAAxM,KACAynC,EAAAtnC,IAAAjE,EAAAsQ,UAAArM,IACAsnC,EAAAxnC,MAAA/D,EAAAsQ,UAAAvM,MACAwnC,EAAArnC,OAAAlE,EAAAsQ,UAAApM,OAEAqnC,EAAAjrC,OAAAiqC,EAAAC,KArOA,SAAAE,EAAAa,GACA,IAAA5nC,EACAC,EAAA2nC,EAAA3nC,eAEAA,GACAD,EAAA4nC,EAAAjrC,OAAAirC,EAAAjsC,UAAA2qC,EAAAM,EAAAD,GACAE,GAAA7mC,EAAAK,SAEAL,EAAA4nC,EAAAjrC,OAAA+pC,EAAAG,GACAD,GAAA5mC,EAAAE,OAGA4mC,EAAAvoC,MACAs8B,WAAA56B,EACAD,UACA4nC,QAqCA,SAAAD,EAAAC,GACA,IAAAO,EAAAttC,EAAAutC,cAAAtB,EAAA,SAAAuB,GACA,OAAAA,EAAAT,UAGA,GAAAO,EACA,GAAAP,EAAA3nC,eAAA,CACA,IAAAqoC,GACAnoC,KAAA/E,KAAAwH,IAAA2kC,EAAAP,GACA5mC,MAAAhF,KAAAwH,IAAA4kC,EAAAP,GACA3mC,IAAA,EACAC,OAAA,GAKAqnC,EAAAjrC,OAAAirC,EAAAjsC,UAAA2qC,EAAAM,EAAAL,EAAA,EAAA+B,QAEAV,EAAAjrC,OAAAwrC,EAAAnoC,QAAAE,MAAA2mC,GA4BA,SAAAgB,EAAAD,GACA,IAAAO,EAAAttC,EAAAutC,cAAAtB,EAAA,SAAA9mC,GACA,OAAAA,EAAA4nC,UAGAU,GACAnoC,KAAA,EACAC,MAAA,EACAE,IAAAmnC,EACAlnC,OAAAmnC,GAGAS,GACAP,EAAAjrC,OAAAwrC,EAAAnoC,QAAAE,MAAA2mC,EAAAyB,GAwEA,SAAAJ,EAAAN,GACAA,EAAA3nC,gBACA2nC,EAAAznC,KAAAynC,EAAAjsC,UAAAkqC,EAAA0B,EACAK,EAAAxnC,MAAAwnC,EAAAjsC,UAAAuE,EAAA4lC,EAAAyB,EAAAX,EACAgB,EAAAtnC,MACAsnC,EAAArnC,OAAAD,EAAAsnC,EAAAvnC,OAGAC,EAAAsnC,EAAArnC,SAIAqnC,EAAAznC,OACAynC,EAAAxnC,MAAAD,EAAAynC,EAAA1nC,MACA0nC,EAAAtnC,IAAAmnC,EACAG,EAAArnC,OAAAknC,EAAAZ,EAGA1mC,EAAAynC,EAAAxnC,+CCjYA,IAAAvF,EAAcF,EAAQ,QAMtB+K,EAAAC,SAKA4wB,YAOA1uB,OAAA,SAAA3B,GACA,OAAArL,EAAAmC,QAAAkJ,KAAA,GAAAA,GAWAswB,OAAA,SAAA+R,EAAAtsC,EAAAqsB,GAEA,IAAA1U,EAAA0U,EAAA7pB,OAAA,EAAA6pB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAGAltB,KAAAsnB,IAAA9O,GAAA,GACA20B,IAAAntC,KAAA2a,MAAAwyB,KAEA30B,EAAA20B,EAAAntC,KAAA2a,MAAAwyB,IAIA,IAAAC,EAAA3tC,EAAAu9B,MAAAh9B,KAAAsnB,IAAA9O,IACA60B,EAAA,GAEA,OAAAF,EAAA,CACA,IAAAG,EAAAttC,KAAAwH,IAAAxH,KAAAsnB,IAAA4F,EAAA,IAAAltB,KAAAsnB,IAAA4F,IAAA7pB,OAAA,KACA,GAAAiqC,EAAA,MACA,IAAAC,EAAA9tC,EAAAu9B,MAAAh9B,KAAAsnB,IAAA6lB,IACAE,EAAAF,EAAAK,cAAAxtC,KAAA2a,MAAA4yB,GAAAvtC,KAAA2a,MAAAyyB,QACK,CACL,IAAAK,GAAA,EAAAztC,KAAA2a,MAAAyyB,GACAK,EAAAztC,KAAAwH,IAAAxH,KAAA0R,IAAA+7B,EAAA,OACAJ,EAAAF,EAAAO,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAGA/P,YAAA,SAAA6P,EAAAtsC,EAAAqsB,GACA,IAAAygB,EAAAR,EAAAntC,KAAAsZ,IAAA,GAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAAmQ,KAEA,WAAAA,EACA,IACI,IAAAQ,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA9sC,OAAAqsB,EAAA7pB,OAAA,EACJ8pC,EAAAK,gBAEA,2CCtEA,IAAA/tC,EAAcF,EAAQ,QACtBquC,EAAYruC,EAAQ,QACpBsuC,EAAUtuC,EAAQ,QAGlBuuC,EAAAD,EAAAE,SAAAF,EAAAD,EAOAtjC,EAAAC,QAAA9K,EAAA+D,QAIAC,WAAA,aASA4P,eAAA,aAQA26B,eAAA,aASAC,iBAAA,aAQAC,oBAAA,cAECJ,sCCpDDxjC,EAAAC,QAAA,SAAA2C,GAEAA,EAAAihC,MAAA,SAAAziC,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,QAEA,IAAAsD,EAAAxB,EAAAhI,0CCLA4G,EAAAC,WACAD,EAAAC,QAAA6jC,OAAwB7uC,EAAQ,QAChC+K,EAAAC,QAAAnK,OAAwBb,EAAQ,QAChC+K,EAAAC,QAAAktB,MAAuBl4B,EAAQ,gCCJ/B,IAAA8uC,EAAiB9uC,EAAQ,QAqBzB,SAAA+uC,EAAAC,GACA,GAAAA,EAAA,CAGA,IAAAC,EAAA,uBACAC,EAAA,uBACAC,EAAA,2FACAC,EAAA,6GACArxB,EAAA,QAEAlF,GAAA,OACAqB,EAAA,EACAxO,EAAAsjC,EAAAtjC,MAAAujC,GACA,GAAAvjC,EAAA,CACAA,IAAA,GACA,QAAAlJ,EAAA,EAAqBA,EAAAqW,EAAA/U,OAAgBtB,IACrCqW,EAAArW,GAAA6sC,SAAA3jC,EAAAlJ,GAAAkJ,EAAAlJ,GAAA,SAGA,GAAAkJ,EAAAsjC,EAAAtjC,MAAAwjC,GAAA,CACAxjC,IAAA,GACA,IAAAlJ,EAAA,EAAqBA,EAAAqW,EAAA/U,OAAgBtB,IACrCqW,EAAArW,GAAA6sC,SAAA3jC,EAAAmJ,MAAA,EAAArS,EAAA,EAAAA,EAAA,YAGA,GAAAkJ,EAAAsjC,EAAAtjC,MAAAyjC,GAAA,CACA,IAAA3sC,EAAA,EAAqBA,EAAAqW,EAAA/U,OAAgBtB,IACrCqW,EAAArW,GAAA6sC,SAAA3jC,EAAAlJ,EAAA,IAEA0X,EAAAo1B,WAAA5jC,EAAA,SAEA,GAAAA,EAAAsjC,EAAAtjC,MAAA0jC,GAAA,CACA,IAAA5sC,EAAA,EAAqBA,EAAAqW,EAAA/U,OAAgBtB,IACrCqW,EAAArW,GAAA/B,KAAAyoB,MAAA,KAAAomB,WAAA5jC,EAAAlJ,EAAA,KAEA0X,EAAAo1B,WAAA5jC,EAAA,SAEA,GAAAA,EAAAsjC,EAAAtjC,MAAAqS,GAAA,CACA,kBAAArS,EAAA,GACA,gBAGA,GADAmN,EAAAi2B,EAAApjC,EAAA,KACAmN,EACA,OAIA,IAAArW,EAAA,EAAkBA,EAAAqW,EAAA/U,OAAgBtB,IAClCqW,EAAArW,GAAAiM,EAAAoK,EAAArW,GAAA,OASA,OAHA0X,EAJAA,GAAA,GAAAA,EAIAzL,EAAAyL,EAAA,KAHA,EAKArB,EAAA,GAAAqB,EACArB,GAGA,SAAA02B,EAAAP,GACA,GAAAA,EAAA,CAGA,IAAAz0B,EAAA,2GACA7O,EAAAsjC,EAAAtjC,MAAA6O,GACA,GAAA7O,EAAA,CACA,IAAA8jC,EAAAF,WAAA5jC,EAAA,IACAoN,EAAArK,EAAA4gC,SAAA3jC,EAAA,WACAqN,EAAAtK,EAAA6gC,WAAA5jC,EAAA,WACAK,EAAA0C,EAAA6gC,WAAA5jC,EAAA,WACAwO,EAAAzL,EAAA5F,MAAA2mC,GAAA,EAAAA,EAAA,KACA,OAAA12B,EAAAC,EAAAhN,EAAAmO,KAIA,SAAAu1B,EAAAT,GACA,GAAAA,EAAA,CAGA,IAAAlzB,EAAA,yGACApQ,EAAAsjC,EAAAtjC,MAAAoQ,GACA,GAAApQ,EAAA,CACA,IAAA8jC,EAAAF,WAAA5jC,EAAA,IACAoN,EAAArK,EAAA4gC,SAAA3jC,EAAA,WACA2N,EAAA5K,EAAA6gC,WAAA5jC,EAAA,WACAI,EAAA2C,EAAA6gC,WAAA5jC,EAAA,WACAwO,EAAAzL,EAAA5F,MAAA2mC,GAAA,EAAAA,EAAA,KACA,OAAA12B,EAAAO,EAAAvN,EAAAoO,KAIA,SAAAw1B,EAAAV,GACA,IAAAG,EAAAJ,EAAAC,GACA,OAAAG,KAAAt6B,MAAA,KAGA,SAAA86B,EAAAX,GACA,IAAAY,EAAAL,EAAAP,GACA,OAAAY,KAAA/6B,MAAA,KAGA,SAAAg7B,EAAAb,GACA,IAAAxlB,EAAAulB,EAAAC,GACA,OAAAxlB,EACAA,EAAA,IAEAA,EAAA+lB,EAAAP,IACAxlB,EAAA,IAEAA,EAAAimB,EAAAT,IACAxlB,EAAA,QADA,EAMA,SAAAsmB,EAAAj3B,GACA,UAAAk3B,EAAAl3B,EAAA,IAAAk3B,EAAAl3B,EAAA,IACAk3B,EAAAl3B,EAAA,IAGA,SAAAV,EAAAg3B,EAAAK,GACA,OAAAA,EAAA,GAAAL,EAAA,IAAAA,EAAA,KACAa,EAAAb,EAAAK,GAEA,OAAAL,EAAA,QAAAA,EAAA,QAAAA,EAAA,OAGA,SAAAa,EAAAb,EAAAK,GAIA,YAHAnjC,IAAAmjC,IACAA,OAAAnjC,IAAA8iC,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,KAAAK,EAAA,IAGA,SAAAS,EAAAd,EAAAK,GACA,GAAAA,EAAA,GAAAL,EAAA,IAAAA,EAAA,KACA,OAAAe,EAAAf,EAAAK,GAEA,IAAA3jC,EAAApL,KAAAyoB,MAAAimB,EAAA,YACAn2B,EAAAvY,KAAAyoB,MAAAimB,EAAA,YACArjC,EAAArL,KAAAyoB,MAAAimB,EAAA,YAEA,aAAAtjC,EAAA,MAAAmN,EAAA,MAAAlN,EAAA,KAGA,SAAAokC,EAAAf,EAAAK,GACA,IAAA3jC,EAAApL,KAAAyoB,MAAAimB,EAAA,YACAn2B,EAAAvY,KAAAyoB,MAAAimB,EAAA,YACArjC,EAAArL,KAAAyoB,MAAAimB,EAAA,YACA,cAAAtjC,EAAA,MAAAmN,EAAA,MAAAlN,EAAA,OAAA0jC,GAAAL,EAAA,WAGA,SAAAgB,EAAAP,EAAAJ,GACA,OAAAA,EAAA,GAAAI,EAAA,IAAAA,EAAA,KACAQ,EAAAR,EAAAJ,GAEA,OAAAI,EAAA,QAAAA,EAAA,SAAAA,EAAA,QAGA,SAAAQ,EAAAR,EAAAJ,GAIA,YAHAnjC,IAAAmjC,IACAA,OAAAnjC,IAAAujC,EAAA,GAAAA,EAAA,MAEA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SACAJ,EAAA,IAKA,SAAAa,EAAAv0B,EAAA0zB,GAIA,YAHAnjC,IAAAmjC,IACAA,OAAAnjC,IAAAyP,EAAA,GAAAA,EAAA,MAEA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aACAzP,IAAAmjC,GAAA,IAAAA,EAAA,KAAAA,EAAA,QAGA,SAAAzxB,EAAAlF,GACA,OAAAy3B,EAAAz3B,EAAAhE,MAAA,MAIA,SAAApG,EAAA8hC,EAAAp+B,EAAAlK,GACA,OAAAxH,KAAA0R,IAAA1R,KAAAwH,IAAAkK,EAAAo+B,GAAAtoC,GAGA,SAAA8nC,EAAAQ,GACA,IAAAC,EAAAD,EAAA5c,SAAA,IAAA/e,cACA,OAAA47B,EAAA1sC,OAAA,MAAA0sC,IAjNAzlC,EAAAC,SACA+jC,UACAQ,UACAG,SACAC,SACAF,SACAI,WAEAC,YACA33B,YACA63B,aACAC,gBACAC,iBACAC,YACAC,aACAC,YACAtyB,WAsMA,IAAAuyB,KACA,QAAAtP,KAAA8N,EACAwB,EAAAxB,EAAA9N,2CCzNA,IAAAjhC,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtBI,EAAAF,EAAAE,KAEAL,EAAAa,KAAA,UACAs3B,OACAp3B,SAAA,EACA8F,UAAA,OACA5F,WAAA,EACA6hC,WAAA,IACA1gC,QAAA,GACApB,SAAA,MACA0B,KAAA,GACAvB,OAAA,OAOA,IAAA+2B,EAAAh4B,EAAAgE,QACAC,WAAA,SAAAC,GACA,IAAAO,EAAAjD,KACAvB,EAAA+D,OAAAS,EAAAP,GAGAO,EAAAN,mBAKAE,aAAAlE,EACA4B,OAAA,SAAAuC,EAAAC,EAAAC,GACA,IAAAC,EAAAjD,KA0BA,OAvBAiD,EAAAJ,eAGAI,EAAAH,WACAG,EAAAF,YACAE,EAAAD,UAGAC,EAAAC,sBACAD,EAAAE,gBACAF,EAAAG,qBAEAH,EAAAI,oBACAJ,EAAAK,cACAL,EAAAM,mBAGAN,EAAAO,YACAP,EAAAQ,MACAR,EAAAS,WAEAT,EAAAU,cAEAV,EAAAW,SAGAD,YAAAhF,EAIAuE,oBAAAvE,EACAwE,cAAA,WACA,IAAAF,EAAAjD,KAEAiD,EAAAY,gBAEAZ,EAAAa,MAAAb,EAAAH,SACAG,EAAAc,KAAA,EACAd,EAAAe,MAAAf,EAAAa,QAEAb,EAAAgB,OAAAhB,EAAAF,UAGAE,EAAAiB,IAAA,EACAjB,EAAAkB,OAAAlB,EAAAgB,QAIAhB,EAAAmB,YAAA,EACAnB,EAAAoB,WAAA,EACApB,EAAAqB,aAAA,EACArB,EAAAsB,cAAA,EAGAtB,EAAAW,SACAE,MAAA,EACAG,OAAA,IAGAb,mBAAAzE,EAIA0E,kBAAA1E,EACA2E,YAAA3E,EACA4E,iBAAA5E,EAIA6E,UAAA7E,EACA8E,IAAA,WACA,IAAAR,EAAAjD,KACAiF,EAAAxG,EAAAwG,eACAJ,EAAA5B,EAAAuB,QACAnF,EAAAwF,EAAAxF,QACAP,EAAAmG,EAAAJ,EAAA/F,SAAAR,EAAA0G,OAAAE,iBACAtB,EAAAX,EAAAW,QACA2jC,EAAA9oC,EAAAmC,QAAAiE,EAAA7D,MAAA6D,EAAA7D,KAAAqB,OAAA,EACA++B,EAAA3iC,EAAA+F,QAAAqF,aAAAhF,EAAAu8B,WAAAtiC,GACAkwC,EAAA3vC,EAAAkoC,EAAAnG,EAAA,EAAAv8B,EAAAnE,QAAA,EAEAuC,EAAAY,gBACAD,EAAAE,MAAAb,EAAAH,SACAc,EAAAK,OAAA+qC,IAEAprC,EAAAE,MAAAkrC,EACAprC,EAAAK,OAAAhB,EAAAF,WAGAE,EAAAa,MAAAF,EAAAE,MACAb,EAAAgB,OAAAL,EAAAK,QAGAP,SAAA/E,EAGAkF,aAAA,WACA,IAAAmmB,EAAAhqB,KAAAwE,QAAAlF,SACA,cAAA0qB,GAAA,WAAAA,GAIAvjB,KAAA,WACA,IAAAxD,EAAAjD,KACA8E,EAAA7B,EAAA6B,IACAG,EAAAxG,EAAAwG,eACAJ,EAAA5B,EAAAuB,QACAmwB,EAAAr2B,EAAA0G,OAEA,GAAAH,EAAAxF,QAAA,CACA,IAWAyD,EAAAmsC,EAAAC,EAXApwC,EAAAmG,EAAAJ,EAAA/F,SAAA61B,EAAAzvB,iBACAC,EAAAF,EAAAJ,EAAAM,UAAAwvB,EAAAvvB,kBACAC,EAAAJ,EAAAJ,EAAAQ,WAAAsvB,EAAArvB,mBACA6pC,EAAA1wC,EAAA+G,WAAA1G,EAAAqG,EAAAE,GACA+7B,EAAA3iC,EAAA+F,QAAAqF,aAAAhF,EAAAu8B,WAAAtiC,GACAgsB,EAAAsW,EAAA,EAAAv8B,EAAAnE,QACAiO,EAAA,EACAzK,EAAAjB,EAAAiB,IACAH,EAAAd,EAAAc,KACAI,EAAAlB,EAAAkB,OACAH,EAAAf,EAAAe,MAGAc,EAAA5D,UAAA+D,EAAAJ,EAAAkC,UAAA4tB,EAAA3tB,kBACAlC,EAAAY,KAAAypC,EAGAlsC,EAAAY,gBACAorC,EAAAlrC,GAAAC,EAAAD,GAAA,EACAmrC,EAAAhrC,EAAA4mB,EACAhoB,EAAAkB,EAAAD,IAEAkrC,EAAA,SAAApqC,EAAAvF,SAAAyE,EAAA+mB,EAAA9mB,EAAA8mB,EACAokB,EAAAhrC,GAAAC,EAAAD,GAAA,EACApB,EAAAqB,EAAAD,EACAyK,EAAA3P,KAAA4c,IAAA,SAAA/W,EAAAvF,UAAA,QAGAwF,EAAAuC,OACAvC,EAAAstB,UAAA6c,EAAAC,GACApqC,EAAAutB,OAAA1jB,GACA7J,EAAAe,UAAA,SACAf,EAAAgB,aAAA,SAEA,IAAA9E,EAAA6D,EAAA7D,KACA,GAAAvC,EAAAmC,QAAAI,GAEA,IADA,IAAAmG,EAAA,EACApG,EAAA,EAAmBA,EAAAC,EAAAqB,SAAiBtB,EACpC+D,EAAAoD,SAAAlH,EAAAD,GAAA,EAAAoG,EAAArE,GACAqE,GAAAi6B,OAGAt8B,EAAAoD,SAAAlH,EAAA,IAAA8B,GAGAgC,EAAAmD,cAKA,SAAAmnC,EAAAnvC,EAAAovC,GACA,IAAA5Y,EAAA,IAAAD,GACA1xB,IAAA7E,EAAA6E,IACAN,QAAA6qC,EACApvC,UAGAvB,EAAA0K,UAAAnJ,EAAAw2B,EAAA4Y,GACA3wC,EAAA2K,OAAApJ,EAAAw2B,GACAx2B,EAAAqvC,WAAA7Y,EAGAntB,EAAAC,SACAnH,GAAA,QASAoH,SAAAgtB,EAEA/sB,WAAA,SAAAxJ,GACA,IAAAovC,EAAApvC,EAAAuE,QAAAiyB,MAEA4Y,GACAD,EAAAnvC,EAAAovC,IAIAxsC,aAAA,SAAA5C,GACA,IAAAovC,EAAApvC,EAAAuE,QAAAiyB,MACA6Y,EAAArvC,EAAAqvC,WAEAD,GACA5wC,EAAAiL,QAAA2lC,EAAA/wC,EAAA0G,OAAAyxB,OAEA6Y,GACA5wC,EAAA0K,UAAAnJ,EAAAqvC,EAAAD,GACAC,EAAA9qC,QAAA6qC,GAEAD,EAAAnvC,EAAAovC,IAEGC,IACH5wC,EAAAiL,UAAA1J,EAAAqvC,UACArvC,EAAAqvC,mDCtPA,IAAA7wC,EAAcF,EAAQ,QAQtB,SAAAgxC,EAAA5vC,EAAAM,GACA,OAAAN,EAAAsJ,QAEA/B,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,GAIA1I,EAAA8wC,oBAAA5vC,EAAAM,GAQA,SAAAuvC,EAAAvvC,EAAAwvC,GACA,IACAvvC,EAAAa,EAAA0tB,EAAA9jB,EAAA+jB,EADApuB,EAAAL,EAAAI,KAAAC,SAGA,IAAAS,EAAA,EAAA4J,EAAArK,EAAA+B,OAAoCtB,EAAA4J,IAAU5J,EAC9C,GAAAd,EAAAmB,iBAAAL,GAKA,IADAb,EAAAD,EAAAE,eAAAY,GACA0tB,EAAA,EAAAC,EAAAxuB,EAAAG,KAAAgC,OAAsCosB,EAAAC,IAAUD,EAAA,CAChD,IAAA/c,EAAAxR,EAAAG,KAAAouB,GACA/c,EAAAmF,MAAAnH,MACA+/B,EAAA/9B,IAYA,SAAAg+B,EAAAzvC,EAAAX,GACA,IAAAqH,KAQA,OANA6oC,EAAAvvC,EAAA,SAAAyR,GACAA,EAAA+U,QAAAnnB,EAAA4H,EAAA5H,EAAA6H,IACAR,EAAAxE,KAAAuP,KAIA/K,EAWA,SAAAgpC,EAAA1vC,EAAAX,EAAAswC,EAAAC,GACA,IAAAC,EAAA7/B,OAAA8/B,kBACAC,KAmBA,OAjBAR,EAAAvvC,EAAA,SAAAyR,GACA,IAAAk+B,GAAAl+B,EAAA+U,QAAAnnB,EAAA4H,EAAA5H,EAAA6H,GAAA,CAIA,IAAA43B,EAAArtB,EAAAmV,iBACA6S,EAAAmW,EAAAvwC,EAAAy/B,GAEArF,EAAAoW,GACAE,GAAAt+B,GACAo+B,EAAApW,GACGA,IAAAoW,GAEHE,EAAA7tC,KAAAuP,MAIAs+B,EAQA,SAAAC,EAAAvS,GACA,IAAAwS,GAAA,IAAAxS,EAAA5pB,QAAA,KACAq8B,GAAA,IAAAzS,EAAA5pB,QAAA,KAEA,gBAAAs8B,EAAAC,GACA,IAAAC,EAAAJ,EAAAlxC,KAAAsnB,IAAA8pB,EAAAlpC,EAAAmpC,EAAAnpC,GAAA,EACAqpC,EAAAJ,EAAAnxC,KAAAsnB,IAAA8pB,EAAAjpC,EAAAkpC,EAAAlpC,GAAA,EACA,OAAAnI,KAAA6c,KAAA7c,KAAAsZ,IAAAg4B,EAAA,GAAAtxC,KAAAsZ,IAAAi4B,EAAA,KAIA,SAAAC,EAAAvwC,EAAAN,EAAA6E,GACA,IAAAlF,EAAAiwC,EAAA5vC,EAAAM,GAEAuE,EAAAk5B,KAAAl5B,EAAAk5B,MAAA,IACA,IAAAmS,EAAAI,EAAAzrC,EAAAk5B,MACAjU,EAAAjlB,EAAAorC,UAAAF,EAAAzvC,EAAAX,GAAAqwC,EAAA1vC,EAAAX,GAAA,EAAAuwC,GACAlpC,KAEA,OAAA8iB,EAAApnB,QAIApC,EAAAI,KAAAC,SAAAyS,QAAA,SAAAjS,EAAAhB,GACA,GAAAG,EAAAmB,iBAAAtB,GAAA,CACA,IAAAI,EAAAD,EAAAE,eAAAL,GACA4R,EAAAxR,EAAAG,KAAAopB,EAAA,GAAAha,QAGAiC,MAAAmF,MAAAnH,MACA/I,EAAAxE,KAAAuP,MAKA/K,MAgBA2C,EAAAC,SAEAknC,OACAC,OAAA,SAAAzwC,EAAAN,GACA,IAAAL,EAAAiwC,EAAA5vC,EAAAM,GACA0G,KASA,OAPA6oC,EAAAvvC,EAAA,SAAAyR,GACA,GAAAA,EAAA+U,QAAAnnB,EAAA4H,EAAA5H,EAAA6H,GAEA,OADAR,EAAAxE,KAAAuP,GACA/K,IAIAA,EAAAyM,MAAA,MASAnS,MAAAuvC,EAYA3wC,MAAA2wC,EAWA1vC,QAAA,SAAAb,EAAAN,EAAA6E,GACA,IAAAlF,EAAAiwC,EAAA5vC,EAAAM,GACAuE,EAAAk5B,KAAAl5B,EAAAk5B,MAAA,KACA,IAAAmS,EAAAI,EAAAzrC,EAAAk5B,MACAjU,EAAAjlB,EAAAorC,UAAAF,EAAAzvC,EAAAX,GAAAqwC,EAAA1vC,EAAAX,GAAA,EAAAuwC,GAMA,OAJApmB,EAAApnB,OAAA,IACAonB,EAAAxpB,EAAAE,eAAAspB,EAAA,GAAAlc,eAAAlN,MAGAopB,GASAknB,SAAA,SAAA1wC,EAAAN,GACA,OAAA6wC,EAAAvwC,EAAAN,GAA+BiwC,WAAA,KAW/B1hC,MAAA,SAAAjO,EAAAN,GACA,IAAAL,EAAAiwC,EAAA5vC,EAAAM,GACA,OAAAyvC,EAAAzvC,EAAAX,IAWAsxC,QAAA,SAAA3wC,EAAAN,EAAA6E,GACA,IAAAlF,EAAAiwC,EAAA5vC,EAAAM,GACAuE,EAAAk5B,KAAAl5B,EAAAk5B,MAAA,KACA,IAAAmS,EAAAI,EAAAzrC,EAAAk5B,MACAsS,EAAAL,EAAA1vC,EAAAX,EAAAkF,EAAAorC,UAAAC,GAmBA,OAhBAG,EAAA3tC,OAAA,GACA2tC,EAAAphB,KAAA,SAAAnW,EAAApO,GACA,IAAAwmC,EAAAp4B,EAAAqO,UACAgqB,EAAAzmC,EAAAyc,UACAiqB,EAAAF,EAAAC,EAOA,OALA,IAAAC,IAEAA,EAAAt4B,EAAAlL,cAAAlD,EAAAkD,eAGAwjC,IAKAf,EAAA58B,MAAA,MAWAlM,EAAA,SAAAjH,EAAAN,EAAA6E,GACA,IAAAlF,EAAAiwC,EAAA5vC,EAAAM,GACAwpB,KACAunB,GAAA,EAiBA,OAfAxB,EAAAvvC,EAAA,SAAAyR,GACAA,EAAAiV,SAAArnB,EAAA4H,IACAuiB,EAAAtnB,KAAAuP,GAGAA,EAAA+U,QAAAnnB,EAAA4H,EAAA5H,EAAA6H,KACA6pC,GAAA,KAMAxsC,EAAAorC,YAAAoB,IACAvnB,MAEAA,GAWAtiB,EAAA,SAAAlH,EAAAN,EAAA6E,GACA,IAAAlF,EAAAiwC,EAAA5vC,EAAAM,GACAwpB,KACAunB,GAAA,EAiBA,OAfAxB,EAAAvvC,EAAA,SAAAyR,GACAA,EAAAkV,SAAAtnB,EAAA6H,IACAsiB,EAAAtnB,KAAAuP,GAGAA,EAAA+U,QAAAnnB,EAAA4H,EAAA5H,EAAA6H,KACA6pC,GAAA,KAMAxsC,EAAAorC,YAAAoB,IACAvnB,MAEAA,0CClUA,IAAA5T,EAAYtX,EAAQ,QACpBD,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB8pB,EAAmB9pB,EAAQ,QAE3B+K,EAAAC,QAAA,WA4ZA,SAAA0nC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAYA,MAXA,kBAAAH,GACAG,EAAAzD,SAAAsD,EAAA,KAEA,IAAAA,EAAAp9B,QAAA,OAEAu9B,IAAA,IAAAF,EAAAG,WAAAF,KAGAC,EAAAH,EAGAG,EAOA,SAAAE,EAAAznC,GACA,YAAAc,IAAAd,GAAA,OAAAA,GAAA,SAAAA,EAQA,SAAA0nC,EAAAC,EAAAC,EAAAC,GACA,IAAA57B,EAAA67B,SAAAC,YACAP,EAAA7yC,EAAAqzC,eAAAL,GACAM,EAAAh8B,EAAAi8B,iBAAAP,GAAAC,GACAO,EAAAl8B,EAAAi8B,iBAAAV,GAAAI,GACAQ,EAAAX,EAAAQ,GACAI,EAAAZ,EAAAU,GACAG,EAAAniC,OAAA8/B,kBAEA,OAAAmC,GAAAC,EACAnzC,KAAA0R,IACAwhC,EAAAjB,EAAAc,EAAAN,EAAAE,GAAAS,EACAD,EAAAlB,EAAAgB,EAAAX,EAAAK,GAAAS,GAGA,OApcA3zC,EAAA4zC,YAAA,WACA,OAAA5zC,EAAAiN,MAAAjN,EAAAqY,MAAAtD,UAAA,OAAAJ,MAAApK,KAAAwK,UAAA,IACAwgB,OAAA,SAAAhhB,EAAAmD,EAAA8X,EAAAzpB,GACA,IAAAqvB,EAAA1d,EAAAnD,OACA0X,EAAAuD,EAAAjb,GAEA,WAAAA,EAEAmD,EAAAnD,GAAAvU,EAAA6zC,WAAAze,EAAAnJ,GACK,UAAA1X,EAELmD,EAAAnD,GAAAvU,EAAAiN,MAAAmoB,GAAAxL,EAAAkqB,iBAAA7nB,EAAA9hB,MAAA8hB,IAEAjsB,EAAAm1B,QAAA5gB,EAAAmD,EAAA8X,EAAAzpB,OAMA/F,EAAA6zC,WAAA,WACA,OAAA7zC,EAAAiN,MAAAjN,EAAAqY,MAAAtD,UAAA,OAAAJ,MAAApK,KAAAwK,UAAA,IACAwgB,OAAA,SAAAhhB,EAAAmD,EAAA8X,EAAAzpB,GACA,aAAAwO,GAAA,UAAAA,EAAA,CACA,IACAjS,EAAA6H,EAAAoE,EADAwlC,EAAAvkB,EAAAjb,GAAA3Q,OAOA,IAJA8T,EAAAnD,KACAmD,EAAAnD,OAGAjS,EAAA,EAAgBA,EAAAyxC,IAAUzxC,EAC1BiM,EAAAihB,EAAAjb,GAAAjS,GACA6H,EAAAnK,EAAAwG,eAAA+H,EAAApE,KAAA,UAAAoK,EAAA,qBAEAjS,GAAAoV,EAAAnD,GAAA3Q,QACA8T,EAAAnD,GAAA7Q,UAGAgU,EAAAnD,GAAAjS,GAAA6H,MAAAoE,EAAApE,MAAAoE,EAAApE,OAAAuN,EAAAnD,GAAAjS,GAAA6H,KAGAnK,EAAAiN,MAAAyK,EAAAnD,GAAAjS,IAAAsnB,EAAAkqB,iBAAA3pC,GAAAoE,IAGAvO,EAAAiN,MAAAyK,EAAAnD,GAAAjS,GAAAiM,QAIAvO,EAAAm1B,QAAA5gB,EAAAmD,EAAA8X,EAAAzpB,OAMA/F,EAAAuqC,MAAA,SAAAyJ,EAAAC,GACA,GAAAj0C,EAAAmC,QAAA6xC,IAAAl/B,MAAAlI,UAAA1G,OACA,OAAA8tC,EAAA9tC,OAAA+tC,GAEA,IAAAC,KAQA,OANAl0C,EAAAsH,KAAA0sC,EAAA,SAAA7tC,GACA8tC,EAAA9tC,IACA+tC,EAAAxwC,KAAAyC,KAIA+tC,GAEAl0C,EAAA6pC,UAAA/0B,MAAAlI,UAAAi9B,UACA,SAAA71B,EAAA/N,EAAA8G,GACA,OAAAiH,EAAA61B,UAAA5jC,EAAA8G,IAEA,SAAAiH,EAAA/N,EAAA8G,GACAA,OAAAZ,IAAAY,EAAAiH,EAAAjH,EACA,QAAAzK,EAAA,EAAA4J,EAAA8H,EAAApQ,OAAuCtB,EAAA4J,IAAU5J,EACjD,GAAA2D,EAAAsE,KAAAwC,EAAAiH,EAAA1R,KAAA0R,GACA,OAAA1R,EAGA,UAEAtC,EAAAutC,cAAA,SAAA4G,EAAAF,EAAAG,GAEAp0C,EAAA4sB,cAAAwnB,KACAA,GAAA,GAEA,QAAA9xC,EAAA8xC,EAAA,EAA8B9xC,EAAA6xC,EAAAvwC,OAA0BtB,IAAA,CACxD,IAAA+xC,EAAAF,EAAA7xC,GACA,GAAA2xC,EAAAI,GACA,OAAAA,IAIAr0C,EAAAs0C,kBAAA,SAAAH,EAAAF,EAAAG,GAEAp0C,EAAA4sB,cAAAwnB,KACAA,EAAAD,EAAAvwC,QAEA,QAAAtB,EAAA8xC,EAAA,EAA8B9xC,GAAA,EAAQA,IAAA,CACtC,IAAA+xC,EAAAF,EAAA7xC,GACA,GAAA2xC,EAAAI,GACA,OAAAA,IAMAr0C,EAAAyY,SAAA,SAAAoD,GACA,OAAAlT,MAAAymC,WAAAvzB,KAAA3D,SAAA2D,IAEA7b,EAAAu0C,aAAA,SAAA9rC,EAAAC,EAAAuqB,GACA,OAAA1yB,KAAAsnB,IAAApf,EAAAC,GAAAuqB,GAEAjzB,EAAAw0C,YAAA,SAAA/rC,EAAAwqB,GACA,IAAAwhB,EAAAl0C,KAAAyoB,MAAAvgB,GACA,OAAAgsC,EAAAxhB,EAAAxqB,GAAAgsC,EAAAxhB,EAAAxqB,GAEAzI,EAAA+H,IAAA,SAAAiM,GACA,OAAAA,EAAA0gC,OAAA,SAAA3sC,EAAAsD,GACA,OAAA1C,MAAA0C,GAGAtD,EAFAxH,KAAAwH,MAAAsD,IAGGmG,OAAAmjC,oBAEH30C,EAAAiS,IAAA,SAAA+B,GACA,OAAAA,EAAA0gC,OAAA,SAAAziC,EAAA5G,GACA,OAAA1C,MAAA0C,GAGA4G,EAFA1R,KAAA0R,MAAA5G,IAGGmG,OAAA8/B,oBAEHtxC,EAAAi+B,KAAA19B,KAAA09B,KACA,SAAAx1B,GACA,OAAAlI,KAAA09B,KAAAx1B,IAEA,SAAAA,GAEA,OADAA,KACA,IAAAA,GAAAE,MAAAF,GACAA,EAEAA,EAAA,QAEAzI,EAAAu9B,MAAAh9B,KAAAg9B,MACA,SAAA90B,GACA,OAAAlI,KAAAg9B,MAAA90B,IAEA,SAAAA,GACA,IAAAmsC,EAAAr0C,KAAAs0C,IAAApsC,GAAAlI,KAAAu0C,OAGAC,EAAAx0C,KAAAyoB,MAAA4rB,GACAI,EAAAvsC,IAAAlI,KAAAsZ,IAAA,GAAAk7B,GAEA,OAAAC,EAAAD,EAAAH,GAEA50C,EAAAqyB,UAAA,SAAA4iB,GACA,OAAAA,GAAA10C,KAAA4c,GAAA,MAEAnd,EAAAk1C,UAAA,SAAAC,GACA,OAAAA,GAAA,IAAA50C,KAAA4c,KAGAnd,EAAAg7B,kBAAA,SAAAoa,EAAAC,GACA,IAAAC,EAAAD,EAAA5sC,EAAA2sC,EAAA3sC,EACA8sC,EAAAF,EAAA3sC,EAAA0sC,EAAA1sC,EACA8sC,EAAAj1C,KAAA6c,KAAAk4B,IAAAC,KAEAnjB,EAAA7xB,KAAA2c,MAAAq4B,EAAAD,GAMA,OAJAljB,GAAA,GAAA7xB,KAAA4c,KACAiV,GAAA,EAAA7xB,KAAA4c,KAIAiV,QACA6I,SAAAua,IAGAx1C,EAAAy1C,sBAAA,SAAA9D,EAAAC,GACA,OAAArxC,KAAA6c,KAAA7c,KAAAsZ,IAAA+3B,EAAAnpC,EAAAkpC,EAAAlpC,EAAA,GAAAlI,KAAAsZ,IAAA+3B,EAAAlpC,EAAAipC,EAAAjpC,EAAA,KAEA1I,EAAAqoC,WAAA,SAAAqN,GACA,OAAAA,EAAA,YAEA11C,EAAAmS,YAAA,SAAAwjC,EAAAC,EAAAC,EAAAnqC,GAMA,IAAA6G,EAAAojC,EAAA1kC,KAAA2kC,EAAAD,EACAxf,EAAAyf,EACAljC,EAAAmjC,EAAA5kC,KAAA2kC,EAAAC,EAEAC,EAAAv1C,KAAA6c,KAAA7c,KAAAsZ,IAAAsc,EAAA1tB,EAAA8J,EAAA9J,EAAA,GAAAlI,KAAAsZ,IAAAsc,EAAAztB,EAAA6J,EAAA7J,EAAA,IACAqtC,EAAAx1C,KAAA6c,KAAA7c,KAAAsZ,IAAAnH,EAAAjK,EAAA0tB,EAAA1tB,EAAA,GAAAlI,KAAAsZ,IAAAnH,EAAAhK,EAAAytB,EAAAztB,EAAA,IAEAstC,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAGAC,EAAArtC,MAAAqtC,GAAA,EAAAA,EACAC,EAAAttC,MAAAstC,GAAA,EAAAA,EAEA,IAAAC,EAAAxqC,EAAAsqC,EACAG,EAAAzqC,EAAAuqC,EAEA,OACA1jC,UACA9J,EAAA0tB,EAAA1tB,EAAAytC,GAAAxjC,EAAAjK,EAAA8J,EAAA9J,GACAC,EAAAytB,EAAAztB,EAAAwtC,GAAAxjC,EAAAhK,EAAA6J,EAAA7J,IAEAgK,MACAjK,EAAA0tB,EAAA1tB,EAAA0tC,GAAAzjC,EAAAjK,EAAA8J,EAAA9J,GACAC,EAAAytB,EAAAztB,EAAAytC,GAAAzjC,EAAAhK,EAAA6J,EAAA7J,MAIA1I,EAAAo2C,QAAA5kC,OAAA4kC,SAAA,MACAp2C,EAAAkS,oBAAA,SAAA7D,GAMA,IAUA/L,EAAA+zC,EAAAC,EAAAC,EA4BAC,EAAAC,EAAAC,EAAAC,EA0BA9E,EAhEA+E,GAAAvoC,OAAAjM,IAAA,SAAAqN,GACA,OACAkC,MAAAlC,EAAAT,OACA6nC,OAAA,EACAC,GAAA,KAKAC,EAAAH,EAAAhzC,OAEA,IAAAtB,EAAA,EAAaA,EAAAy0C,IAAez0C,EAE5B,GADAg0C,EAAAM,EAAAt0C,IACAg0C,EAAA3kC,MAAAV,KAAA,CAMA,GAFAolC,EAAA/zC,EAAA,EAAAs0C,EAAAt0C,EAAA,QACAi0C,EAAAj0C,EAAAy0C,EAAA,EAAAH,EAAAt0C,EAAA,QACAi0C,MAAA5kC,MAAAV,KAAA,CACA,IAAA+lC,EAAAT,EAAA5kC,MAAAlJ,EAAA6tC,EAAA3kC,MAAAlJ,EAGA6tC,EAAAO,OAAA,IAAAG,GAAAT,EAAA5kC,MAAAjJ,EAAA4tC,EAAA3kC,MAAAjJ,GAAAsuC,EAAA,GAGAX,KAAA1kC,MAAAV,KACAqlC,EAAAQ,GAAAR,EAAAO,QACIN,KAAA5kC,MAAAV,KACJqlC,EAAAQ,GAAAT,EAAAQ,OACIt1C,KAAA08B,KAAAoY,EAAAQ,UAAAt1C,KAAA08B,KAAAqY,EAAAO,QACJP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAMA,IAAAv0C,EAAA,EAAaA,EAAAy0C,EAAA,IAAmBz0C,EAChCg0C,EAAAM,EAAAt0C,GACAi0C,EAAAK,EAAAt0C,EAAA,GACAg0C,EAAA3kC,MAAAV,MAAAslC,EAAA5kC,MAAAV,OAIAjR,EAAAu0C,aAAA+B,EAAAO,OAAA,EAAAt1C,KAAA60C,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,OACAF,EAAAp2C,KAAAsZ,IAAA28B,EAAA,GAAAj2C,KAAAsZ,IAAA48B,EAAA,GACAE,GAAA,IAIAD,EAAA,EAAAn2C,KAAA6c,KAAAu5B,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAKA,IAAAv0C,EAAA,EAAaA,EAAAy0C,IAAez0C,EAC5Bg0C,EAAAM,EAAAt0C,GACAg0C,EAAA3kC,MAAAV,OAIAolC,EAAA/zC,EAAA,EAAAs0C,EAAAt0C,EAAA,QACAi0C,EAAAj0C,EAAAy0C,EAAA,EAAAH,EAAAt0C,EAAA,QACA+zC,MAAA1kC,MAAAV,OACA4gC,GAAAyE,EAAA3kC,MAAAlJ,EAAA4tC,EAAA1kC,MAAAlJ,GAAA,EACA6tC,EAAA3kC,MAAAW,sBAAAgkC,EAAA3kC,MAAAlJ,EAAAopC,EACAyE,EAAA3kC,MAAAa,sBAAA8jC,EAAA3kC,MAAAjJ,EAAAmpC,EAAAyE,EAAAQ,IAEAP,MAAA5kC,MAAAV,OACA4gC,GAAA0E,EAAA5kC,MAAAlJ,EAAA6tC,EAAA3kC,MAAAlJ,GAAA,EACA6tC,EAAA3kC,MAAAc,kBAAA6jC,EAAA3kC,MAAAlJ,EAAAopC,EACAyE,EAAA3kC,MAAAgB,kBAAA2jC,EAAA3kC,MAAAjJ,EAAAmpC,EAAAyE,EAAAQ,MAIA92C,EAAAqS,SAAA,SAAA2hC,EAAA5yC,EAAA61C,GACA,OAAAA,EACA71C,GAAA4yC,EAAApwC,OAAA,EAAAowC,EAAA,GAAAA,EAAA5yC,EAAA,GAEAA,GAAA4yC,EAAApwC,OAAA,EAAAowC,IAAApwC,OAAA,GAAAowC,EAAA5yC,EAAA,IAEApB,EAAAoS,aAAA,SAAA4hC,EAAA5yC,EAAA61C,GACA,OAAAA,EACA71C,GAAA,EAAA4yC,IAAApwC,OAAA,GAAAowC,EAAA5yC,EAAA,GAEAA,GAAA,EAAA4yC,EAAA,GAAAA,EAAA5yC,EAAA,IAGApB,EAAAk3C,QAAA,SAAA/qB,EAAAnD,GACA,IAEAmuB,EAFAvC,EAAAr0C,KAAA2a,MAAAlb,EAAAu9B,MAAApR,IACAirB,EAAAjrB,EAAA5rB,KAAAsZ,IAAA,GAAA+6B,GAuBA,OAlBAuC,EAFAnuB,EACAouB,EAAA,IACA,EACIA,EAAA,EACJ,EACIA,EAAA,EACJ,EAEA,GAEGA,GAAA,EACH,EACGA,GAAA,EACH,EACGA,GAAA,EACH,EAEA,GAGAD,EAAA52C,KAAAsZ,IAAA,GAAA+6B,IAGA50C,EAAA8pC,iBAAA,WACA,2BAAApgB,OACA,SAAAzjB,GACAA,KAGAyjB,OAAAigB,uBACAjgB,OAAA2tB,6BACA3tB,OAAA4tB,0BACA5tB,OAAA6tB,wBACA7tB,OAAA8tB,yBACA,SAAAvxC,GACA,OAAAyjB,OAAA+tB,WAAAxxC,EAAA,SAZA,GAgBAjG,EAAA8wC,oBAAA,SAAA4G,EAAAl2C,GACA,IAAAmmB,EAAAI,EACA7mB,EAAAw2C,EAAAC,eAAAD,EACAtuC,EAAAsuC,EAAAhgC,QAAAggC,EAAAE,WACAC,EAAAzuC,EAAA0uC,wBAEAC,EAAA72C,EAAA62C,QACAA,KAAAn0C,OAAA,GACA+jB,EAAAowB,EAAA,GAAAC,QACAjwB,EAAAgwB,EAAA,GAAAE,UAGAtwB,EAAAzmB,EAAA82C,QACAjwB,EAAA7mB,EAAA+2C,SAMA,IAAAtyC,EAAAypC,WAAApvC,EAAAk4C,SAAA9uC,EAAA,iBACAxD,EAAAwpC,WAAApvC,EAAAk4C,SAAA9uC,EAAA,gBACAvD,EAAAupC,WAAApvC,EAAAk4C,SAAA9uC,EAAA,kBACAtD,EAAAspC,WAAApvC,EAAAk4C,SAAA9uC,EAAA,mBACA/D,EAAAwyC,EAAAtyC,MAAAsyC,EAAAvyC,KAAAK,EAAAE,EACAL,EAAAqyC,EAAAnyC,OAAAmyC,EAAApyC,IAAAG,EAAAE,EAOA,OAHA6hB,EAAApnB,KAAAyoB,OAAArB,EAAAkwB,EAAAvyC,KAAAK,GAAA,EAAAyD,EAAA/D,MAAA7D,EAAA22C,yBACApwB,EAAAxnB,KAAAyoB,OAAAjB,EAAA8vB,EAAApyC,IAAAG,GAAA,EAAAwD,EAAA5D,OAAAhE,EAAA22C,0BAGA1vC,EAAAkf,EACAjf,EAAAqf,IAqDA/nB,EAAAo4C,mBAAA,SAAApF,GACA,OAAAD,EAAAC,EAAA,4BAGAhzC,EAAAq4C,oBAAA,SAAArF,GACA,OAAAD,EAAAC,EAAA,8BAKAhzC,EAAAs4C,kBAAA,SAAAC,EAAAt2C,EAAAu2C,GAGA,OAFAv2C,EAAAjC,EAAAk4C,SAAAK,EAAAt2C,GAEAA,EAAAoT,QAAA,QAAAmjC,EAAArJ,SAAAltC,EAAA,IAAAktC,SAAAltC,EAAA,KAKAjC,EAAAqzC,eAAA,SAAAL,GACA,IAAAyF,EAAAzF,EAAAH,WAIA,OAHA4F,KAAAC,OACAD,IAAAC,MAEAD,GAEAz4C,EAAA24C,gBAAA,SAAA3F,GACA,IAAAuF,EAAAv4C,EAAAqzC,eAAAL,GACA,IAAAuF,EACA,OAAAvF,EAAA4F,YAGA,IAAAA,EAAAL,EAAAK,YACAjzC,EAAA3F,EAAAs4C,kBAAAC,EAAA,eAAAK,GACA/yC,EAAA7F,EAAAs4C,kBAAAC,EAAA,gBAAAK,GAEAz/B,EAAAy/B,EAAAjzC,EAAAE,EACAgzC,EAAA74C,EAAAo4C,mBAAApF,GACA,OAAArqC,MAAAkwC,GAAA1/B,EAAA5Y,KAAA0R,IAAAkH,EAAA0/B,IAEA74C,EAAA84C,iBAAA,SAAA9F,GACA,IAAAuF,EAAAv4C,EAAAqzC,eAAAL,GACA,IAAAuF,EACA,OAAAvF,EAAA+F,aAGA,IAAAA,EAAAR,EAAAQ,aACAnzC,EAAA5F,EAAAs4C,kBAAAC,EAAA,cAAAQ,GACAjzC,EAAA9F,EAAAs4C,kBAAAC,EAAA,iBAAAQ,GAEAngC,EAAAmgC,EAAAnzC,EAAAE,EACAkzC,EAAAh5C,EAAAq4C,oBAAArF,GACA,OAAArqC,MAAAqwC,GAAApgC,EAAArY,KAAA0R,IAAA2G,EAAAogC,IAEAh5C,EAAAk4C,SAAA,SAAAe,EAAAC,GACA,OAAAD,EAAAE,aACAF,EAAAE,aAAAD,GACA/F,SAAAC,YAAAG,iBAAA0F,EAAA,MAAAG,iBAAAF,IAEAl5C,EAAAq5C,YAAA,SAAA73C,EAAA83C,GACA,IAAAC,EAAA/3C,EAAA22C,wBAAAmB,GAAA,qBAAA5vB,eAAA8vB,kBAAA,EACA,OAAAD,EAAA,CAIA,IAAAnwC,EAAA5H,EAAA4H,OACA5D,EAAAhE,EAAAgE,OACAH,EAAA7D,EAAA6D,MAEA+D,EAAA5D,SAAA+zC,EACAnwC,EAAA/D,QAAAk0C,EACA/3C,EAAA6E,IAAAkI,MAAAgrC,KAKAnwC,EAAAiqB,MAAA7tB,QAAA4D,EAAAiqB,MAAAhuB,QACA+D,EAAAiqB,MAAA7tB,SAAA,KACA4D,EAAAiqB,MAAAhuB,QAAA,QAIArF,EAAA+G,WAAA,SAAA0yC,EAAA/yC,EAAAE,GACA,OAAAF,EAAA,IAAA+yC,EAAA,MAAA7yC,GAEA5G,EAAAuiC,YAAA,SAAAl8B,EAAAY,EAAAyyC,EAAApiB,GACAA,QACA,IAAA11B,EAAA01B,EAAA11B,KAAA01B,EAAA11B,SACA+3C,EAAAriB,EAAAsiB,eAAAtiB,EAAAsiB,mBAEAtiB,EAAArwB,WACArF,EAAA01B,EAAA11B,QACA+3C,EAAAriB,EAAAsiB,kBACAtiB,EAAArwB,QAGAZ,EAAAY,OACA,IAAA4yC,EAAA,EACA75C,EAAAsH,KAAAoyC,EAAA,SAAAI,QAEA3tC,IAAA2tC,GAAA,OAAAA,IAAA,IAAA95C,EAAAmC,QAAA23C,GACAD,EAAA75C,EAAAuH,YAAAlB,EAAAzE,EAAA+3C,EAAAE,EAAAC,GACI95C,EAAAmC,QAAA23C,IAGJ95C,EAAAsH,KAAAwyC,EAAA,SAAAC,QAEA5tC,IAAA4tC,GAAA,OAAAA,GAAA/5C,EAAAmC,QAAA43C,KACAF,EAAA75C,EAAAuH,YAAAlB,EAAAzE,EAAA+3C,EAAAE,EAAAE,QAMA,IAAAC,EAAAL,EAAA/1C,OAAA,EACA,GAAAo2C,EAAAN,EAAA91C,OAAA,CACA,QAAAtB,EAAA,EAAkBA,EAAA03C,EAAW13C,WAC7BV,EAAA+3C,EAAAr3C,IAEAq3C,EAAArkC,OAAA,EAAA0kC,GAEA,OAAAH,GAEA75C,EAAAuH,YAAA,SAAAlB,EAAAzE,EAAA+3C,EAAAE,EAAA/K,GACA,IAAAplC,EAAA9H,EAAAktC,GAQA,OAPAplC,IACAA,EAAA9H,EAAAktC,GAAAzoC,EAAAkB,YAAAunC,GAAAzpC,MACAs0C,EAAAj2C,KAAAorC,IAEAplC,EAAAmwC,IACAA,EAAAnwC,GAEAmwC,GAEA75C,EAAAqlC,mBAAA,SAAAqU,GACA,IAAAO,EAAA,EAQA,OAPAj6C,EAAAsH,KAAAoyC,EAAA,SAAAI,GACA95C,EAAAmC,QAAA23C,IACAA,EAAAl2C,OAAAq2C,IACAA,EAAAH,EAAAl2C,UAIAq2C,GAGAj6C,EAAAoX,QAKA,SAAA/L,GAMA,OAJAA,aAAA6uC,iBACA7uC,EAAAxL,EAAA0G,OAAAsC,cAGAuO,EAAA/L,IAVA,SAAAA,GAEA,OADAukB,QAAAuqB,MAAA,uBACA9uC,GAWArL,EAAAqT,cAAA,SAAA+mC,GAEA,OAAAA,aAAAC,cACAD,EACAp6C,EAAAoX,MAAAgjC,GAAAE,SAAA,IAAAC,OAAA,IAAAtiC,iDCrnBA,IAAAjY,EAAcF,EAAQ,QACtB6pB,EAAY7pB,EAAQ,QAQpB,SAAAm9B,EAAAC,EAAAC,GACA,IAKAjQ,EACAyQ,EACA6c,EAPA/sB,KASA,GAAAyP,EAAAhP,UAAAgP,EAAAhP,SAAA,EACAssB,EAAAtd,EAAAhP,aACE,CACF,IAAAusB,EAAAz6C,EAAAk3C,QAAA/Z,EAAAp1B,IAAAo1B,EAAAlrB,KAAA,GACAuoC,EAAAx6C,EAAAk3C,QAAAuD,GAAAvd,EAAAN,SAAA,OAEAe,EAAAT,EAAAS,eACAxxB,IAAAwxB,IAEAzQ,EAAA3sB,KAAAsZ,IAAA,GAAA8jB,GACA6c,EAAAj6C,KAAA8sB,KAAAmtB,EAAAttB,MAGA,IAAAwtB,EAAAn6C,KAAA2a,MAAAiiB,EAAAlrB,IAAAuoC,KACAG,EAAAp6C,KAAA8sB,KAAA8P,EAAAp1B,IAAAyyC,KAGAx6C,EAAA4sB,cAAAsQ,EAAAjrB,MAAAjS,EAAA4sB,cAAAsQ,EAAAn1B,OAAAm1B,EAAAhP,UAEAluB,EAAAw0C,aAAAtX,EAAAn1B,IAAAm1B,EAAAjrB,KAAAirB,EAAAhP,SAAAssB,EAAA,OACAE,EAAAxd,EAAAjrB,IACA0oC,EAAAzd,EAAAn1B,KAIA,IAAA6yC,GAAAD,EAAAD,GAAAF,EAGAI,EADA56C,EAAAu0C,aAAAqG,EAAAr6C,KAAAyoB,MAAA4xB,GAAAJ,EAAA,KACAj6C,KAAAyoB,MAAA4xB,GAEAr6C,KAAA8sB,KAAAutB,GAGAjd,EAAA,EACA6c,EAAA,IACA7c,EAAAp9B,KAAAsZ,IAAA,KAAAtZ,KAAA2a,MAAAlb,EAAAu9B,MAAAid,KACAE,EAAAn6C,KAAAyoB,MAAA0xB,EAAA/c,KACAgd,EAAAp6C,KAAAyoB,MAAA2xB,EAAAhd,MAEAlQ,EAAA/pB,UAAAyI,IAAA+wB,EAAAjrB,IAAAirB,EAAAjrB,IAAAyoC,GACA,QAAA1qB,EAAA,EAAgBA,EAAA4qB,IAAe5qB,EAC/BvC,EAAA/pB,KAAAnD,KAAAyoB,OAAA0xB,EAAA1qB,EAAAwqB,GAAA7c,MAIA,OAFAlQ,EAAA/pB,UAAAyI,IAAA+wB,EAAAn1B,IAAAm1B,EAAAn1B,IAAA4yC,GAEAltB,EAGA5iB,EAAAC,QAAA,SAAA2C,GAEA,IAAAvN,EAAAF,EAAAE,KAEAuN,EAAAouB,gBAAAlS,EAAA5lB,QACA0N,cAAA,SAAApG,GACA,wBAAAA,GACAA,EAEAse,EAAA/c,UAAA6E,cAAAlH,KAAAhJ,KAAA8J,IAGAqxB,uBAAA,WACA,IAAAl4B,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MAKA,GAAA+D,EAAA8R,YAAA,CACA,IAAAuX,EAAA76C,EAAAi+B,KAAAz5B,EAAAyN,KACA6oC,EAAA96C,EAAAi+B,KAAAz5B,EAAAuD,KAEA8yC,EAAA,GAAAC,EAAA,EAEAt2C,EAAAuD,IAAA,EACK8yC,EAAA,GAAAC,EAAA,IAELt2C,EAAAyN,IAAA,GAIA,IAAA8oC,OAAA5uC,IAAAqlB,EAAAvf,UAAA9F,IAAAqlB,EAAAwpB,aACAC,OAAA9uC,IAAAqlB,EAAAzpB,UAAAoE,IAAAqlB,EAAA0pB,kBAEA/uC,IAAAqlB,EAAAvf,IACAzN,EAAAyN,IAAAuf,EAAAvf,SACI9F,IAAAqlB,EAAAwpB,eACJ,OAAAx2C,EAAAyN,IACAzN,EAAAyN,IAAAuf,EAAAwpB,aAEAx2C,EAAAyN,IAAA1R,KAAA0R,IAAAzN,EAAAyN,IAAAuf,EAAAwpB,oBAIA7uC,IAAAqlB,EAAAzpB,IACAvD,EAAAuD,IAAAypB,EAAAzpB,SACIoE,IAAAqlB,EAAA0pB,eACJ,OAAA12C,EAAAuD,IACAvD,EAAAuD,IAAAypB,EAAA0pB,aAEA12C,EAAAuD,IAAAxH,KAAAwH,IAAAvD,EAAAuD,IAAAypB,EAAA0pB,eAIAH,IAAAE,GAKAz2C,EAAAyN,KAAAzN,EAAAuD,MACAgzC,EACAv2C,EAAAuD,IAAAvD,EAAAyN,IAAA,EAEAzN,EAAAyN,IAAAzN,EAAAuD,IAAA,GAKAvD,EAAAyN,MAAAzN,EAAAuD,MACAvD,EAAAuD,MAEAypB,EAAA8R,aACA9+B,EAAAyN,QAIA0qB,aAAAz8B,EACA48B,yBAAA58B,EAEAswB,WAAA,WACA,IAAAhsB,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MAMAmP,EAAAp4B,EAAAm4B,eACAC,EAAAr8B,KAAAwH,IAAA,EAAA60B,GAEA,IAAAue,GACAve,WACA3qB,IAAAuf,EAAAvf,IACAlK,IAAAypB,EAAAzpB,IACA41B,UAAAnM,EAAAmM,UACAzP,SAAAluB,EAAAwG,eAAAgrB,EAAA4pB,cAAA5pB,EAAAtD,WAEAT,EAAAjpB,EAAAipB,MAAAwP,EAAAke,EAAA32C,GAEAA,EAAAs4B,2BAIAt4B,EAAAuD,IAAA/H,EAAA+H,IAAA0lB,GACAjpB,EAAAyN,IAAAjS,EAAAiS,IAAAwb,GAEA+D,EAAAzwB,SACA0sB,EAAA1sB,UAEAyD,EAAAkS,MAAAlS,EAAAuD,IACAvD,EAAAi1B,IAAAj1B,EAAAyN,MAEAzN,EAAAkS,MAAAlS,EAAAyN,IACAzN,EAAAi1B,IAAAj1B,EAAAuD,MAGA4pB,qBAAA,WACA,IAAAntB,EAAAjD,KACAiD,EAAAw4B,eAAAx4B,EAAAipB,MAAA9Y,QACAnQ,EAAA0jC,cAAA1jC,EAAAipB,MAAApY,QAAA,GAEAsU,EAAA/c,UAAA+kB,qBAAApnB,KAAA/F,0CC/LAqG,EAAAC,QAAA,SAAA2C,GAEAA,EAAA4tC,UAAA,SAAApvC,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,YAEA,IAAAsD,EAAAxB,EAAAhI,wCCDA,IAAAjE,EAAcF,EAAQ,QAEtBw7C,EAAA,WACAC,EAAA,WACAC,EAAAD,EAAA,iBACAE,EAAAF,EAAA,mBACAG,GAAA,yCAOAC,GACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,EAAAppC,EAAAimC,GACA,IAAA7tC,EAAArL,EAAAk4C,SAAAjlC,EAAAimC,GACA3tC,EAAAF,KAAAG,MAAA,qBACA,OAAAD,EAAAiG,OAAAjG,EAAA,SAAAY,EAQA,SAAAmwC,EAAAlzC,EAAAnF,GACA,IAAAovB,EAAAjqB,EAAAiqB,MAIAkpB,EAAAnzC,EAAAozC,aAAA,UACAC,EAAArzC,EAAAozC,aAAA,SAoBA,GAjBApzC,EAAAkyC,IACAoB,SACAl3C,OAAA+2C,EACAl3C,MAAAo3C,EACAppB,OACAzyB,QAAAyyB,EAAAzyB,QACA4E,OAAA6tB,EAAA7tB,OACAH,MAAAguB,EAAAhuB,SAQAguB,EAAAzyB,QAAAyyB,EAAAzyB,SAAA,QAEA,OAAA67C,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAAN,EAAAjzC,EAAA,cACA+C,IAAAwwC,IACAvzC,EAAA/D,MAAAs3C,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAnzC,EAAAiqB,MAAA7tB,OAIA4D,EAAA5D,OAAA4D,EAAA/D,OAAApB,EAAA8B,QAAA62C,aAAA,OACG,CACH,IAAAC,EAAAR,EAAAjzC,EAAA,eACA+C,IAAAwwC,IACAvzC,EAAA5D,OAAAq3C,GAKA,OAAAzzC,EAQA,IAAA0zC,EAAA,WACA,IAAAC,GAAA,EACA,IACA,IAAAh3C,EAAA2G,OAAAC,kBAAwC,WACxCE,IAAA,WACAkwC,GAAA,KAGArzB,OAAA8kB,iBAAA,SAAAzoC,GACE,MAAA7E,IAGF,OAAA67C,EAZA,GAiBAC,IAAAF,IAA2DG,SAAA,GAE3D,SAAAzO,EAAAkE,EAAAvoC,EAAA8J,GACAy+B,EAAAlE,iBAAArkC,EAAA8J,EAAA+oC,GAGA,SAAAvO,EAAAiE,EAAAvoC,EAAA8J,GACAy+B,EAAAjE,oBAAAtkC,EAAA8J,EAAA+oC,GAGA,SAAAE,EAAA/yC,EAAA3I,EAAAiH,EAAAC,EAAAy0C,GACA,OACAhzC,OACA3I,QACAgJ,OAAA2yC,GAAA,KACA10C,OAAA0D,IAAA1D,IAAA,KACAC,OAAAyD,IAAAzD,IAAA,MAIA,SAAA00C,EAAAC,EAAA77C,GACA,IAAA2I,EAAAwxC,EAAA0B,EAAAlzC,OAAAkzC,EAAAlzC,KACAohB,EAAAvrB,EAAA8wC,oBAAAuM,EAAA77C,GACA,OAAA07C,EAAA/yC,EAAA3I,EAAA+pB,EAAA9iB,EAAA8iB,EAAA7iB,EAAA20C,GAGA,SAAAC,EAAA7oB,EAAAC,GACA,IAAA6oB,GAAA,EACA1oC,KAEA,kBACAA,EAAAC,MAAAlI,UAAA+H,MAAApK,KAAAwK,WACA2f,KAAAnzB,KAEAg8C,IACAA,GAAA,EACAv9C,EAAA8pC,iBAAAv/B,KAAAmf,OAAA,WACA6zB,GAAA,EACA9oB,EAAAxf,MAAAyf,EAAA7f,OAOA,SAAA2oC,EAAAxM,GACA,IAAAyM,EAAAtK,SAAAuK,cAAA,OACAC,EAAApC,EAAA,eACAqC,EAAA,IACAvqB,EACA,oHAUAoqB,EAAApqB,MAAAwqB,QAAAxqB,EACAoqB,EAAAK,UAAAH,EACAF,EAAAM,UACA,eAAAJ,EAAA,mBAAAtqB,EAAA,yCAGAuqB,EAAA,aACAA,EAAA,4CAKAD,EAAA,mBAAAtqB,EAAA,qFAUA,IAAA2qB,EAAAP,EAAAQ,WAAA,GACAC,EAAAT,EAAAQ,WAAA,GAEAR,EAAAU,OAAA,WACAH,EAAAI,WAAAR,EACAI,EAAAK,UAAAT,EACAM,EAAAE,WAAAR,EACAM,EAAAG,UAAAT,GAEA,IAAAU,EAAA,WACAb,EAAAU,SACAnN,KAMA,OAHAxC,EAAAwP,EAAA,SAAAM,EAAAC,KAAAP,EAAA,WACAxP,EAAA0P,EAAA,SAAAI,EAAAC,KAAAL,EAAA,WAEAT,EAIA,SAAAe,EAAA9L,EAAA1B,GACA,IAAAyN,EAAA/L,EAAA4I,KAAA5I,EAAA4I,OACAoD,EAAAD,EAAAE,YAAA,SAAAz9C,GACAA,EAAA09C,gBAAAnD,GACAzK,KAIAhxC,EAAAsH,KAAAo0C,EAAA,SAAAvxC,GACAqkC,EAAAkE,EAAAvoC,EAAAu0C,KAQAD,EAAAI,SAAAnM,EAAAoM,aAEApM,EAAAqM,UAAArwB,IAAA8sB,GAGA,SAAAwD,EAAAtM,GACA,IAAA+L,EAAA/L,EAAA4I,OACAoD,EAAAD,EAAAE,YAEAD,IACA1+C,EAAAsH,KAAAo0C,EAAA,SAAAvxC,GACAskC,EAAAiE,EAAAvoC,EAAAu0C,YAGAD,EAAAE,aAGAjM,EAAAqM,UAAAE,OAAAzD,GAGA,SAAA0D,EAAAxM,EAAAz+B,EAAAzS,GACA,IAAAi9C,EAAA/L,EAAA4I,KAAA5I,EAAA4I,OAGAmC,EAAAgB,EAAAhB,QAAAD,EAAAF,EAAA,WACA,GAAAmB,EAAAhB,QACA,OAAAxpC,EAAAipC,EAAA,SAAA17C,OAMAg9C,EAAA9L,EAAA,WACA,GAAA+L,EAAAhB,QAAA,CACA,IAAAlF,EAAA7F,EAAAG,WACA0F,OAAAkF,EAAA5K,YACA0F,EAAA4G,aAAA1B,EAAAlF,EAAA6G,YAIA3B,EAAAU,YAKA,SAAAkB,EAAA3M,GACA,IAAA+L,EAAA/L,EAAA4I,OACAmC,EAAAgB,EAAAhB,eAEAgB,EAAAhB,QACAuB,EAAAtM,GAEA+K,KAAA5K,YACA4K,EAAA5K,WAAAyM,YAAA7B,GAIA,SAAA8B,EAAA3nB,EAAA4nB,GAEA,IAAAnsB,EAAAuE,EAAA6nB,QAAAtM,SAAAuK,cAAA,SACA9lB,EAAA6nB,SACA7nB,EAAA6nB,OAAApsB,EACAmsB,EAAA,mBAAAA,EACAnsB,EAAAqsB,aAAA,mBACAvM,SAAAwM,qBAAA,WAAAC,YAAAvsB,IAGAA,EAAAusB,YAAAzM,SAAA0M,eAAAL,IAGA30C,EAAAC,SAMAwjC,SAAA,qBAAA5kB,QAAA,qBAAAypB,SAEAnvC,WAAA,WACA,IAAA87C,EAAA,kCAEAP,EAAAh+C,KAGA,sBAAAk6C,EAAA,IAAoDqE,EAAA,eACpDrE,EAAA,IAA4CqE,EAAA,KAC5CtE,EAAA,sBACAC,EAAA,qBACAA,EAAA,cAKA7nC,eAAA,SAAAzN,EAAAlC,GACA,kBAAAkC,EACAA,EAAAgtC,SAAA4M,eAAA55C,GACGA,EAAAvC,SAEHuC,IAAA,IAGAA,KAAAiD,SAEAjD,IAAAiD,QAMA,IAAA6C,EAAA9F,KAAA0N,YAAA1N,EAAA0N,WAAA,MASA,OAAA5H,KAAA7C,SAAAjD,GACAm2C,EAAAn2C,EAAAlC,GACAgI,GAGA,MAGAsiC,eAAA,SAAAtiC,GACA,IAAA7C,EAAA6C,EAAA7C,OACA,GAAAA,EAAAkyC,GAAA,CAIA,IAAAoB,EAAAtzC,EAAAkyC,GAAAoB,SACA,kBAAApoC,QAAA,SAAAs2B,GACA,IAAAv/B,EAAAqxC,EAAA9R,GACA5qC,EAAA4sB,cAAAvhB,GACAjC,EAAA42C,gBAAApV,GAEAxhC,EAAAs2C,aAAA9U,EAAAv/B,KAIArL,EAAAsH,KAAAo1C,EAAArpB,UAAkC,SAAAhoB,EAAAkJ,GAClCnL,EAAAiqB,MAAA9e,GAAAlJ,IAOAjC,EAAA/D,MAAA+D,EAAA/D,aAEA+D,EAAAkyC,KAGA9M,iBAAA,SAAAhtC,EAAA2I,EAAA8J,GACA,IAAA7K,EAAA5H,EAAA4H,OACA,cAAAe,EAAA,CAMA,IAAAs0C,EAAAxqC,EAAAqnC,KAAArnC,EAAAqnC,OACA2E,EAAAxB,EAAAwB,UAAAxB,EAAAwB,YACAvB,EAAAuB,EAAAz+C,EAAAmC,GAAA,IAAAwG,GAAA,SAAAkzC,GACAppC,EAAAmpC,EAAAC,EAAA77C,KAGAgtC,EAAAplC,EAAAe,EAAAu0C,QAVAQ,EAAA91C,EAAA6K,EAAAzS,IAaAitC,oBAAA,SAAAjtC,EAAA2I,EAAA8J,GACA,IAAA7K,EAAA5H,EAAA4H,OACA,cAAAe,EAAA,CAMA,IAAAs0C,EAAAxqC,EAAAqnC,OACA2E,EAAAxB,EAAAwB,YACAvB,EAAAuB,EAAAz+C,EAAAmC,GAAA,IAAAwG,GACAu0C,GAIAjQ,EAAArlC,EAAAe,EAAAu0C,QAXAW,EAAAj2C,EAAA6K,KA0BAjU,EAAAkgD,SAAA1R,EAWAxuC,EAAAmgD,YAAA1R,qCCtcA,IAAA5uC,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtBG,EAAcH,EAAQ,QAEtB+K,EAAAC,SAGAs1C,gBAKAvgD,YACAgzB,kBAAA,SAAA1oB,EAAAk2C,EAAAC,GACA/+C,KAAA6+C,aAAAj2C,GAAAk2C,EACA9+C,KAAA1B,SAAAsK,GAAAnK,EAAAqY,MAAAioC,IAEAC,oBAAA,SAAAp2C,GACA,OAAA5I,KAAA6+C,aAAAtoC,eAAA3N,GAAA5I,KAAA6+C,aAAAj2C,QAAAgC,GAEA2nC,iBAAA,SAAA3pC,GAEA,OAAA5I,KAAA1B,SAAAiY,eAAA3N,GAAAnK,EAAAiN,UAA8DpN,EAAA0O,MAAAhN,KAAA1B,SAAAsK,SAE9Dq2C,oBAAA,SAAAr2C,EAAAs2C,GACA,IAAAj8C,EAAAjD,KACAiD,EAAA3E,SAAAiY,eAAA3N,KACA3F,EAAA3E,SAAAsK,GAAAnK,EAAA+D,OAAAS,EAAA3E,SAAAsK,GAAAs2C,KAGAC,kBAAA,SAAAl/C,GAEAxB,EAAAsH,KAAA9F,EAAA8L,OAAA,SAAAiB,GAEAA,EAAAzN,UAAAyN,EAAAxI,QAAAjF,UACAyN,EAAA1N,SAAA0N,EAAAxI,QAAAlF,SACA0N,EAAAvN,OAAAuN,EAAAxI,QAAA/E,OACAf,EAAA2K,OAAApJ,EAAA+M,0CCrCA,IAAAvO,EAAcF,EAAQ,QAOtB6gD,GACAhlB,OAAA,SAAAjwB,GACA,OAAAA,GAGAk1C,WAAA,SAAAl1C,GACA,OAAAA,KAGAm1C,YAAA,SAAAn1C,GACA,OAAAA,KAAA,IAGAo1C,cAAA,SAAAp1C,GACA,OAAAA,GAAA,MACA,GAAAA,KAEA,MAAAA,KAAA,OAGAq1C,YAAA,SAAAr1C,GACA,OAAAA,OAGAs1C,aAAA,SAAAt1C,GACA,OAAAA,GAAA,GAAAA,IAAA,GAGAu1C,eAAA,SAAAv1C,GACA,OAAAA,GAAA,MACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAGAw1C,YAAA,SAAAx1C,GACA,OAAAA,SAGAy1C,aAAA,SAAAz1C,GACA,SAAAA,GAAA,GAAAA,MAAA,IAGA01C,eAAA,SAAA11C,GACA,OAAAA,GAAA,MACA,GAAAA,SAEA,KAAAA,GAAA,GAAAA,MAAA,IAGA21C,YAAA,SAAA31C,GACA,OAAAA,WAGA41C,aAAA,SAAA51C,GACA,OAAAA,GAAA,GAAAA,QAAA,GAGA61C,eAAA,SAAA71C,GACA,OAAAA,GAAA,MACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAGA81C,WAAA,SAAA91C,GACA,SAAAnL,KAAAid,IAAA9R,GAAAnL,KAAA4c,GAAA,KAGAskC,YAAA,SAAA/1C,GACA,OAAAnL,KAAAkd,IAAA/R,GAAAnL,KAAA4c,GAAA,KAGAukC,cAAA,SAAAh2C,GACA,WAAAnL,KAAAid,IAAAjd,KAAA4c,GAAAzR,GAAA,IAGAi2C,WAAA,SAAAj2C,GACA,WAAAA,EAAA,EAAAnL,KAAAsZ,IAAA,MAAAnO,EAAA,KAGAk2C,YAAA,SAAAl2C,GACA,WAAAA,EAAA,IAAAnL,KAAAsZ,IAAA,MAAAnO,IAGAm2C,cAAA,SAAAn2C,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,MACA,GAAAnL,KAAAsZ,IAAA,MAAAnO,EAAA,IAEA,MAAAnL,KAAAsZ,IAAA,QAAAnO,KAGAo2C,WAAA,SAAAp2C,GACA,OAAAA,GAAA,EACAA,IAEAnL,KAAA6c,KAAA,EAAA1R,KAAA,IAGAq2C,YAAA,SAAAr2C,GACA,OAAAnL,KAAA6c,KAAA,GAAA1R,GAAA,GAAAA,IAGAs2C,cAAA,SAAAt2C,GACA,OAAAA,GAAA,OACA,IAAAnL,KAAA6c,KAAA,EAAA1R,KAAA,GAEA,IAAAnL,KAAA6c,KAAA,GAAA1R,GAAA,GAAAA,GAAA,IAGAu2C,cAAA,SAAAv2C,GACA,IAAAmN,EAAA,QACAuC,EAAA,EACApB,EAAA,EACA,WAAAtO,EACA,EAEA,IAAAA,EACA,GAEA0P,IACAA,EAAA,IAEApB,EAAA,GACAA,EAAA,EACAnB,EAAAuC,EAAA,GAEAvC,EAAAuC,GAAA,EAAA7a,KAAA4c,IAAA5c,KAAA2hD,KAAA,EAAAloC,IAEAA,EAAAzZ,KAAAsZ,IAAA,MAAAnO,GAAA,IAAAnL,KAAAkd,KAAA/R,EAAAmN,IAAA,EAAAtY,KAAA4c,IAAA/B,KAGA+mC,eAAA,SAAAz2C,GACA,IAAAmN,EAAA,QACAuC,EAAA,EACApB,EAAA,EACA,WAAAtO,EACA,EAEA,IAAAA,EACA,GAEA0P,IACAA,EAAA,IAEApB,EAAA,GACAA,EAAA,EACAnB,EAAAuC,EAAA,GAEAvC,EAAAuC,GAAA,EAAA7a,KAAA4c,IAAA5c,KAAA2hD,KAAA,EAAAloC,GAEAA,EAAAzZ,KAAAsZ,IAAA,MAAAnO,GAAAnL,KAAAkd,KAAA/R,EAAAmN,IAAA,EAAAtY,KAAA4c,IAAA/B,GAAA,IAGAgnC,iBAAA,SAAA12C,GACA,IAAAmN,EAAA,QACAuC,EAAA,EACApB,EAAA,EACA,WAAAtO,EACA,EAEA,KAAAA,GAAA,IACA,GAEA0P,IACAA,EAAA,KAEApB,EAAA,GACAA,EAAA,EACAnB,EAAAuC,EAAA,GAEAvC,EAAAuC,GAAA,EAAA7a,KAAA4c,IAAA5c,KAAA2hD,KAAA,EAAAloC,GAEAtO,EAAA,EACAsO,EAAAzZ,KAAAsZ,IAAA,MAAAnO,GAAA,IAAAnL,KAAAkd,KAAA/R,EAAAmN,IAAA,EAAAtY,KAAA4c,IAAA/B,IAAA,GAEApB,EAAAzZ,KAAAsZ,IAAA,OAAAnO,GAAA,IAAAnL,KAAAkd,KAAA/R,EAAAmN,IAAA,EAAAtY,KAAA4c,IAAA/B,GAAA,OAEAinC,WAAA,SAAA32C,GACA,IAAAmN,EAAA,QACA,OAAAnN,MAAAmN,EAAA,GAAAnN,EAAAmN,IAGAypC,YAAA,SAAA52C,GACA,IAAAmN,EAAA,QACA,OAAAnN,GAAA,GAAAA,IAAAmN,EAAA,GAAAnN,EAAAmN,GAAA,GAGA0pC,cAAA,SAAA72C,GACA,IAAAmN,EAAA,QACA,OAAAnN,GAAA,MACAA,MAAA,GAAAmN,GAAA,QAAAnN,EAAAmN,GAAA,GAEA,KAAAnN,GAAA,GAAAA,IAAA,GAAAmN,GAAA,QAAAnN,EAAAmN,GAAA,IAGA2pC,aAAA,SAAA92C,GACA,SAAAi1C,EAAA8B,cAAA,EAAA/2C,IAGA+2C,cAAA,SAAA/2C,GACA,OAAAA,EAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAEA,QAAAA,GAAA,YAAAA,EAAA,SAGAg3C,gBAAA,SAAAh3C,GACA,OAAAA,EAAA,GACA,GAAAi1C,EAAA6B,aAAA,EAAA92C,GAEA,GAAAi1C,EAAA8B,cAAA,EAAA/2C,EAAA,QAIAb,EAAAC,SACA61C,WAYA3gD,EAAA2iD,cAAAhC,qCCjPA,IAAA9gD,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACA81B,SACAmY,QACAiU,WAAA,MAKA,IAAAC,GACAxgD,QAAA,SAAAmtB,GACA,IAAApuB,EAAAouB,EAAAvgB,KACAzN,EAAAguB,EAAAhuB,MACAC,EAAAD,EAAAE,eAAAN,GACA0hD,EAAArhD,GAAAD,EAAAmB,iBAAAvB,GACAiN,EAAAy0C,GAAArhD,EAAAY,QAAA0M,cACAnL,EAAAyK,EAAAzK,QAAA,EAEA,OAAAA,EAAA,SAAA6L,EAAAnN,GACA,OAAAA,EAAAsB,GAAAyK,EAAA/L,GAAA8V,OAAA,MADA,MAKA2qC,SAAA,SAAAvzB,GACA,IAAAuzB,EAAAvzB,EAAAuzB,SACAt6C,EAAAs6C,IAAAt6C,EAAA,KACAC,EAAAq6C,IAAAr6C,EAAA,KAEA,gBAAA+G,GACA,OACAhH,EAAA,OAAAA,EAAAgH,EAAAhH,IACAC,EAAA,OAAAA,EAAA+G,EAAA/G,QAOA,SAAAs6C,EAAA/J,EAAA73C,EAAAuV,GACA,IAEAe,EAFA/F,EAAAsnC,EAAAjqC,WACAC,EAAA0C,EAAA1C,KAOA,QAJA9C,IAAA8C,IACAA,IAAA0C,EAAAjP,kBAGA,IAAAuM,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAIA,GADAyI,EAAA03B,WAAAngC,EAAA,IACAiJ,SAAAR,IAAAnX,KAAA2a,MAAAxD,OAKA,MAJA,MAAAzI,EAAA,UAAAA,EAAA,KACAyI,EAAAtW,EAAAsW,KAGAA,IAAAtW,GAAAsW,EAAA,GAAAA,GAAAf,IAIAe,EAGA,OAAAzI,GAEA,aACA,cACA,UACA,YACA,WACA,eAEA,aACA,YACA,UACA,OAAAA,EAEA,QACA,UAIA,SAAAg0C,EAAAzzB,GACA,IAIAwQ,EAJAruB,EAAA6d,EAAAypB,GAAAjqC,WACAT,EAAAihB,EAAAypB,GAAApqC,WACAI,EAAAugB,EAAAvgB,KACAyI,EAAA,KAGA,GAAAQ,SAAAjJ,GACA,YAmBA,GAZA,UAAAA,EACAyI,OAAAvL,IAAAwF,EAAAuxC,YAAA30C,EAAA7I,OAAAiM,EAAAuxC,YACE,QAAAj0C,EACFyI,OAAAvL,IAAAwF,EAAAwxC,SAAA50C,EAAA9I,IAAAkM,EAAAwxC,cACEh3C,IAAAwF,EAAAyxC,UACF1rC,EAAA/F,EAAAyxC,UACE70C,EAAA80C,gBACF3rC,EAAAnJ,EAAA80C,kBACE90C,EAAAqC,eACF8G,EAAAnJ,EAAAqC,qBAGAzE,IAAAuL,GAAA,OAAAA,EAAA,CACA,QAAAvL,IAAAuL,EAAAjP,QAAA0D,IAAAuL,EAAAhP,EACA,OAAAgP,EAGA,qBAAAA,GAAAQ,SAAAR,GAEA,OADAsoB,EAAAzxB,EAAAnJ,gBAEAqD,EAAAu3B,EAAAtoB,EAAA,KACAhP,EAAAs3B,EAAA,KAAAtoB,GAKA,YAGA,SAAA4rC,EAAAhuB,EAAAl0B,EAAAwhD,GACA,IAGAlrC,EAHA8X,EAAA8F,EAAAl0B,GACA6N,EAAAugB,EAAAvgB,KACAs0C,GAAAniD,GAGA,IAAAwhD,EACA,OAAA3zC,EAGA,WAAAA,IAAA,IAAAs0C,EAAAluC,QAAApG,GAAA,CACA,IAAAiJ,SAAAjJ,GACA,OAAAA,EAIA,GADAyI,EAAA4d,EAAArmB,IACAyI,EACA,SAGA,GAAAA,EAAAorC,QACA,OAAA7zC,EAGAs0C,EAAA7/C,KAAAuL,GACAA,EAAAyI,EAAAzI,KAGA,SAGA,SAAAu0C,EAAAh0B,GACA,IAAAvgB,EAAAugB,EAAAvgB,KACA9E,EAAA,UAEA,WAAA8E,EACA,MAGAiJ,SAAAjJ,KACA9E,EAAA,YAGA04C,EAAA14C,GAAAqlB,IAGA,SAAAi0B,EAAAh0C,GACA,OAAAA,MAAAwB,KAGA,SAAAyyC,EAAAr9C,EAAAs9C,EAAAC,EAAAC,EAAAC,GACA,IAAAxhD,EAEA,GAAAuhD,GAAAC,EAAA,CAMA,IADAz9C,EAAA0D,OAAA45C,EAAA,GAAAl7C,EAAAk7C,EAAA,GAAAj7C,GACApG,EAAA,EAAYA,EAAAuhD,IAAUvhD,EACtBtC,EAAAoJ,OAAAY,OAAA3D,EAAAs9C,EAAArhD,EAAA,GAAAqhD,EAAArhD,IAOA,IAHA+D,EAAA2D,OAAA45C,EAAAE,EAAA,GAAAr7C,EAAAm7C,EAAAE,EAAA,GAAAp7C,GAGApG,EAAAwhD,EAAA,EAAmBxhD,EAAA,IAAOA,EAC1BtC,EAAAoJ,OAAAY,OAAA3D,EAAAu9C,EAAAthD,GAAAshD,EAAAthD,EAAA,QAIA,SAAAyhD,EAAA19C,EAAAgI,EAAA21C,EAAA1sC,EAAAF,EAAA6/B,GACA,IAMA30C,EAAA4J,EAAA9K,EAAA6iD,EAAAC,EAAAC,EAAAC,EANAztC,EAAAtI,EAAAzK,OACAwoB,EAAA9U,EAAAnK,SACAw2C,KACAC,KACAC,EAAA,EACAC,EAAA,EAKA,IAFAz9C,EAAAyD,YAEAxH,EAAA,EAAA4J,EAAAyK,IAAAsgC,EAAqC30C,EAAA4J,IAAU5J,EAC/ClB,EAAAkB,EAAAqU,EACAstC,EAAA51C,EAAAjN,GAAAgX,MACA8rC,EAAAF,EAAAC,EAAA7iD,EAAAkW,GACA6sC,EAAAV,EAAAQ,GACAG,EAAAX,EAAAS,GAEAC,GAAAC,GACAP,EAAAF,EAAAjgD,KAAAugD,GACAH,EAAAF,EAAAlgD,KAAAwgD,IACGL,GAAAC,IACH13B,GAMA+3B,GACAR,EAAAjgD,KAAAugD,GAEAG,GACAR,EAAAlgD,KAAAwgD,KATAR,EAAAr9C,EAAAs9C,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,KACAC,OAYAF,EAAAr9C,EAAAs9C,EAAAC,EAAAC,EAAAC,GAEAz9C,EAAA8sB,YACA9sB,EAAA5D,UAAA2U,EACA/Q,EAAA4I,OAGApE,EAAAC,SACAnH,GAAA,SAEA0gD,oBAAA,SAAA7iD,EAAAuE,GACA,IAGAtE,EAAAa,EAAA22C,EAAAzpB,EAHA7Y,GAAAnV,EAAAI,KAAAC,cAAA+B,OACAg/C,EAAA78C,EAAA68C,UACAttB,KAGA,IAAAhzB,EAAA,EAAaA,EAAAqU,IAAWrU,EACxBb,EAAAD,EAAAE,eAAAY,GACA22C,EAAAx3C,EAAAY,QACAmtB,EAAA,KAEAypB,KAAAjqC,QAAAiqC,aAAA/wC,EAAA6F,OACAyhB,GACAszB,QAAAthD,EAAAmB,iBAAAL,GACA2M,KAAA+zC,EAAA/J,EAAA32C,EAAAqU,GACAnV,QACAy3C,OAIAx3C,EAAA6iD,QAAA90B,EACA8F,EAAA5xB,KAAA8rB,GAGA,IAAAltB,EAAA,EAAaA,EAAAqU,IAAWrU,EACxBktB,EAAA8F,EAAAhzB,GACAktB,IAIAA,EAAAvgB,KAAAq0C,EAAAhuB,EAAAhzB,EAAAsgD,GACApzB,EAAAuzB,SAAAE,EAAAzzB,GACAA,EAAAw0B,OAAAR,EAAAh0B,KAIA+0B,kBAAA,SAAA/iD,EAAAqT,GACA,IAAApT,EAAAoT,EAAApT,KAAA6iD,QACA,GAAA7iD,EAAA,CAIA,IAAA4E,EAAA7E,EAAA6E,IACA4yC,EAAAx3C,EAAAw3C,GACA3hC,EAAA2hC,EAAA7gC,MACA/J,EAAA4qC,EAAAlqC,cACAi1C,EAAAviD,EAAAuiD,OACA5sC,EAAAE,EAAA5U,iBAAA7C,EAAA0G,OAAAsC,aAEAm7C,GAAA5sC,GAAA/I,EAAAzK,SACA5D,EAAAoJ,OAAA0J,SAAAzM,EAAA7E,EAAAsQ,WACAiyC,EAAA19C,EAAAgI,EAAA21C,EAAA1sC,EAAAF,EAAA6hC,EAAA1iB,OACAv2B,EAAAoJ,OAAA2J,WAAA1M,0CCxTAwE,EAAAC,WACAD,EAAAC,QAAAouB,IAAqBp5B,EAAQ,QAC7B+K,EAAAC,QAAAiD,KAAsBjO,EAAQ,QAC9B+K,EAAAC,QAAAmD,MAAuBnO,EAAQ,QAC/B+K,EAAAC,QAAA00B,UAA2B1/B,EAAQ,2CCJnC,IAAAD,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QACtBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,UACAk4B,UACArK,SAAA,EACApgB,OAAA,KACAd,KAAA,UACAxM,SAAA,UACAswC,WAAA,EACAzuC,gBAAA,kBACA8hD,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACAC,aAAA,EACAC,mBAAA,OACAC,eAAA,EACApiD,YAAA,gBACAF,YAAA,EACAw1B,WAEA+sB,YAAA5lD,EAAAE,KACA83B,MAAA,SAAA6tB,EAAAjkD,GAEA,IAAAo2B,EAAA,GACAh2B,EAAAJ,EAAAI,OACA8jD,EAAA9jD,IAAA4B,OAAA,EAEA,GAAAiiD,EAAAjiD,OAAA,GACA,IAAAuC,EAAA0/C,EAAA,GAEA1/C,EAAAm5B,OACAtH,EAAA7xB,EAAAm5B,OACMwmB,EAAA,GAAA3/C,EAAA/E,MAAA0kD,IACN9tB,EAAAh2B,EAAAmE,EAAA/E,QAIA,OAAA42B,GAEA+tB,WAAA/lD,EAAAE,KAGA8lD,WAAAhmD,EAAAE,KAGA+lD,YAAAjmD,EAAAE,KACAsC,MAAA,SAAAs2B,EAAAl3B,GACA,IAAAY,EAAAZ,EAAAC,SAAAi3B,EAAAz3B,cAAAmB,OAAA,GAMA,OAJAA,IACAA,GAAA,MAEAA,GAAAs2B,EAAAsG,OACA58B,GAEA0jD,WAAA,SAAAptB,EAAAt3B,GACA,IAAAC,EAAAD,EAAAE,eAAAo3B,EAAAz3B,cACA8kD,EAAA1kD,EAAAG,KAAAk3B,EAAA13B,OACAkW,EAAA6uC,EAAA/tC,MACA,OACA7U,YAAA+T,EAAA/T,YACAb,gBAAA4U,EAAA5U,kBAGA0jD,eAAA,WACA,OAAA7kD,KAAA0gC,SAAA6iB,eAEAuB,WAAArmD,EAAAE,KAGAomD,UAAAtmD,EAAAE,KAGAqmD,aAAAvmD,EAAAE,KACAsmD,OAAAxmD,EAAAE,KACAumD,YAAAzmD,EAAAE,SAKA,IAAAwmD,GAOAC,QAAA,SAAAz+C,GACA,IAAAA,EAAAtE,OACA,SAGA,IAAAtB,EAAAsyB,EACAnsB,EAAA,EACAC,EAAA,EACAiO,EAAA,EAEA,IAAArU,EAAA,EAAAsyB,EAAA1sB,EAAAtE,OAAoCtB,EAAAsyB,IAAStyB,EAAA,CAC7C,IAAA22C,EAAA/wC,EAAA5F,GACA,GAAA22C,KAAAzgC,WAAA,CACA,IAAA+S,EAAA0tB,EAAA1gC,kBACA9P,GAAA8iB,EAAA9iB,EACAC,GAAA6iB,EAAA7iB,IACAiO,GAIA,OACAlO,EAAAlI,KAAAyoB,MAAAvgB,EAAAkO,GACAjO,EAAAnI,KAAAyoB,MAAAtgB,EAAAiO,KAWAw7B,QAAA,SAAAjqC,EAAA0+C,GACA,IAGAtkD,EAAAsyB,EAAAiyB,EAHAp+C,EAAAm+C,EAAAn+C,EACAC,EAAAk+C,EAAAl+C,EACA2oC,EAAA7/B,OAAA8/B,kBAGA,IAAAhvC,EAAA,EAAAsyB,EAAA1sB,EAAAtE,OAAoCtB,EAAAsyB,IAAStyB,EAAA,CAC7C,IAAA22C,EAAA/wC,EAAA5F,GACA,GAAA22C,KAAAzgC,WAAA,CACA,IAAA8nB,EAAA2Y,EAAA7wB,iBACA0+B,EAAA9mD,EAAAy1C,sBAAAmR,EAAAtmB,GAEAwmB,EAAAzV,IACAA,EAAAyV,EACAD,EAAA5N,IAKA,GAAA4N,EAAA,CACA,IAAAE,EAAAF,EAAAtuC,kBACA9P,EAAAs+C,EAAAt+C,EACAC,EAAAq+C,EAAAr+C,EAGA,OACAD,IACAC,OAQA,SAAAs+C,EAAAC,EAAAC,GACA,IAAA9vC,EAAApX,EAAAoX,MAAA6vC,GACA,OAAA7vC,EAAAk4B,MAAA4X,EAAA9vC,EAAAk4B,SAAAQ,aAIA,SAAAqX,EAAAvyC,EAAAwyC,GAUA,OATAA,IACApnD,EAAAmC,QAAAilD,GAEAtyC,MAAAlI,UAAAlJ,KAAAuR,MAAAL,EAAAwyC,GAEAxyC,EAAAlR,KAAA0jD,IAIAxyC,EASA,SAAAyyC,EAAA/W,GACA,yBAAAA,gBAAAgX,SAAAhX,EAAAj7B,QAAA,SACAi7B,EAAAiX,MAAA,MAEAjX,EAOA,SAAAkX,EAAAv0C,GACA,IAAA7C,EAAA6C,EAAAnC,QACAX,EAAA8C,EAAAlC,SAAAkC,EAAApE,OACAzN,EAAA6R,EAAAjC,OACA3P,EAAA4R,EAAAnE,cAEA,OACAwwB,OAAAlvB,IAAA0gB,iBAAA1vB,EAAAC,GAAA,GACA+9B,OAAAjvB,IAAA2gB,iBAAA1vB,EAAAC,GAAA,GACAD,QACAC,eACAoH,EAAAwK,EAAAjE,OAAAvG,EACAC,EAAAuK,EAAAjE,OAAAtG,GAQA,SAAA++C,EAAAC,GACA,IAAAxxB,EAAAr2B,EAAA0G,OACAC,EAAAxG,EAAAwG,eAEA,OAEA8+C,SAAAoC,EAAApC,SACAD,SAAAqC,EAAArC,SACAsC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAGA9C,cAAA4C,EAAA5C,cACA+C,gBAAArhD,EAAAkhD,EAAAI,eAAA5xB,EAAArvB,mBACAkhD,eAAAvhD,EAAAkhD,EAAAM,cAAA9xB,EAAAvvB,kBACAshD,WAAAP,EAAA3C,UACAmD,aAAA1hD,EAAAkhD,EAAAQ,aAAAhyB,EAAAzvB,iBACAo+C,YAAA6C,EAAA7C,YAGAF,eAAA+C,EAAA/C,eACAwD,iBAAA3hD,EAAAkhD,EAAAU,gBAAAlyB,EAAArvB,mBACAwhD,gBAAA7hD,EAAAkhD,EAAAlD,eAAAtuB,EAAAvvB,kBACA2hD,cAAA9hD,EAAAkhD,EAAAY,cAAApyB,EAAAzvB,iBACA8hD,YAAAb,EAAA9C,WACAH,aAAAiD,EAAAjD,aACAC,kBAAAgD,EAAAhD,kBAGAS,gBAAAuC,EAAAvC,gBACAqD,kBAAAhiD,EAAAkhD,EAAAe,iBAAAvyB,EAAArvB,mBACA6hD,iBAAAliD,EAAAkhD,EAAA1C,gBAAA9uB,EAAAvvB,kBACAgiD,eAAAniD,EAAAkhD,EAAAiB,eAAAzyB,EAAAzvB,iBACAmiD,aAAAlB,EAAAtC,YACAH,cAAAyC,EAAAzC,cACAC,gBAAAwC,EAAAxC,gBAGAM,UAAAkC,EAAAlC,UACAC,aAAAiC,EAAAjC,aACA/iD,gBAAAglD,EAAAhlD,gBACAwkD,QAAA,EACA2B,sBAAAnB,EAAAhC,mBACAC,cAAA+B,EAAA/B,cACApiD,YAAAmkD,EAAAnkD,YACAF,YAAAqkD,EAAArkD,aAOA,SAAAylD,EAAAC,EAAAp3C,GACA,IAAAtL,EAAA0iD,EAAAjzC,OAAAzP,IAEAb,EAAA,EAAAmM,EAAA0zC,SACAhgD,EAAA,EAGA2jD,EAAAr3C,EAAAq3C,KACAC,EAAAD,EAAAtU,OAAA,SAAA/9B,EAAAuyC,GACA,OAAAvyC,EAAAuyC,EAAAC,OAAAvlD,OAAAslD,EAAAE,MAAAxlD,OAAAslD,EAAAG,MAAAzlD,QACE,GACFqlD,GAAAt3C,EAAAq0C,WAAApiD,OAAA+N,EAAA20C,UAAA1iD,OAEA,IAAA0lD,EAAA33C,EAAAqmB,MAAAp0B,OACA2lD,EAAA53C,EAAA60C,OAAA5iD,OACA0kD,EAAA32C,EAAA22C,cACAJ,EAAAv2C,EAAAu2C,aACAS,EAAAh3C,EAAAg3C,eAEAnjD,GAAA8jD,EAAAhB,EACA9iD,GAAA8jD,KAAA,GAAA33C,EAAA8yC,aAAA,EACAj/C,GAAA8jD,EAAA33C,EAAA+yC,kBAAA,EACAl/C,GAAAyjD,EAAAf,EACA1iD,GAAAyjD,KAAA,GAAAt3C,EAAAkzC,YAAA,EACAr/C,GAAA+jD,EAAA53C,EAAAuzC,gBAAA,EACA1/C,GAAA+jD,EAAA,EACA/jD,GAAA+jD,KAAA,GAAA53C,EAAAszC,cAAA,EAGA,IAAAuE,EAAA,EACAC,EAAA,SAAAthD,GACA9C,EAAA9E,KAAAwH,IAAA1C,EAAAgB,EAAAkB,YAAAY,GAAA9C,MAAAmkD,IA4BA,OAzBAnjD,EAAAY,KAAAjH,EAAA+G,WAAAuhD,EAAA32C,EAAA02C,gBAAA12C,EAAAw2C,kBACAnoD,EAAAsH,KAAAqK,EAAAqmB,MAAAyxB,GAGApjD,EAAAY,KAAAjH,EAAA+G,WAAAmhD,EAAAv2C,EAAAo2C,eAAAp2C,EAAAk2C,iBACA7nD,EAAAsH,KAAAqK,EAAAq0C,WAAApvB,OAAAjlB,EAAA20C,WAAAmD,GAGAD,EAAA73C,EAAAg0C,cAAAuC,EAAA,IACAloD,EAAAsH,KAAA0hD,EAAA,SAAAE,GACAlpD,EAAAsH,KAAA4hD,EAAAC,OAAAM,GACAzpD,EAAAsH,KAAA4hD,EAAAE,MAAAK,GACAzpD,EAAAsH,KAAA4hD,EAAAG,MAAAI,KAIAD,EAAA,EAGAnjD,EAAAY,KAAAjH,EAAA+G,WAAA4hD,EAAAh3C,EAAA+2C,iBAAA/2C,EAAA62C,mBACAxoD,EAAAsH,KAAAqK,EAAA60C,OAAAiD,GAGApkD,GAAA,EAAAsM,EAAA2zC,UAGAjgD,QACAG,UAOA,SAAAkkD,EAAAX,EAAAz9C,GACA,IAYAq+C,EAAAC,EACAC,EAAAC,EACAC,EAdAp4C,EAAAo3C,EAAA/5C,OACAxN,EAAAunD,EAAAjzC,OACAhE,EAAAi3C,EAAAjzC,OAAAhE,UACA61C,EAAA,SACAC,EAAA,SAEAj2C,EAAAjJ,EAAA4C,EAAA9F,OACAoiD,EAAA,MACEj2C,EAAAjJ,EAAAlH,EAAAgE,OAAA8F,EAAA9F,SACFoiD,EAAA,UAMA,IAAAoC,GAAAl4C,EAAAxM,KAAAwM,EAAAvM,OAAA,EACA0kD,GAAAn4C,EAAArM,IAAAqM,EAAApM,QAAA,EAEA,WAAAkiD,GACA+B,EAAA,SAAAlhD,GACA,OAAAA,GAAAuhD,GAEAJ,EAAA,SAAAnhD,GACA,OAAAA,EAAAuhD,KAGAL,EAAA,SAAAlhD,GACA,OAAAA,GAAA6C,EAAAjG,MAAA,GAEAukD,EAAA,SAAAnhD,GACA,OAAAA,GAAAjH,EAAA6D,MAAAiG,EAAAjG,MAAA,IAIAwkD,EAAA,SAAAphD,GACA,OAAAA,EAAA6C,EAAAjG,MAAAsM,EAAA6zC,UAAA7zC,EAAA4zC,aAAA/jD,EAAA6D,OAEAykD,EAAA,SAAArhD,GACA,OAAAA,EAAA6C,EAAAjG,MAAAsM,EAAA6zC,UAAA7zC,EAAA4zC,aAAA,GAEAwE,EAAA,SAAArhD,GACA,OAAAA,GAAAuhD,EAAA,gBAGAN,EAAAh4C,EAAAlJ,IACAk/C,EAAA,OAGAkC,EAAAl4C,EAAAlJ,KACAk/C,EAAA,SACAC,EAAAmC,EAAAp4C,EAAAjJ,KAEEkhD,EAAAj4C,EAAAlJ,KACFk/C,EAAA,QAGAmC,EAAAn4C,EAAAlJ,KACAk/C,EAAA,SACAC,EAAAmC,EAAAp4C,EAAAjJ,KAIA,IAAAtC,EAAA2iD,EAAA9mB,SACA,OACA0lB,OAAAvhD,EAAAuhD,OAAAvhD,EAAAuhD,SACAC,OAAAxhD,EAAAwhD,OAAAxhD,EAAAwhD,UAOA,SAAAsC,EAAAtiC,EAAAtc,EAAA6+C,EAAA3oD,GAEA,IAAAiH,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,EAEA88C,EAAA59B,EAAA49B,UACAD,EAAA39B,EAAA29B,aACAE,EAAA79B,EAAA69B,aACAkC,EAAAwC,EAAAxC,OACAC,EAAAuC,EAAAvC,OACAwC,EAAA5E,EAAAD,EACA8E,EAAA5E,EAAAF,EAkCA,MAhCA,UAAAoC,EACAl/C,GAAA6C,EAAAjG,MACE,WAAAsiD,IACFl/C,GAAA6C,EAAAjG,MAAA,EACAoD,EAAA6C,EAAAjG,MAAA7D,EAAA6D,QACAoD,EAAAjH,EAAA6D,MAAAiG,EAAAjG,OAEAoD,EAAA,IACAA,EAAA,IAIA,QAAAm/C,EACAl/C,GAAA0hD,EAEA1hD,GADE,WAAAk/C,EACFt8C,EAAA9F,OAAA4kD,EAEA9+C,EAAA9F,OAAA,EAGA,WAAAoiD,EACA,SAAAD,EACAl/C,GAAA2hD,EACG,UAAAzC,IACHl/C,GAAA2hD,GAEE,SAAAzC,EACFl/C,GAAA4hD,EACE,UAAA1C,IACFl/C,GAAA4hD,IAIA5hD,IACAC,KAOA,SAAA4hD,EAAArkD,GACA,OAAAkhD,KAAAE,EAAAphD,IAGA6E,EAAAD,EAAAC,QAAA/K,EAAAgE,QACAC,WAAA,WACAzC,KAAAyN,OAAAy4C,EAAAlmD,KAAA0gC,UACA1gC,KAAAgpD,gBAKAC,SAAA,WACA,IAAAhmD,EAAAjD,KACA6E,EAAA5B,EAAAy9B,SACApJ,EAAAzyB,EAAAyyB,UAEA+sB,EAAA/sB,EAAA+sB,YAAA3wC,MAAAzQ,EAAAuQ,WACAijB,EAAAa,EAAAb,MAAA/iB,MAAAzQ,EAAAuQ,WACAgxC,EAAAltB,EAAAktB,WAAA9wC,MAAAzQ,EAAAuQ,WAEAq0C,KAKA,OAJAA,EAAAjC,EAAAiC,EAAA/B,EAAAzB,IACAwD,EAAAjC,EAAAiC,EAAA/B,EAAArvB,IACAoxB,EAAAjC,EAAAiC,EAAA/B,EAAAtB,IAEAqD,GAIAqB,cAAA,WACA,OAAAH,EAAA/oD,KAAA0gC,SAAApJ,UAAAmtB,WAAA/wC,MAAA1T,KAAAwT,aAIA21C,QAAA,SAAA7E,EAAAjkD,GACA,IAAA4C,EAAAjD,KACAs3B,EAAAr0B,EAAAy9B,SAAApJ,UACA8xB,KAeA,OAbA3qD,EAAAsH,KAAAu+C,EAAA,SAAA/sB,GACA,IAAAowB,GACAC,UACAC,SACAC,UAEAlC,EAAA+B,EAAAC,OAAA9B,EAAAxuB,EAAAotB,YAAA17C,KAAA/F,EAAAs0B,EAAAl3B,KACAulD,EAAA+B,EAAAE,MAAAvwB,EAAAr2B,MAAA+H,KAAA/F,EAAAs0B,EAAAl3B,IACAulD,EAAA+B,EAAAG,MAAAhC,EAAAxuB,EAAAwtB,WAAA97C,KAAA/F,EAAAs0B,EAAAl3B,KAEA+oD,EAAAjnD,KAAAwlD,KAGAyB,GAIAC,aAAA,WACA,OAAAN,EAAA/oD,KAAA0gC,SAAApJ,UAAAytB,UAAArxC,MAAA1T,KAAAwT,aAKA81C,UAAA,WACA,IAAArmD,EAAAjD,KACAs3B,EAAAr0B,EAAAy9B,SAAApJ,UAEA0tB,EAAA1tB,EAAA0tB,aAAAtxC,MAAAzQ,EAAAuQ,WACAyxC,EAAA3tB,EAAA2tB,OAAAvxC,MAAAzQ,EAAAuQ,WACA0xC,EAAA5tB,EAAA4tB,YAAAxxC,MAAAzQ,EAAAuQ,WAEAq0C,KAKA,OAJAA,EAAAjC,EAAAiC,EAAA/B,EAAAd,IACA6C,EAAAjC,EAAAiC,EAAA/B,EAAAb,IACA4C,EAAAjC,EAAAiC,EAAA/B,EAAAZ,IAEA2C,GAGAtnD,OAAA,SAAAsI,GACA,IA8BA9H,EAAAsyB,EA9BApwB,EAAAjD,KACA6E,EAAA5B,EAAAy9B,SAKA6oB,EAAAtmD,EAAAwK,OACA2C,EAAAnN,EAAAwK,OAAAy4C,EAAArhD,GACA2kD,EAAAvmD,EAAAwmD,QAEAppD,EAAA4C,EAAAoR,MAGAu0C,GACAxC,OAAAmD,EAAAnD,OACAC,OAAAkD,EAAAlD,QAEAqD,GACAxiD,EAAAqiD,EAAAriD,EACAC,EAAAoiD,EAAApiD,GAEAwiD,GACA7lD,MAAAylD,EAAAzlD,MACAG,OAAAslD,EAAAtlD,QAEA+S,GACA9P,EAAAqiD,EAAAK,OACAziD,EAAAoiD,EAAAM,QAKA,GAAAL,EAAAnnD,OAAA,CACA+N,EAAAu1C,QAAA,EAEA,IAAAmE,KACAC,KACA/yC,EAAAmuC,EAAAtgD,EAAAvF,UAAA0J,KAAA/F,EAAAumD,EAAAvmD,EAAA+mD,gBAEA,IAAA1F,KACA,IAAAvjD,EAAA,EAAAsyB,EAAAm2B,EAAAnnD,OAAmCtB,EAAAsyB,IAAStyB,EAC5CujD,EAAAniD,KAAA8jD,EAAAuD,EAAAzoD,KAIA8D,EAAAF,SACA2/C,IAAA3/C,OAAA,SAAA8T,GACA,OAAA5T,EAAAF,OAAA8T,EAAApY,MAKAwE,EAAAolD,WACA3F,IAAA11B,KAAA,SAAAnW,EAAApO,GACA,OAAAxF,EAAAolD,SAAAxxC,EAAApO,EAAAhK,MAKA5B,EAAAsH,KAAAu+C,EAAA,SAAA/sB,GACAuyB,EAAA3nD,KAAA0C,EAAAyyB,UAAAqtB,WAAA37C,KAAA/F,EAAAs0B,EAAAt0B,EAAAsR,SACAw1C,EAAA5nD,KAAA0C,EAAAyyB,UAAAutB,eAAA77C,KAAA/F,EAAAs0B,EAAAt0B,EAAAsR,WAKAnE,EAAAqmB,MAAAxzB,EAAAgmD,SAAA3E,EAAAjkD,GACA+P,EAAAq0C,WAAAxhD,EAAAimD,cAAA5E,EAAAjkD,GACA+P,EAAAq3C,KAAAxkD,EAAAkmD,QAAA7E,EAAAjkD,GACA+P,EAAA20C,UAAA9hD,EAAAomD,aAAA/E,EAAAjkD,GACA+P,EAAA60C,OAAAhiD,EAAAqmD,UAAAhF,EAAAjkD,GAGA+P,EAAAlJ,EAAAlI,KAAAyoB,MAAAzQ,EAAA9P,GACAkJ,EAAAjJ,EAAAnI,KAAAyoB,MAAAzQ,EAAA7P,GACAiJ,EAAA4zC,aAAAn/C,EAAAm/C,aACA5zC,EAAA05C,cACA15C,EAAA25C,kBAGA35C,EAAA85C,WAAA5F,EAGAqF,EAAApC,EAAAvnD,KAAAoQ,GACAw4C,EAAAT,EAAAnoD,KAAA2pD,GAEAD,EAAAf,EAAAv4C,EAAAu5C,EAAAf,EAAA3lD,EAAAsR,aAEAnE,EAAAu1C,QAAA,EAoBA,OAjBAv1C,EAAAg2C,OAAAwC,EAAAxC,OACAh2C,EAAAi2C,OAAAuC,EAAAvC,OACAj2C,EAAAlJ,EAAAwiD,EAAAxiD,EACAkJ,EAAAjJ,EAAAuiD,EAAAviD,EACAiJ,EAAAtM,MAAA6lD,EAAA7lD,MACAsM,EAAAnM,OAAA0lD,EAAA1lD,OAGAmM,EAAAw5C,OAAA5yC,EAAA9P,EACAkJ,EAAAy5C,OAAA7yC,EAAA7P,EAEAlE,EAAAwK,OAAA2C,EAEAvH,GAAAhE,EAAA+H,QACA/H,EAAA+H,OAAA5D,KAAA/F,EAAAmN,GAGAnN,GAGAknD,UAAA,SAAAC,EAAArgD,GACA,IAAAjF,EAAA9E,KAAAuU,OAAAzP,IACAuhB,EAAArmB,KAAA6W,MACAwzC,EAAArqD,KAAAsqD,iBAAAF,EAAArgD,EAAAsc,GAEAvhB,EAAA2D,OAAA4hD,EAAA/jB,GAAA+jB,EAAA9jB,IACAzhC,EAAA2D,OAAA4hD,EAAA7jB,GAAA6jB,EAAA5uC,IACA3W,EAAA2D,OAAA4hD,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAArgD,EAAAsc,GACA,IAAAigB,EAAAE,EAAA+jB,EAAAhkB,EAAA9qB,EAAA+uC,EACAvG,EAAA59B,EAAA49B,UACAC,EAAA79B,EAAA69B,aACAkC,EAAA//B,EAAA+/B,OACAC,EAAAhgC,EAAAggC,OACAoE,EAAAL,EAAAljD,EACAwjD,EAAAN,EAAAjjD,EACArD,EAAAiG,EAAAjG,MACAG,EAAA8F,EAAA9F,OAEA,cAAAoiD,EACA5qC,EAAAivC,EAAAzmD,EAAA,EAEA,SAAAmiD,GACA9f,EAAAmkB,EACAjkB,EAAAF,EAAA2d,EACAsG,EAAAjkB,EAEAC,EAAA9qB,EAAAwoC,EACAuG,EAAA/uC,EAAAwoC,IAEA3d,EAAAmkB,EAAA3mD,EACA0iC,EAAAF,EAAA2d,EACAsG,EAAAjkB,EAEAC,EAAA9qB,EAAAwoC,EACAuG,EAAA/uC,EAAAwoC,QAgBA,GAbA,SAAAmC,GACA5f,EAAAikB,EAAAvG,EAAA,EACA5d,EAAAE,EAAAyd,EACAsG,EAAA/jB,EAAAyd,GACI,UAAAmC,GACJ5f,EAAAikB,EAAA3mD,EAAAogD,EAAAD,EACA3d,EAAAE,EAAAyd,EACAsG,EAAA/jB,EAAAyd,IAEAzd,EAAAngB,EAAAujC,OACAtjB,EAAAE,EAAAyd,EACAsG,EAAA/jB,EAAAyd,GAEA,QAAAoC,EACA9f,EAAAmkB,EACAjvC,EAAA8qB,EAAA0d,EACAuG,EAAAjkB,MACI,CACJA,EAAAmkB,EAAAzmD,EACAwX,EAAA8qB,EAAA0d,EACAuG,EAAAjkB,EAEA,IAAAokB,EAAAJ,EACAA,EAAAjkB,EACAA,EAAAqkB,EAGA,OAAUrkB,KAAAE,KAAA+jB,KAAAhkB,KAAA9qB,KAAA+uC,OAGVI,UAAA,SAAAn6C,EAAA4V,EAAAvhB,EAAA6gD,GACA,IAAAlvB,EAAApQ,EAAAoQ,MAEA,GAAAA,EAAAp0B,OAAA,CACAyC,EAAAe,UAAAwgB,EAAA2gC,YACAliD,EAAAgB,aAAA,MAEA,IAMA/E,EAAAsyB,EANA0zB,EAAA1gC,EAAA0gC,cACA7D,EAAA78B,EAAA68B,aAMA,IAJAp+C,EAAA5D,UAAAukD,EAAAp/B,EAAA+8B,eAAAuC,GACA7gD,EAAAY,KAAAjH,EAAA+G,WAAAuhD,EAAA1gC,EAAAygC,gBAAAzgC,EAAAugC,kBAGA7lD,EAAA,EAAAsyB,EAAAoD,EAAAp0B,OAAkCtB,EAAAsyB,IAAStyB,EAC3C+D,EAAAoD,SAAAuuB,EAAA11B,GAAA0P,EAAAvJ,EAAAuJ,EAAAtJ,GACAsJ,EAAAtJ,GAAA4/C,EAAA7D,EAEAniD,EAAA,IAAA01B,EAAAp0B,SACAoO,EAAAtJ,GAAAkf,EAAA88B,kBAAAD,KAMA2H,SAAA,SAAAp6C,EAAA4V,EAAAvhB,EAAA6gD,GACA,IAAAgB,EAAAtgC,EAAAsgC,aACArD,EAAAj9B,EAAAi9B,YACAmE,EAAAphC,EAAAohC,KAEA3iD,EAAAe,UAAAwgB,EAAAqgC,WACA5hD,EAAAgB,aAAA,MACAhB,EAAAY,KAAAjH,EAAA+G,WAAAmhD,EAAAtgC,EAAAmgC,eAAAngC,EAAAigC,iBAGA,IAAAwE,EAAA,EACAC,EAAA,SAAAnkD,GACA9B,EAAAoD,SAAAtB,EAAA6J,EAAAvJ,EAAA4jD,EAAAr6C,EAAAtJ,GACAsJ,EAAAtJ,GAAAw/C,EAAArD,GAIAx+C,EAAA5D,UAAAukD,EAAAp/B,EAAAk9B,cAAAoC,GACAlnD,EAAAsH,KAAAsgB,EAAAo+B,WAAAsG,GAEA,IAAAC,EAAA3kC,EAAA+9B,cACA0G,EAAAE,EAAArE,EAAA,IAGAloD,EAAAsH,KAAA0hD,EAAA,SAAAE,EAAA5mD,GACA,IAAAkqD,EAAAxF,EAAAp/B,EAAA0jC,gBAAAhpD,GAAA4kD,GACA7gD,EAAA5D,UAAA+pD,EACAxsD,EAAAsH,KAAA4hD,EAAAC,OAAAmD,GAEAtsD,EAAAsH,KAAA4hD,EAAAE,MAAA,SAAAjhD,GAEAokD,IAEAlmD,EAAA5D,UAAAukD,EAAAp/B,EAAAihC,sBAAA3B,GACA7gD,EAAAkD,SAAAyI,EAAAvJ,EAAAuJ,EAAAtJ,EAAAw/C,KAGA7hD,EAAAjD,UAAA,EACAiD,EAAA/C,YAAA0jD,EAAAp/B,EAAAyjC,YAAA/oD,GAAAiB,YAAA2jD,GACA7gD,EAAAiD,WAAA0I,EAAAvJ,EAAAuJ,EAAAtJ,EAAAw/C,KAGA7hD,EAAA5D,UAAAukD,EAAAp/B,EAAAyjC,YAAA/oD,GAAAI,gBAAAwkD,GACA7gD,EAAAkD,SAAAyI,EAAAvJ,EAAA,EAAAuJ,EAAAtJ,EAAA,EAAAw/C,EAAA,EAAAA,EAAA,GACA7hD,EAAA5D,UAAA+pD,GAGAF,EAAAnkD,KAGAnI,EAAAsH,KAAA4hD,EAAAG,MAAAiD,KAIAD,EAAA,EAGArsD,EAAAsH,KAAAsgB,EAAA0+B,UAAAgG,GACAt6C,EAAAtJ,GAAAm8C,GAGA4H,WAAA,SAAAz6C,EAAA4V,EAAAvhB,EAAA6gD,GACA,IAAAV,EAAA5+B,EAAA4+B,OAEAA,EAAA5iD,SACAoO,EAAAtJ,GAAAkf,EAAAs9B,gBAEA7+C,EAAAe,UAAAwgB,EAAAghC,aACAviD,EAAAgB,aAAA,MAEAhB,EAAA5D,UAAAukD,EAAAp/B,EAAAu9B,gBAAA+B,GACA7gD,EAAAY,KAAAjH,EAAA+G,WAAA6gB,EAAA+gC,eAAA/gC,EAAA8gC,iBAAA9gC,EAAA4gC,mBAEAxoD,EAAAsH,KAAAk/C,EAAA,SAAAr+C,GACA9B,EAAAoD,SAAAtB,EAAA6J,EAAAvJ,EAAAuJ,EAAAtJ,GACAsJ,EAAAtJ,GAAAkf,EAAA+gC,eAAA/gC,EAAAq9B,kBAKAyH,eAAA,SAAA16C,EAAA4V,EAAAvhB,EAAA6kD,EAAAhE,GACA7gD,EAAA5D,UAAAukD,EAAAp/B,EAAAllB,gBAAAwkD,GACA7gD,EAAA/C,YAAA0jD,EAAAp/B,EAAArkB,YAAA2jD,GACA7gD,EAAAjD,UAAAwkB,EAAAvkB,YACA,IAAAskD,EAAA//B,EAAA+/B,OACAC,EAAAhgC,EAAAggC,OACAn/C,EAAAuJ,EAAAvJ,EACAC,EAAAsJ,EAAAtJ,EACArD,EAAA6lD,EAAA7lD,MACAG,EAAA0lD,EAAA1lD,OACAwD,EAAA4e,EAAA69B,aAEAp/C,EAAAyD,YACAzD,EAAA0D,OAAAtB,EAAAO,EAAAN,GACA,QAAAk/C,GACArmD,KAAAmqD,UAAA15C,EAAAk5C,GAEA7kD,EAAA2D,OAAAvB,EAAApD,EAAA2D,EAAAN,GACArC,EAAAsmD,iBAAAlkD,EAAApD,EAAAqD,EAAAD,EAAApD,EAAAqD,EAAAM,GACA,WAAA4+C,GAAA,UAAAD,GACApmD,KAAAmqD,UAAA15C,EAAAk5C,GAEA7kD,EAAA2D,OAAAvB,EAAApD,EAAAqD,EAAAlD,EAAAwD,GACA3C,EAAAsmD,iBAAAlkD,EAAApD,EAAAqD,EAAAlD,EAAAiD,EAAApD,EAAA2D,EAAAN,EAAAlD,GACA,WAAAoiD,GACArmD,KAAAmqD,UAAA15C,EAAAk5C,GAEA7kD,EAAA2D,OAAAvB,EAAAO,EAAAN,EAAAlD,GACAa,EAAAsmD,iBAAAlkD,EAAAC,EAAAlD,EAAAiD,EAAAC,EAAAlD,EAAAwD,GACA,WAAA4+C,GAAA,SAAAD,GACApmD,KAAAmqD,UAAA15C,EAAAk5C,GAEA7kD,EAAA2D,OAAAvB,EAAAC,EAAAM,GACA3C,EAAAsmD,iBAAAlkD,EAAAC,EAAAD,EAAAO,EAAAN,GACArC,EAAA8sB,YAEA9sB,EAAA4I,OAEA2Y,EAAAvkB,YAAA,GACAgD,EAAA4D,UAIAjC,KAAA,WACA,IAAA3B,EAAA9E,KAAAuU,OAAAzP,IACAuhB,EAAArmB,KAAA6W,MAEA,OAAAwP,EAAAs/B,QAAA,CAIA,IAAAgE,GACA7lD,MAAAuiB,EAAAviB,MACAG,OAAAoiB,EAAApiB,QAEAwM,GACAvJ,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,GAIAw+C,EAAA3mD,KAAAsnB,IAAAD,EAAAs/B,QAAA,QAAAt/B,EAAAs/B,QAGA0F,EAAAhlC,EAAAoQ,MAAAp0B,QAAAgkB,EAAAo+B,WAAApiD,QAAAgkB,EAAAohC,KAAAplD,QAAAgkB,EAAA0+B,UAAA1iD,QAAAgkB,EAAA4+B,OAAA5iD,OAEArC,KAAA0gC,SAAA1T,SAAAq+B,IAEArrD,KAAAmrD,eAAA16C,EAAA4V,EAAAvhB,EAAA6kD,EAAAhE,GAGAl1C,EAAAvJ,GAAAmf,EAAA09B,SACAtzC,EAAAtJ,GAAAkf,EAAAy9B,SAGA9jD,KAAA4qD,UAAAn6C,EAAA4V,EAAAvhB,EAAA6gD,GAGA3lD,KAAA6qD,SAAAp6C,EAAA4V,EAAAvhB,EAAA6gD,GAGA3lD,KAAAkrD,WAAAz6C,EAAA4V,EAAAvhB,EAAA6gD,MAUAh9C,YAAA,SAAAhJ,GACA,IAAAsD,EAAAjD,KACAwE,EAAAvB,EAAAy9B,SACA73B,GAAA,EA6BA,OA3BA5F,EAAA+lD,YAAA/lD,EAAA+lD,gBAGA,aAAArpD,EAAAiJ,KACA3F,EAAAwmD,WAEAxmD,EAAAwmD,QAAAxmD,EAAAsR,OAAA+2C,0BAAA3rD,EAAA6E,EAAAsH,KAAAtH,GAIAqE,GAAApK,EAAA60B,YAAArwB,EAAAwmD,QAAAxmD,EAAA+lD,aAGAngD,IACA5F,EAAA+lD,YAAA/lD,EAAAwmD,SAEAjlD,EAAAwoB,SAAAxoB,EAAAoI,UACA3J,EAAA+mD,gBACA9iD,EAAAvH,EAAAuH,EACAC,EAAAxH,EAAAwH,GAGAlE,EAAA1C,QAAA,GACA0C,EAAA6K,UAIAjF,KAOAU,EAAA47C,kDCz8BA,IAAA7mD,EAAeC,EAAQ,QAEvBD,EAAAa,KAAA,UACAosD,YAAA,EACAC,4BAAA,EACAC,qBAAA,EACAC,QAAA,yDACA7/C,OACArL,QAAA,KACAsL,KAAA,UACA8jC,WAAA,EACA+b,kBAAA,KAEAjsD,QAAA,KACA4H,aAAA,kBACAN,iBAAA,OACA1B,kBAAA,qDACAJ,gBAAA,GACAE,iBAAA,SACAuG,WAAA,EAGAhF,YAGA6iC,QACA9oC,SACAwD,IAAA,EACAF,MAAA,EACAG,OAAA,EACAJ,KAAA,MAKAuF,EAAAC,QAAA,WAGA,IAAA2C,EAAA,SAAAtH,EAAAlC,GAEA,OADA1C,KAAA4rD,UAAAhnD,EAAAlC,GACA1C,MAKA,OAFAkM,UAEAA,sCC7CA,IAAA5N,EAAeC,EAAQ,QACvBC,EAAcD,EAAQ,QAatB,SAAAstD,EAAA7tB,GACA,YAAApzB,IAAAozB,EAAAnnB,MAAA/S,MASA,SAAAgoD,EAAA9tB,GACA,IACAsI,EAAAE,EAAAD,EAAA9qB,EADA4K,EAAA2X,EAAAnnB,MAGA,GAAAg1C,EAAA7tB,GAAA,CAEA,IAAA+tB,EAAA1lC,EAAAviB,MAAA,EACAwiC,EAAAjgB,EAAAnf,EAAA6kD,EACAvlB,EAAAngB,EAAAnf,EAAA6kD,EACAxlB,EAAAvnC,KAAA0R,IAAA2V,EAAAlf,EAAAkf,EAAAhT,MACAoI,EAAAzc,KAAAwH,IAAA6f,EAAAlf,EAAAkf,EAAAhT,UACE,CAEF,IAAA24C,EAAA3lC,EAAApiB,OAAA,EACAqiC,EAAAtnC,KAAA0R,IAAA2V,EAAAnf,EAAAmf,EAAAhT,MACAmzB,EAAAxnC,KAAAwH,IAAA6f,EAAAnf,EAAAmf,EAAAhT,MACAkzB,EAAAlgB,EAAAlf,EAAA6kD,EACAvwC,EAAA4K,EAAAlf,EAAA6kD,EAGA,OACAjoD,KAAAuiC,EACApiC,IAAAqiC,EACAviC,MAAAwiC,EACAriC,OAAAsX,GA7CAnd,EAAAa,KAAA,UACAwH,UACAg3B,WACAx8B,gBAAA7C,EAAA0G,OAAAsC,aACAtF,YAAA1D,EAAA0G,OAAAsC,aACAs2B,cAAA,SACA97B,YAAA,MA2CAwH,EAAAC,QAAA/K,EAAAgE,QACAiE,KAAA,WACA,IAEA1C,EAAAC,EAAAE,EAAAC,EAAA8nD,EAAAC,EAAAtuB,EAFA94B,EAAA9E,KAAAuU,OAAAzP,IACAuhB,EAAArmB,KAAA6W,MAEA/U,EAAAukB,EAAAvkB,YAwBA,GAtBAukB,EAAAoY,YAWA16B,EAAAsiB,EAAAhT,KACArP,EAAAqiB,EAAAnf,EACAhD,EAAAmiB,EAAAlf,EAAAkf,EAAApiB,OAAA,EACAE,EAAAkiB,EAAAlf,EAAAkf,EAAApiB,OAAA,EACAgoD,EAAAjoD,EAAAD,EAAA,KACAmoD,EAAA,EACAtuB,EAAAvX,EAAAuX,eAAA,SAfA75B,EAAAsiB,EAAAnf,EAAAmf,EAAAviB,MAAA,EACAE,EAAAqiB,EAAAnf,EAAAmf,EAAAviB,MAAA,EACAI,EAAAmiB,EAAAlf,EACAhD,EAAAkiB,EAAAhT,KACA44C,EAAA,EACAC,EAAA/nD,EAAAD,EAAA,KACA05B,EAAAvX,EAAAuX,eAAA,UAcA97B,EAAA,CAEA,IAAAqqD,EAAAntD,KAAA0R,IAAA1R,KAAAsnB,IAAAviB,EAAAC,GAAAhF,KAAAsnB,IAAApiB,EAAAC,IACArC,IAAAqqD,IAAArqD,EACA,IAAAsqD,EAAAtqD,EAAA,EAEAuqD,EAAAtoD,GAAA,SAAA65B,EAAAwuB,EAAAH,EAAA,GACAK,EAAAtoD,GAAA,UAAA45B,GAAAwuB,EAAAH,EAAA,GACAM,EAAAroD,GAAA,QAAA05B,EAAAwuB,EAAAF,EAAA,GACAM,EAAAroD,GAAA,WAAAy5B,GAAAwuB,EAAAF,EAAA,GAEAG,IAAAC,IACApoD,EAAAqoD,EACApoD,EAAAqoD,GAGAD,IAAAC,IACAzoD,EAAAsoD,EACAroD,EAAAsoD,GAIAxnD,EAAAyD,YACAzD,EAAA5D,UAAAmlB,EAAAllB,gBACA2D,EAAA/C,YAAAskB,EAAArkB,YACA8C,EAAAjD,UAAAC,EAKA,IAAA2qD,IACA1oD,EAAAI,IACAJ,EAAAG,IACAF,EAAAE,IACAF,EAAAG,IAIAuoD,GAAA,+BACAC,EAAAD,EAAA54C,QAAA8pB,EAAA,GAKA,SAAAgvB,EAAA/sD,GACA,OAAA4sD,GAAAE,EAAA9sD,GAAA,IALA,IAAA8sD,IACAA,EAAA,GAQA,IAAAE,EAAAD,EAAA,GACA9nD,EAAA0D,OAAAqkD,EAAA,GAAAA,EAAA,IAEA,QAAA9rD,EAAA,EAAiBA,EAAA,EAAOA,IACxB8rD,EAAAD,EAAA7rD,GACA+D,EAAA2D,OAAAokD,EAAA,GAAAA,EAAA,IAGA/nD,EAAA4I,OACA5L,GACAgD,EAAA4D,UAIAzE,OAAA,WACA,IAAAoiB,EAAArmB,KAAA6W,MACA,OAAAwP,EAAAhT,KAAAgT,EAAAlf,GAGAsf,QAAA,SAAAL,EAAAI,GACA,IAAAC,GAAA,EAEA,GAAAzmB,KAAA6W,MAAA,CACA,IAAAgX,EAAAi+B,EAAA9rD,MACAymB,EAAAL,GAAAyH,EAAA9pB,MAAAqiB,GAAAyH,EAAA7pB,OAAAwiB,GAAAqH,EAAA3pB,KAAAsiB,GAAAqH,EAAA1pB,OAGA,OAAAsiB,GAGAC,aAAA,SAAAN,EAAAI,GACA,IAAAvjB,EAAAjD,KACA,IAAAiD,EAAA4T,MACA,SAGA,IAAA4P,GAAA,EACAoH,EAAAi+B,EAAA7oD,GAQA,OALAwjB,EADAolC,EAAA5oD,GACAmjB,GAAAyH,EAAA9pB,MAAAqiB,GAAAyH,EAAA7pB,MAEAwiB,GAAAqH,EAAA3pB,KAAAsiB,GAAAqH,EAAA1pB,OAGAsiB,GAGAE,SAAA,SAAAP,GACA,IAAAyH,EAAAi+B,EAAA9rD,MACA,OAAAomB,GAAAyH,EAAA9pB,MAAAqiB,GAAAyH,EAAA7pB,OAGA4iB,SAAA,SAAAJ,GACA,IAAAqH,EAAAi+B,EAAA9rD,MACA,OAAAwmB,GAAAqH,EAAA3pB,KAAAsiB,GAAAqH,EAAA1pB,QAGA0iB,eAAA,WACA,IACA3f,EAAAC,EADAkf,EAAArmB,KAAA6W,MAUA,OARAg1C,EAAA7rD,OACAkH,EAAAmf,EAAAnf,EACAC,GAAAkf,EAAAlf,EAAAkf,EAAAhT,MAAA,IAEAnM,GAAAmf,EAAAnf,EAAAmf,EAAAhT,MAAA,EACAlM,EAAAkf,EAAAlf,IAGUD,IAAAC,MAGV2f,QAAA,WACA,IAAAT,EAAArmB,KAAA6W,MACA,OAAAwP,EAAAviB,MAAA9E,KAAAsnB,IAAAD,EAAAlf,EAAAkf,EAAAhT,OAGA2D,gBAAA,WACA,IAAAqP,EAAArmB,KAAA6W,MACA,OACA3P,EAAAmf,EAAAnf,EACAC,EAAAkf,EAAAlf,yCCnNA,IAAA7I,EAAeC,EAAQ,QAEvBD,EAAAa,KAAA,WACA0M,OACAC,KAAA,UAGAC,QACAC,QACA5J,GAAA,WACAwG,KAAA,SACAtJ,SAAA,WAEA2M,QACA7J,GAAA,WACAwG,KAAA,SACAtJ,SAAA,UAIAqM,WAAA,EAEA0rB,UACAC,WACAb,MAAA,WACA,UAEAx1B,MAAA,SAAA2D,GACA,UAAAA,EAAAm5B,OAAA,KAAAn5B,EAAAi5B,OAAA,SAMAv0B,EAAAC,QAAA,SAAA2C,GAGAA,EAAAG,YAAAygD,QAAA5gD,EAAAG,YAAAzF,yCCrCA,IAAAtI,EAAeC,EAAQ,QACvBoI,EAAepI,EAAQ,QACvBE,EAAcF,EAAQ,QAEtBD,EAAAa,KAAA,aACA6N,OACApE,KAAA,eACAmkD,YACA1tD,SAAA,GAEAm+B,WACAwvB,UAAA,GAEAC,aACA5tD,SAAA,GAEA6sB,OACA6V,aAAA,IAKAjL,WACAC,eAAA,EACAC,cAAA,GAGAgB,YAAA,GAAAh5B,KAAA4c,GACA1Z,eAAA,SAAAjC,GACA,IAAAe,KACAA,EAAAmB,KAAA,cAAAlC,EAAAmC,GAAA,aAEA,IAAA/B,EAAAJ,EAAAI,KACAC,EAAAD,EAAAC,SACAG,EAAAJ,EAAAI,OAEA,GAAAH,EAAA+B,OACA,QAAAtB,EAAA,EAAkBA,EAAAT,EAAA,GAAAD,KAAAgC,SAA6BtB,EAC/CC,EAAAmB,KAAA,qCAAA7B,EAAA,GAAAa,gBAAAJ,GAAA,aACAN,EAAAM,IACAC,EAAAmB,KAAA1B,EAAAM,IAEAC,EAAAmB,KAAA,SAKA,OADAnB,EAAAmB,KAAA,SACAnB,EAAAsB,KAAA,KAEAlD,QACAqB,QACAE,eAAA,SAAAV,GACA,IAAAI,EAAAJ,EAAAI,KACA,OAAAA,EAAAI,OAAA4B,QAAAhC,EAAAC,SAAA+B,OACAhC,EAAAI,OAAAI,IAAA,SAAAI,EAAAF,GACA,IAAAb,EAAAD,EAAAE,eAAA,GACAwP,EAAAtP,EAAAC,SAAA,GACAgyB,EAAApyB,EAAAG,KAAAU,GACA6L,EAAA0lB,EAAA1lB,WACAwB,EAAA3P,EAAA2P,sBACA6oB,EAAAh3B,EAAAuE,QAAAmC,SAAA2rB,IACA5kB,EAAAd,EAAAzL,gBAAAyL,EAAAzL,gBAAAiN,EAAAuB,EAAAxO,gBAAAJ,EAAAk2B,EAAA91B,iBACAuH,EAAAkE,EAAA5K,YAAA4K,EAAA5K,YAAAoM,EAAAuB,EAAA3N,YAAAjB,EAAAk2B,EAAAj1B,aACAk1B,EAAAtqB,EAAA9K,YAAA8K,EAAA9K,YAAAsM,EAAAuB,EAAA7N,YAAAf,EAAAk2B,EAAAn1B,aAEA,OACAd,KAAAC,EACAC,UAAAwM,EACA3L,YAAA2G,EACA7G,UAAAq1B,EACA92B,OAAAgH,MAAAuI,EAAAtP,KAAAU,KAAAb,EAAAG,KAAAU,GAAAX,OAGAP,MAAAkB,UAQArB,QAAA,SAAAC,EAAAC,GACA,IAEAmB,EAAA4J,EAAAzK,EAFAL,EAAAD,EAAAC,MACAI,EAAAD,KAAAC,MAGA,IAAAc,EAAA,EAAA4J,GAAA1K,EAAAI,KAAAC,cAAA+B,OAAyDtB,EAAA4J,IAAU5J,EACnEb,EAAAD,EAAAE,eAAAY,GACAb,EAAAG,KAAAR,GAAAO,QAAAF,EAAAG,KAAAR,GAAAO,OAGAH,EAAAM,WAKA82B,UACAC,WACAb,MAAA,WACA,UAEAx1B,MAAA,SAAA2D,EAAAvE,GACA,OAAAA,EAAAI,OAAAmE,EAAA/E,OAAA,KAAA+E,EAAAi5B,YAMAv0B,EAAAC,QAAA,SAAA2C,GAEAA,EAAAG,YAAA6gD,UAAAhhD,EAAAI,kBAAA9J,QAEAiK,gBAAA9F,EAAAgxB,IAEA3jB,WAAAvV,EAAAE,KAEA4B,OAAA,SAAAoM,GACA,IAMA5L,EAAA4J,EAAAkmB,EANA5tB,EAAAjD,KACAc,EAAAmC,EAAAkK,aACAjN,EAAA+C,EAAA4J,UACAsI,EAAAlS,EAAAhD,MAAAuE,QAAAwzB,YAAA,EACAm1B,EAAAlqD,EAAAmqD,WACAC,EAAApqD,EAAAqqD,WAOA,IAJArqD,EAAAsqD,gBAEArtD,EAAAkV,MAAAnS,EAAAuqD,uBAEAzsD,EAAA,EAAA4J,EAAA7J,EAAAT,KAAAgC,OAA0CtB,EAAA4J,EAAU5J,IACpDosD,EAAApsD,GAAAoU,EACA0b,EAAA5tB,EAAAwqD,cAAA1sD,GACAssD,EAAAtsD,GAAA8vB,EACA1b,GAAA0b,EAGApyB,EAAAsH,KAAA7F,EAAAG,KAAA,SAAAiyB,EAAAzyB,GACAoD,EAAA8K,cAAAukB,EAAAzyB,EAAA8M,MAOA4gD,cAAA,WACA,IAAAtqD,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAsQ,EAAAtQ,EAAAsQ,UACA1L,EAAA5E,EAAAuE,QACAyyB,EAAApyB,EAAA8B,SAAA2rB,IACA1uB,EAAA5E,KAAA0R,IAAAH,EAAAvM,MAAAuM,EAAAxM,KAAAwM,EAAApM,OAAAoM,EAAArM,KAEAjE,EAAAw4B,YAAAz5B,KAAAwH,KAAA5C,EAAAqzB,EAAAn1B,YAAA,QACA7B,EAAAy4B,YAAA15B,KAAAwH,IAAA3B,EAAAsyB,iBAAAl3B,EAAAw4B,YAAA,IAAA5zB,EAAA,sBACA5E,EAAA04B,cAAA14B,EAAAw4B,YAAAx4B,EAAAy4B,aAAAz4B,EAAA24B,yBAEA31B,EAAAw1B,YAAAx4B,EAAAw4B,YAAAx4B,EAAA04B,aAAA11B,EAAApD,MACAoD,EAAAy1B,YAAAz1B,EAAAw1B,YAAAx4B,EAAA04B,cAGA5qB,cAAA,SAAAukB,EAAAzyB,EAAA8M,GACA,IAAA1J,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAa,EAAAmC,EAAAkK,aACAtI,EAAA5E,EAAAuE,QACAy0B,EAAAp0B,EAAAiyB,UACA9pB,EAAA/M,EAAA+M,MACAvM,EAAAR,EAAAI,KAAAI,OAEAkH,EAAAqF,EAAAmzB,QACAv4B,EAAAoF,EAAAozB,QAGAstB,EAAA7oD,EAAAmzB,WACA0B,EAAApH,EAAAlyB,OAAA,EAAA4M,EAAA2gD,8BAAA7sD,EAAAT,KAAAR,IACAm4B,EAAA/0B,EAAAmqD,QAAAvtD,GACAo4B,EAAAD,GAAA1F,EAAAlyB,OAAA,EAAA6C,EAAAqqD,QAAAztD,IAEA+tD,EAAA30B,EAAAjC,aAAA,EAAAhqB,EAAA2gD,8BAAA7sD,EAAAT,KAAAR,IAEApB,EAAA+D,OAAA8vB,GAEA/kB,cAAAtK,EAAApD,MACA4P,OAAA5P,EACAyN,OAAAN,EAGAS,QACAvG,EAAAS,EACAR,EAAAS,EACA8wB,YAAA,EACAD,YAAA9rB,EAAAihD,EAAAl0B,EACA1B,WAAArrB,GAAAssB,EAAAlC,cAAA22B,EAAA11B,EACAC,SAAAtrB,GAAAssB,EAAAlC,cAAA22B,EAAAz1B,EACAh3B,MAAAxC,EAAA2P,sBAAA3N,EAAAZ,EAAAY,EAAAZ,OAKA,IAAAs5B,EAAAn5B,KAAAC,MAAAuE,QAAAmC,SAAA2rB,IACA1lB,EAAA0lB,EAAA1lB,WACA3H,EAAAxG,EAAA2P,sBACAgC,EAAAkiB,EAAA7kB,OAEA2C,EAAAjP,gBAAAyL,EAAAzL,gBAAAyL,EAAAzL,gBAAA8D,EAAAnE,EAAAK,gBAAAtB,EAAAs5B,EAAAh4B,iBACAiP,EAAApO,YAAA4K,EAAA5K,YAAA4K,EAAA5K,YAAAiD,EAAAnE,EAAAkB,YAAAnC,EAAAs5B,EAAAn3B,aACAoO,EAAAtO,YAAA8K,EAAA9K,YAAA8K,EAAA9K,YAAAmD,EAAAnE,EAAAgB,YAAAjC,EAAAs5B,EAAAr3B,aAEAwwB,EAAAxkB,SAGA0/C,qBAAA,WACA,IAAA1sD,EAAAd,KAAAmN,aACAjN,EAAAF,KAAA6M,UACAuI,EAAA,EAQA,OANA3W,EAAAsH,KAAA7F,EAAAG,KAAA,SAAAqR,EAAA7R,GACAuH,MAAAtG,EAAAT,KAAAR,KAAA6R,EAAAtR,QACAgV,MAIAA,GAMAq4C,cAAA,SAAA5tD,GACA,IAAAoD,EAAAjD,KACAoV,EAAApV,KAAA6M,UAAAuI,MACAtU,EAAAmC,EAAAkK,aACAjN,EAAA+C,EAAA4J,UAEA,GAAAzF,MAAAtG,EAAAT,KAAAR,KAAAK,EAAAG,KAAAR,GAAAO,OACA,SAIA,IAAAsK,GACAzK,MAAAgD,EAAAhD,MACA0gC,UAAA9gC,EACAiB,UACAhB,aAAAmD,EAAApD,OAGA,OAAApB,EAAA+F,QAAAgG,SACAvH,EAAAhD,MAAAuE,QAAAmC,SAAA2rB,IAAAzB,MACA,EAAA7xB,KAAA4c,GAAAxG,GACA1K,EAAA7K,0CCzPA,IAAAq2B,EAAgB33B,EAAQ,QACxBupC,EAAiBvpC,EAAQ,QACzBD,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB63B,EAAkB73B,EAAQ,QAC1BG,EAAcH,EAAQ,QACtB83B,EAAe93B,EAAQ,QACvB02B,EAAc12B,EAAQ,QACtB8pB,EAAmB9pB,EAAQ,QAC3Bg4B,EAAch4B,EAAQ,QAEtB+K,EAAAC,QAAA,SAAA2C,GAeA,SAAA2hD,EAAAnrD,GACAA,QAIA,IAAArC,EAAAqC,EAAArC,KAAAqC,EAAArC,SASA,OARAA,EAAAC,SAAAD,EAAAC,aACAD,EAAAI,OAAAJ,EAAAI,WAEAiC,EAAA8B,QAAA/F,EAAA4zC,YACA/zC,EAAA0G,OACA1G,EAAAoE,EAAAkG,MACAlG,EAAA8B,aAEA9B,EAOA,SAAAorD,EAAA7tD,GACA,IAAA8tD,EAAA9tD,EAAAuE,QAEA/F,EAAAsH,KAAA9F,EAAA8L,OAAA,SAAAiB,GACAtO,EAAAiL,UAAA1J,EAAA+M,KAGA+gD,EAAAtvD,EAAA4zC,YACAnmC,EAAA5N,SAAA0G,OACAkH,EAAA5N,SAAA2B,EAAAyC,OAAAkG,MACAmlD,GAEA9tD,EAAAuE,QAAAvE,EAAAyC,OAAA8B,QAAAupD,EACA9tD,EAAA+tD,sBACA/tD,EAAAguD,sBAEAhuD,EAAAunD,QAAA9mB,SAAAqtB,EAAA12B,SACAp3B,EAAAunD,QAAA/kD,aAGA,SAAAyrD,EAAA5uD,GACA,cAAAA,GAAA,WAAAA,EAtDA4M,EAAAiiD,SAIAjiD,EAAAkiD,aAGAliD,EAAAG,eAkDA5N,EAAA+D,OAAA0J,EAAAb,WAIAugD,UAAA,SAAAhnD,EAAAlC,GACA,IAAAO,EAAAjD,KAEA0C,EAAAmrD,EAAAnrD,GAEA,IAAAgI,EAAA2rB,EAAAhkB,eAAAzN,EAAAlC,GACAmF,EAAA6C,KAAA7C,OACA5D,EAAA4D,KAAA5D,OACAH,EAAA+D,KAAA/D,MAEAb,EAAAb,GAAA3D,EAAAu0B,MACA/vB,EAAA6B,IAAA4F,EACAzH,EAAA4E,SACA5E,EAAAP,SACAO,EAAAa,QACAb,EAAAgB,SACAhB,EAAAo4C,YAAAp3C,EAAAH,EAAAG,EAAA,KACAhB,EAAAuB,QAAA9B,EAAA8B,QACAvB,EAAAorD,iBAAA,EAUAprD,EAAAhD,MAAAgD,EACAA,EAAAy8B,WAAAz8B,EAGAiJ,EAAAkiD,UAAAnrD,EAAAb,IAAAa,EAGAkI,OAAAC,eAAAnI,EAAA,QACAqI,IAAA,WACA,OAAArI,EAAAP,OAAArC,MAEAkL,IAAA,SAAAzB,GACA7G,EAAAP,OAAArC,KAAAyJ,KAIAY,GAAA7C,GASA5E,EAAAR,aACAQ,EAAA1C,UALA8tB,QAAAuqB,MAAA,sEAWAn2C,WAAA,WACA,IAAAQ,EAAAjD,KAsBA,OAnBAi1B,EAAAS,OAAAzyB,EAAA,cAEAxE,EAAAq5C,YAAA70C,IAAAuB,QAAAyzC,kBAEAh1C,EAAAqrD,aAEArrD,EAAAuB,QAAA+mD,YAEAtoD,EAAAsrD,QAAA,GAIAtrD,EAAA+qD,sBACA/qD,EAAAgrD,sBACAhrD,EAAAurD,cAGAv5B,EAAAS,OAAAzyB,EAAA,aAEAA,GAGAsuB,MAAA,WAEA,OADA9yB,EAAAoJ,OAAA0pB,MAAAvxB,MACAA,MAGAyuD,KAAA,WAGA,OADA3mB,EAAAO,gBAAAroC,MACAA,MAGAuuD,OAAA,SAAAG,GACA,IAAAzrD,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACAqD,EAAA5E,EAAA4E,OACAwzC,EAAA72C,EAAAinD,qBAAAxoD,EAAAo4C,aAAA,KAMAsT,EAAA3vD,KAAAwH,IAAA,EAAAxH,KAAA2a,MAAAlb,EAAA24C,gBAAAvvC,KACA+mD,EAAA5vD,KAAAwH,IAAA,EAAAxH,KAAA2a,MAAA0hC,EAAAsT,EAAAtT,EAAA58C,EAAA84C,iBAAA1vC,KAEA,IAAA5E,EAAAa,QAAA6qD,GAAA1rD,EAAAgB,SAAA2qD,KAIA/mD,EAAA/D,MAAAb,EAAAa,MAAA6qD,EACA9mD,EAAA5D,OAAAhB,EAAAgB,OAAA2qD,EACA/mD,EAAAiqB,MAAAhuB,MAAA6qD,EAAA,KACA9mD,EAAAiqB,MAAA7tB,OAAA2qD,EAAA,KAEAnwD,EAAAq5C,YAAA70C,EAAAuB,EAAAyzC,mBAEAyW,GAAA,CAEA,IAAAG,GAAmB/qD,MAAA6qD,EAAA1qD,OAAA2qD,GACnB35B,EAAAS,OAAAzyB,EAAA,UAAA4rD,IAGA5rD,EAAAuB,QAAAsqD,UACA7rD,EAAAuB,QAAAsqD,SAAA7rD,EAAA4rD,GAGA5rD,EAAAwrD,OACAxrD,EAAA1C,QACA4rB,SAAAlpB,EAAAuB,QAAAgnD,gCAKAwC,oBAAA,WACA,IAAAxpD,EAAAxE,KAAAwE,QACAuqD,EAAAvqD,EAAAuH,WACAijD,EAAAxqD,EAAAwI,MAEAvO,EAAAsH,KAAAgpD,EAAA/iD,MAAA,SAAAijD,EAAApvD,GACAovD,EAAA7sD,GAAA6sD,EAAA7sD,IAAA,UAAAvC,IAGApB,EAAAsH,KAAAgpD,EAAA9iD,MAAA,SAAAijD,EAAArvD,GACAqvD,EAAA9sD,GAAA8sD,EAAA9sD,IAAA,UAAAvC,IAGAmvD,IACAA,EAAA5sD,GAAA4sD,EAAA5sD,IAAA,UAOA6rD,oBAAA,WACA,IAAAhrD,EAAAjD,KACAwE,EAAAvB,EAAAuB,QACAuH,EAAA9I,EAAA8I,WACA0d,KACA0lC,EAAAhkD,OAAAmL,KAAAvK,GAAAonC,OAAA,SAAAic,EAAAhtD,GAEA,OADAgtD,EAAAhtD,IAAA,EACAgtD,OAGA5qD,EAAAuH,SACA0d,IAAA4L,QACA7wB,EAAAuH,OAAAC,WAAAnL,IAAA,SAAAouD,GACA,OAAczqD,QAAAyqD,EAAAI,MAAA,WAAAC,UAAA,aAEd9qD,EAAAuH,OAAAE,WAAApL,IAAA,SAAAquD,GACA,OAAc1qD,QAAA0qD,EAAAG,MAAA,SAAAC,UAAA,YAKd9qD,EAAAwI,OACAyc,EAAAtnB,MACAqC,UAAAwI,MACAqiD,MAAA,eACAE,WAAA,EACAD,UAAA,cAIA7wD,EAAAsH,KAAA0jB,EAAA,SAAA7kB,GACA,IAAAoqD,EAAApqD,EAAAJ,QACApC,EAAA4sD,EAAA5sD,GACAotD,EAAA/wD,EAAAwG,eAAA+pD,EAAApmD,KAAAhE,EAAAyqD,OAEAnB,EAAAc,EAAA1vD,YAAA4uD,EAAAtpD,EAAA0qD,aACAN,EAAA1vD,SAAAsF,EAAA0qD,WAGAH,EAAA/sD,IAAA,EACA,IAAA4K,EAAA,KACA,GAAA5K,KAAA2J,KAAA3J,GAAAwG,OAAA4mD,EACAxiD,EAAAjB,EAAA3J,GACA4K,EAAAxI,QAAAwqD,EACAhiD,EAAAlI,IAAA7B,EAAA6B,IACAkI,EAAA/M,MAAAgD,MACK,CACL,IAAAwsD,EAAApnC,EAAA22B,oBAAAwQ,GACA,IAAAC,EACA,OAEAziD,EAAA,IAAAyiD,GACArtD,KACAwG,KAAA4mD,EACAhrD,QAAAwqD,EACAlqD,IAAA7B,EAAA6B,IACA7E,MAAAgD,IAEA8I,EAAAiB,EAAA5K,IAAA4K,EAGAA,EAAAohB,oBAKAxpB,EAAA2qD,YACAtsD,EAAA+J,WAIAvO,EAAAsH,KAAAopD,EAAA,SAAAO,EAAAttD,GACAstD,UACA3jD,EAAA3J,KAIAa,EAAA8I,SAEAsc,EAAA82B,kBAAAn/C,OAGA2vD,yBAAA,WACA,IAAA1sD,EAAAjD,KACAmuD,KACAyB,KA4BA,OA1BAnxD,EAAAsH,KAAA9C,EAAA5C,KAAAC,SAAA,SAAAQ,EAAAhB,GACA,IAAAI,EAAA+C,EAAA9C,eAAAL,GACA8I,EAAA9H,EAAA8H,MAAA3F,EAAAP,OAAAkG,KAUA,GARA1I,EAAA0I,MAAA1I,EAAA0I,WACA3F,EAAA4sD,mBAAA/vD,GACAI,EAAA+C,EAAA9C,eAAAL,IAEAI,EAAA0I,OAEAulD,EAAAhsD,KAAAjC,EAAA0I,MAEA1I,EAAAw/B,WACAx/B,EAAAw/B,WAAAxrB,YAAApU,GACAI,EAAAw/B,WAAA1rB,iBACK,CACL,IAAA87C,EAAA5jD,EAAAG,YAAAnM,EAAA0I,MACA,QAAAgC,IAAAklD,EACA,UAAA3hC,MAAA,IAAAjuB,EAAA0I,KAAA,0BAGA1I,EAAAw/B,WAAA,IAAAowB,EAAA7sD,EAAAnD,GACA8vD,EAAAztD,KAAAjC,EAAAw/B,cAEIz8B,GAEJ2sD,GAOAG,cAAA,WACA,IAAA9sD,EAAAjD,KACAvB,EAAAsH,KAAA9C,EAAA5C,KAAAC,SAAA,SAAAQ,EAAAhB,GACAmD,EAAA9C,eAAAL,GAAA4/B,WAAA/yB,SACI1J,IAMJ0J,MAAA,WACA3M,KAAA+vD,gBACA/vD,KAAAwnD,QAAA/kD,cAGAlC,OAAA,SAAAmC,GACA,IAAAO,EAAAjD,KAgBA,GAdA0C,GAAA,kBAAAA,IAEAA,GACAypB,SAAAzpB,EACAwlC,KAAA10B,UAAA,KAIAs6C,EAAA7qD,GAIAgyB,EAAAgB,YAAAhzB,IAEA,IAAAgyB,EAAAS,OAAAzyB,EAAA,iBAKAA,EAAAukD,QAAAnzC,MAAApR,EAAA5C,KAGA,IAAAuvD,EAAA3sD,EAAA0sD,2BAGAlxD,EAAAsH,KAAA9C,EAAA5C,KAAAC,SAAA,SAAAQ,EAAAhB,GACAmD,EAAA9C,eAAAL,GAAA4/B,WAAA/qB,yBACI1R,GAEJA,EAAA+sD,eAGA/sD,EAAAuB,QAAAsyB,WAAA7zB,EAAAuB,QAAAsyB,UAAA3K,UACA1tB,EAAAsH,KAAA6pD,EAAA,SAAAlwB,GACAA,EAAA/yB,UAIA1J,EAAAgtD,iBAIAhtD,EAAAukD,QAAA/kD,aAIAQ,EAAAitD,cAGAj7B,EAAAS,OAAAzyB,EAAA,eAEAA,EAAAorD,gBACAprD,EAAAktD,kBACAhkC,SAAAzpB,EAAAypB,SACAphB,OAAArI,EAAAqI,OACAm9B,KAAAxlC,EAAAwlC,MAGAjlC,EAAA+H,OAAAtI,KASAstD,aAAA,WACA,IAAA/sD,EAAAjD,MAEA,IAAAi1B,EAAAS,OAAAzyB,EAAA,kBAIAvE,EAAA6B,OAAAP,UAAA8D,MAAA9D,KAAAiE,QASAgxB,EAAAS,OAAAzyB,EAAA,oBACAgyB,EAAAS,OAAAzyB,EAAA,iBAQAgtD,eAAA,WACA,IAAAhtD,EAAAjD,KAEA,QAAAi1B,EAAAS,OAAAzyB,EAAA,yBAIA,QAAAlC,EAAA,EAAA4J,EAAA1H,EAAA5C,KAAAC,SAAA+B,OAAkDtB,EAAA4J,IAAU5J,EAC5DkC,EAAAmtD,cAAArvD,GAGAk0B,EAAAS,OAAAzyB,EAAA,yBAQAmtD,cAAA,SAAAvwD,GACA,IAAAoD,EAAAjD,KACAE,EAAA+C,EAAA9C,eAAAN,GACAyT,GACApT,OACAL,UAGA,IAAAo1B,EAAAS,OAAAzyB,EAAA,uBAAAqQ,MAIApT,EAAAw/B,WAAAn/B,SAEA00B,EAAAS,OAAAzyB,EAAA,sBAAAqQ,MAGAtI,OAAA,SAAAtI,GACA,IAAAO,EAAAjD,KAEA0C,GAAA,kBAAAA,IAEAA,GACAypB,SAAAzpB,EACAwlC,KAAA10B,UAAA,KAIA,IAAA2Y,EAAAzpB,EAAAypB,SACA+b,EAAAxlC,EAAAwlC,KAEA,QAAAjT,EAAAS,OAAAzyB,EAAA,iBAIA,IAAAotD,EAAAptD,EAAAuB,QAAAsyB,UACA8Q,EAAA,SAAA9Q,GACA7B,EAAAS,OAAAzyB,EAAA,eACAxE,EAAAiG,SAAA2rD,KAAAzoB,YAAA9Q,GAAA7zB,IAGA,GAAAotD,IAAA,qBAAAlkC,GAAA,IAAAA,GAAA,qBAAAA,GAAA,IAAAkkC,EAAAlkC,UAAA,CACA,IAAA2K,EAAA,IAAAZ,GACAprB,UAAAqhB,GAAAkkC,EAAAlkC,UAAA,MACAphB,OAAArI,EAAAqI,QAAAslD,EAAAtlD,OAEAC,OAAA,SAAA/K,EAAAqwD,GACA,IAAAC,EAAA9xD,EAAAsM,OAAAq0C,QAAAkR,EAAAvlD,QACAF,EAAAylD,EAAAzlD,YACA2lD,EAAA3lD,EAAAylD,EAAAxlD,SAEA7K,EAAAwG,KAAA8pD,EAAAC,KAAA3lD,IAGAI,oBAAAolD,EAAA1oB,WACAz8B,oBAAA08B,IAGAE,EAAAG,aAAAhlC,EAAA6zB,EAAA3K,EAAA+b,QAEAjlC,EAAAwD,OAGAmhC,EAAA,IAAA1R,GAA8BprB,SAAA,EAAA7K,MAAAgD,KAG9B,OAAAA,IAGAwD,KAAA,SAAAqO,GACA,IAAA7R,EAAAjD,KAEAiD,EAAAsuB,QAEA9yB,EAAA4sB,cAAAvW,KACAA,EAAA,GAGA7R,EAAA4R,WAAAC,GAEA7R,EAAAa,OAAA,GAAAb,EAAAgB,QAAA,IAIA,IAAAgxB,EAAAS,OAAAzyB,EAAA,cAAA6R,MAKArW,EAAAsH,KAAA9C,EAAAkmC,MAAA,SAAAqC,GACAA,EAAA/kC,KAAAxD,EAAAsN,YACItN,GAEJA,EAAA+J,OACA/J,EAAA+J,MAAAvG,OAGAxD,EAAAwtD,aAAA37C,GACA7R,EAAAytD,aAAA57C,GAEAmgB,EAAAS,OAAAzyB,EAAA,aAAA6R,MAMAD,WAAA,SAAAC,GAGA,IAFA,IAAA7R,EAAAjD,KAEAe,EAAA,EAAA4J,GAAA1H,EAAA5C,KAAAC,cAAA+B,OAA0DtB,EAAA4J,IAAU5J,EACpEkC,EAAA7B,iBAAAL,IACAkC,EAAA9C,eAAAY,GAAA2+B,WAAA7qB,WAAAC,GAIA7R,EAAAukD,QAAA3yC,WAAAC,IAQA27C,aAAA,SAAA37C,GACA,IAAA7R,EAAAjD,KAEA,QAAAi1B,EAAAS,OAAAzyB,EAAA,sBAAA6R,IAAA,CAKA,QAAA/T,GAAAkC,EAAA5C,KAAAC,cAAA+B,OAAA,EAAoDtB,GAAA,IAAQA,EAC5DkC,EAAA7B,iBAAAL,IACAkC,EAAA0tD,YAAA5vD,EAAA+T,GAIAmgB,EAAAS,OAAAzyB,EAAA,qBAAA6R,MAQA67C,YAAA,SAAA9wD,EAAAiV,GACA,IAAA7R,EAAAjD,KACAE,EAAA+C,EAAA9C,eAAAN,GACAyT,GACApT,OACAL,QACAiV,gBAGA,IAAAmgB,EAAAS,OAAAzyB,EAAA,qBAAAqQ,MAIApT,EAAAw/B,WAAAj5B,KAAAqO,GAEAmgB,EAAAS,OAAAzyB,EAAA,oBAAAqQ,MAQAo9C,aAAA,SAAA57C,GACA,IAAA7R,EAAAjD,KACAwnD,EAAAvkD,EAAAukD,QACAl0C,GACAk0C,UACA1yC,gBAGA,IAAAmgB,EAAAS,OAAAzyB,EAAA,qBAAAqQ,MAIAk0C,EAAA/gD,OAEAwuB,EAAAS,OAAAzyB,EAAA,oBAAAqQ,MAKAs9C,kBAAA,SAAAjxD,GACA,OAAAy2B,EAAAqa,MAAAC,OAAA1wC,KAAAL,IAGAkxD,mBAAA,SAAAlxD,GACA,OAAAy2B,EAAAqa,MAAAxvC,MAAAjB,KAAAL,GAA4CiwC,WAAA,KAG5CkhB,mBAAA,SAAAnxD,GACA,OAAAy2B,EAAAqa,MAAA,UAAAzwC,KAAAL,GAAgDiwC,WAAA,KAGhD0b,0BAAA,SAAA3rD,EAAAmM,EAAAtH,GACA,IAAAyO,EAAAmjB,EAAAqa,MAAA3kC,GACA,0BAAAmH,EACAA,EAAAjT,KAAAL,EAAA6E,OAMAusD,kBAAA,SAAApxD,GACA,OAAAy2B,EAAAqa,MAAA3vC,QAAAd,KAAAL,GAA8CiwC,WAAA,KAG9CzvC,eAAA,SAAAL,GACA,IAAAmD,EAAAjD,KACAc,EAAAmC,EAAA5C,KAAAC,SAAAR,GACAgB,EAAAkwD,QACAlwD,EAAAkwD,UAGA,IAAA9wD,EAAAY,EAAAkwD,MAAA/tD,EAAAb,IAaA,OAZAlC,IACAA,EAAAY,EAAAkwD,MAAA/tD,EAAAb,KACAwG,KAAA,KACAvI,QACAS,QAAA,KACA4+B,WAAA,KACAt/B,OAAA,KACA0O,QAAA,KACA5B,QAAA,OAIAhN,GAGA04B,uBAAA,WAEA,IADA,IAAAxjB,EAAA,EACArU,EAAA,EAAA4J,EAAA3K,KAAAK,KAAAC,SAAA+B,OAAoDtB,EAAA4J,IAAU5J,EAC9Df,KAAAoB,iBAAAL,IACAqU,IAGA,OAAAA,GAGAhU,iBAAA,SAAAtB,GACA,IAAAI,EAAAF,KAAAG,eAAAL,GAIA,yBAAAI,EAAAE,QAAAF,EAAAE,QAAAJ,KAAAK,KAAAC,SAAAR,GAAAM,QAGA6wD,eAAA,WACA,OAAAjxD,KAAAwE,QAAAtC,eAAAlC,OAMA6vD,mBAAA,SAAA/vD,GACA,IAAAsC,EAAApC,KAAAoC,GACAtB,EAAAd,KAAAK,KAAAC,SAAAR,GACAI,EAAAY,EAAAkwD,OAAAlwD,EAAAkwD,MAAA5uD,GAEAlC,IACAA,EAAAw/B,WAAAtrB,iBACAtT,EAAAkwD,MAAA5uD,KAIAgS,QAAA,WACA,IAEArT,EAAA4J,EAFA1H,EAAAjD,KACA6H,EAAA5E,EAAA4E,OAMA,IAHA5E,EAAAwrD,OAGA1tD,EAAA,EAAA4J,EAAA1H,EAAA5C,KAAAC,SAAA+B,OAA8CtB,EAAA4J,IAAU5J,EACxDkC,EAAA4sD,mBAAA9uD,GAGA8G,IACA5E,EAAAiuD,eACAzyD,EAAAoJ,OAAA0pB,MAAAtuB,GACAozB,EAAA2W,eAAA/pC,EAAA6B,KACA7B,EAAA4E,OAAA,KACA5E,EAAA6B,IAAA,MAGAmwB,EAAAS,OAAAzyB,EAAA,kBAEAiJ,EAAAkiD,UAAAnrD,EAAAb,KAGA+uD,cAAA,WACA,OAAAnxD,KAAA6H,OAAAupD,UAAA19C,MAAA1T,KAAA6H,OAAA2L,YAGAg7C,YAAA,WACA,IAAAvrD,EAAAjD,KACAiD,EAAAukD,QAAA,IAAAjxB,GACAhiB,OAAAtR,EACAouD,eAAApuD,EACAoR,MAAApR,EAAA5C,KACAqgC,SAAAz9B,EAAAuB,QAAA6yB,UACIp0B,IAMJqrD,WAAA,WACA,IAAArrD,EAAAjD,KACA4S,EAAA3P,EAAAquD,cACA5+C,EAAA,WACAzP,EAAAsuD,aAAA79C,MAAAzQ,EAAAuQ,YAGA/U,EAAAsH,KAAA9C,EAAAuB,QAAAknD,OAAA,SAAA9iD,GACAytB,EAAA4W,iBAAAhqC,EAAA2F,EAAA8J,GACAE,EAAAhK,GAAA8J,IAKAzP,EAAAuB,QAAA+mD,aACA74C,EAAA,WACAzP,EAAAsrD,UAGAl4B,EAAA4W,iBAAAhqC,EAAA,SAAAyP,GACAE,EAAA27C,OAAA77C,IAOAw+C,aAAA,WACA,IAAAjuD,EAAAjD,KACA4S,EAAA3P,EAAAquD,WACA1+C,WAIA3P,EAAAquD,WACA7yD,EAAAsH,KAAA6M,EAAA,SAAAF,EAAA9J,GACAytB,EAAA6W,oBAAAjqC,EAAA2F,EAAA8J,OAIA8+C,iBAAA,SAAA7qD,EAAAmF,EAAAkhB,GACA,IACAtb,EAAA3Q,EAAA4J,EADAsI,EAAA+Z,EAAA,mCAGA,IAAAjsB,EAAA,EAAA4J,EAAAhE,EAAAtE,OAAsCtB,EAAA4J,IAAU5J,EAChD2Q,EAAA/K,EAAA5F,GACA2Q,GACA1R,KAAAG,eAAAuR,EAAAnE,eAAAmyB,WAAAzsB,GAAAvB,IAQA6/C,aAAA,SAAA5xD,GACA,IAAAsD,EAAAjD,KACAwnD,EAAAvkD,EAAAukD,QAEA,QAAAvyB,EAAAS,OAAAzyB,EAAA,eAAAtD,IAAA,CAKAsD,EAAAorD,iBAAA,EACAprD,EAAAktD,iBAAA,KAEA,IAAAtnD,EAAA5F,EAAA0F,YAAAhJ,GAKA6nD,IACA3+C,EAAA2+C,EAAAzwC,OACAywC,EAAA7+C,YAAAhJ,GACAkJ,EAAA2+C,EAAA7+C,YAAAhJ,IAGAs1B,EAAAS,OAAAzyB,EAAA,cAAAtD,IAEA,IAAA8xD,EAAAxuD,EAAAktD,iBAmBA,OAlBAsB,EAEAxuD,EAAA+H,OAAAymD,GACI5oD,IAAA5F,EAAAklC,YAEJllC,EAAAwrD,OAIAxrD,EAAA+H,QACAmhB,SAAAlpB,EAAAuB,QAAAqH,MAAA8/C,kBACAzjB,MAAA,KAIAjlC,EAAAorD,iBAAA,EACAprD,EAAAktD,iBAAA,KAEAltD,IASA0F,YAAA,SAAAhJ,GACA,IAAAsD,EAAAjD,KACAwE,EAAAvB,EAAAuB,YACAktD,EAAAltD,EAAAqH,MACAhD,GAAA,EAqCA,OAnCA5F,EAAAitD,WAAAjtD,EAAAitD,eAGA,aAAAvwD,EAAAiJ,KACA3F,EAAAumD,UAEAvmD,EAAAumD,OAAAvmD,EAAAqoD,0BAAA3rD,EAAA+xD,EAAA5lD,KAAA4lD,GAKAjzD,EAAAiG,SAAAF,EAAAhE,SAAAgE,EAAAqH,MAAArL,SAAAb,EAAAsJ,OAAAhG,EAAAumD,QAAAvmD,GAEA,YAAAtD,EAAAiJ,MAAA,UAAAjJ,EAAAiJ,MACApE,EAAA9E,SAEA8E,EAAA9E,QAAAsJ,KAAA/F,EAAAtD,EAAAsJ,OAAAhG,EAAAumD,QAKAvmD,EAAAitD,WAAA7tD,QACAY,EAAAuuD,iBAAAvuD,EAAAitD,WAAAwB,EAAA5lD,MAAA,GAIA7I,EAAAumD,OAAAnnD,QAAAqvD,EAAA5lD,MACA7I,EAAAuuD,iBAAAvuD,EAAAumD,OAAAkI,EAAA5lD,MAAA,GAGAjD,GAAApK,EAAA60B,YAAArwB,EAAAumD,OAAAvmD,EAAAitD,YAGAjtD,EAAAitD,WAAAjtD,EAAAumD,OAEA3gD,KAWAqD,EAAAylD,WAAAzlD,yBC77BA,IAAA+a,EAAc1oB,EAAQ,QACtBgvC,EAAahvC,EAAQ,QAErBqzD,EAAA,SAAAxC,GACA,OAAAA,aAAAwC,EACAxC,EAEApvD,gBAAA4xD,GAIA5xD,KAAAwW,OAAA,EACAxW,KAAAyL,QACA2L,KAAA,OACA0B,KAAA,OACAW,KAAA,OACAY,KAAA,OACAU,MAAA,SACAgzB,MAAA,QAKA,kBAAAqhB,GACArnC,EAAAwlB,EAAAD,QAAA8hB,GACArnC,EACA/nB,KAAA8nB,UAAA,MAAAC,IACGA,EAAAwlB,EAAAO,QAAAshB,IACHpvD,KAAA8nB,UAAA,MAAAC,IACGA,EAAAwlB,EAAAS,OAAAohB,KACHpvD,KAAA8nB,UAAA,MAAAC,IAEE,kBAAAqnC,IACFrnC,EAAAqnC,OACAxkD,IAAAmd,EAAA3d,QAAAQ,IAAAmd,EAAAzD,IACAtkB,KAAA8nB,UAAA,MAAAC,QACGnd,IAAAmd,EAAAzd,QAAAM,IAAAmd,EAAA8pC,UACH7xD,KAAA8nB,UAAA,MAAAC,QACGnd,IAAAmd,EAAArQ,QAAA9M,IAAAmd,EAAAje,MACH9J,KAAA8nB,UAAA,MAAAC,QACGnd,IAAAmd,EAAAnQ,QAAAhN,IAAAmd,EAAA+pC,UACH9xD,KAAA8nB,UAAA,MAAAC,QACGnd,IAAAmd,EAAAjQ,QAAAlN,IAAAmd,EAAA7J,MACHle,KAAA8nB,UAAA,OAAAC,MAnCA,IAAA6pC,EAAAxC,GAcA,IAAArnC,GA0BA6pC,EAAAvmD,WACA6f,QAAA,WACA,OAAAlrB,KAAAwW,OAEAY,IAAA,WACA,OAAApX,KAAA+xD,SAAA,MAAAv+C,YAEAsF,IAAA,WACA,OAAA9Y,KAAA+xD,SAAA,MAAAv+C,YAEAiG,IAAA,WACA,OAAAzZ,KAAA+xD,SAAA,MAAAv+C,YAEA6G,IAAA,WACA,OAAAra,KAAA+xD,SAAA,MAAAv+C,YAEAuH,KAAA,WACA,OAAA/a,KAAA+xD,SAAA,OAAAv+C,YAGAw+C,SAAA,WACA,OAAAhyD,KAAAyL,OAAA2L,KAEA66C,SAAA,WACA,OAAAjyD,KAAAyL,OAAAqN,KAEAo5C,SAAA,WACA,OAAAlyD,KAAAyL,OAAAgO,KAEA04C,SAAA,WACA,IAAA1mD,EAAAzL,KAAAyL,OACA,WAAAA,EAAAsiC,MACAtiC,EAAA4O,IAAAgb,QAAA5pB,EAAAsiC,QAEAtiC,EAAA4O,KAEA+3C,UAAA,WACA,OAAApyD,KAAAyL,OAAAsP,MAEAs3C,UAAA,WACA,IAAA5mD,EAAAzL,KAAAyL,OACA,OAAAA,EAAA2L,IAAAie,QAAA5pB,EAAAsiC,SAEAukB,UAAA,WACA,IAAA7mD,EAAAzL,KAAAyL,OACA,OAAAA,EAAAqN,IAAAuc,QAAA5pB,EAAAsiC,SAEAA,MAAA,SAAA70B,GACA,YAAAtO,IAAAsO,EACAlZ,KAAAyL,OAAAsiC,OAEA/tC,KAAA8nB,UAAA,QAAA5O,GACAlZ,OAGAskB,IAAA,SAAApL,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAkH,MAAA,SAAAlH,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAqE,KAAA,SAAArE,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAs5C,IAAA,SAAAt5C,GAKA,OAJAA,IACAA,GAAA,IACAA,IAAA,MAAAA,KAEAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAu5C,WAAA,SAAAv5C,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEA24C,UAAA,SAAA34C,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAw5C,YAAA,SAAAx5C,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEA44C,UAAA,SAAA54C,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAy5C,UAAA,SAAAz5C,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEApP,MAAA,SAAAoP,GACA,OAAAlZ,KAAAuyD,WAAA,QAAAr5C,IAEAgF,KAAA,SAAAhF,GACA,OAAAlZ,KAAAuyD,WAAA,SAAAr5C,IAEAiJ,QAAA,SAAAjJ,GACA,OAAAlZ,KAAAuyD,WAAA,SAAAr5C,IAEA8M,OAAA,SAAA9M,GACA,OAAAlZ,KAAAuyD,WAAA,SAAAr5C,IAEAmE,MAAA,SAAAnE,GACA,OAAAlZ,KAAAuyD,WAAA,SAAAr5C,IAGAm1B,UAAA,WACA,OAAAd,EAAAc,UAAAruC,KAAAyL,OAAA2L,MAEAV,UAAA,WACA,OAAA62B,EAAA72B,UAAA1W,KAAAyL,OAAA2L,IAAApX,KAAAyL,OAAAsiC,QAEAQ,WAAA,WACA,OAAAhB,EAAAgB,WAAAvuC,KAAAyL,OAAA2L,IAAApX,KAAAyL,OAAAsiC,QAEAS,cAAA,WACA,OAAAjB,EAAAiB,cAAAxuC,KAAAyL,OAAA2L,IAAApX,KAAAyL,OAAAsiC,QAEAW,UAAA,WACA,OAAAnB,EAAAmB,UAAA1uC,KAAAyL,OAAAqN,IAAA9Y,KAAAyL,OAAAsiC,QAEAY,WAAA,WACA,OAAApB,EAAAoB,WAAA3uC,KAAAyL,OAAAqN,IAAA9Y,KAAAyL,OAAAsiC,QAEAa,UAAA,WACA,OAAArB,EAAAqB,UAAA5uC,KAAAyL,OAAA4O,IAAAra,KAAAyL,OAAAsiC,QAEAzxB,QAAA,WACA,OAAAixB,EAAAjxB,QAAAtc,KAAAyL,OAAA2L,IAAApX,KAAAyL,OAAAsiC,QAGA6kB,UAAA,WACA,IAAAx7C,EAAApX,KAAAyL,OAAA2L,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAGAy7C,WAAA,WAIA,IAFA,IAAAz7C,EAAApX,KAAAyL,OAAA2L,IACA07C,KACA/xD,EAAA,EAAiBA,EAAAqW,EAAA/U,OAAgBtB,IAAA,CACjC,IAAAgyD,EAAA37C,EAAArW,GAAA,IACA+xD,EAAA/xD,GAAAgyD,GAAA,OAAAA,EAAA,MAAA/zD,KAAAsZ,KAAAy6C,EAAA,iBAEA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAGAE,SAAA,SAAAC,GAEA,IAAAC,EAAAlzD,KAAA6yD,aACAM,EAAAF,EAAAJ,aACA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAEAA,EAAA,MAAAD,EAAA,MAGAE,MAAA,SAAAH,GACA,IAAAI,EAAArzD,KAAAgzD,SAAAC,GACA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAGAC,KAAA,WAEA,IAAAl8C,EAAApX,KAAAyL,OAAA2L,IACAm8C,GAAA,IAAAn8C,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,OAAAm8C,EAAA,KAGAC,MAAA,WACA,OAAAxzD,KAAAszD,QAGAG,OAAA,WAEA,IADA,IAAAr8C,KACArW,EAAA,EAAiBA,EAAA,EAAOA,IACxBqW,EAAArW,GAAA,IAAAf,KAAAyL,OAAA2L,IAAArW,GAGA,OADAf,KAAA8nB,UAAA,MAAA1Q,GACApX,MAGA0zD,QAAA,SAAAj5C,GACA,IAAA3B,EAAA9Y,KAAAyL,OAAAqN,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA2B,EACAza,KAAA8nB,UAAA,MAAAhP,GACA9Y,MAGAg5C,OAAA,SAAAv+B,GACA,IAAA3B,EAAA9Y,KAAAyL,OAAAqN,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA2B,EACAza,KAAA8nB,UAAA,MAAAhP,GACA9Y,MAGA+4C,SAAA,SAAAt+B,GACA,IAAA3B,EAAA9Y,KAAAyL,OAAAqN,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA2B,EACAza,KAAA8nB,UAAA,MAAAhP,GACA9Y,MAGA2zD,WAAA,SAAAl5C,GACA,IAAA3B,EAAA9Y,KAAAyL,OAAAqN,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAA2B,EACAza,KAAA8nB,UAAA,MAAAhP,GACA9Y,MAGA4zD,OAAA,SAAAn5C,GACA,IAAAJ,EAAAra,KAAAyL,OAAA4O,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAza,KAAA8nB,UAAA,MAAAzN,GACAra,MAGA6zD,QAAA,SAAAp5C,GACA,IAAAJ,EAAAra,KAAAyL,OAAA4O,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAI,EACAza,KAAA8nB,UAAA,MAAAzN,GACAra,MAGA8zD,UAAA,WACA,IAAA18C,EAAApX,KAAAyL,OAAA2L,IAEA8B,EAAA,GAAA9B,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADApX,KAAA8nB,UAAA,OAAA5O,QACAlZ,MAGA+zD,QAAA,SAAAt5C,GACA,IAAAszB,EAAA/tC,KAAAyL,OAAAsiC,MAEA,OADA/tC,KAAA8nB,UAAA,QAAAimB,IAAAtzB,GACAza,MAGAg0D,QAAA,SAAAv5C,GACA,IAAAszB,EAAA/tC,KAAAyL,OAAAsiC,MAEA,OADA/tC,KAAA8nB,UAAA,QAAAimB,IAAAtzB,GACAza,MAGAqyB,OAAA,SAAAqhB,GACA,IAAA56B,EAAA9Y,KAAAyL,OAAAqN,IACA05C,GAAA15C,EAAA,GAAA46B,GAAA,IAGA,OAFA56B,EAAA,GAAA05C,EAAA,MAAAA,IACAxyD,KAAA8nB,UAAA,MAAAhP,GACA9Y,MAOAyW,IAAA,SAAAw9C,EAAAx0D,GACA,IAAAy0D,EAAAl0D,KACAizD,EAAAgB,EACAp6C,OAAAjP,IAAAnL,EAAA,GAAAA,EAEAmY,EAAA,EAAAiC,EAAA,EACApB,EAAAy7C,EAAAnmB,QAAAklB,EAAAllB,QAEAomB,IAAAv8C,EAAAa,KAAA,EAAAb,KAAAa,IAAA,EAAAb,EAAAa,IAAA,KACA27C,EAAA,EAAAD,EAEA,OAAAn0D,KACAoX,IACA+8C,EAAAD,EAAA5vC,MAAA8vC,EAAAnB,EAAA3uC,MACA6vC,EAAAD,EAAA9zC,QAAAg0C,EAAAnB,EAAA7yC,QACA+zC,EAAAD,EAAA32C,OAAA62C,EAAAnB,EAAA11C,QAEAwwB,MAAAmmB,EAAAnmB,QAAAl0B,EAAAo5C,EAAAllB,SAAA,EAAAl0B,KAGAw6C,OAAA,WACA,OAAAr0D,KAAAoX,OAGAN,MAAA,WAKA,IAGAhN,EAAAlB,EAHAs8B,EAAA,IAAA0sB,EACA3jC,EAAAjuB,KAAAyL,OACA0K,EAAA+uB,EAAAz5B,OAGA,QAAA49B,KAAApb,EACAA,EAAA1X,eAAA8yB,KACAv/B,EAAAmkB,EAAAob,GACAzgC,KAAcspB,SAAAlpB,KAAAc,GACd,mBAAAlB,EACAuN,EAAAkzB,GAAAv/B,EAAAsJ,MAAA,GACK,oBAAAxK,EACLuN,EAAAkzB,GAAAv/B,EAEAukB,QAAAuqB,MAAA,0BAAA9uC,IAKA,OAAAo7B,IAIA0sB,EAAAvmD,UAAAipD,QACAl9C,KAAA,sBACA0B,KAAA,gCACAW,KAAA,4BACAY,KAAA,+BACAU,MAAA,oCAGA62C,EAAAvmD,UAAAkpD,OACAn9C,KAAA,aACA0B,KAAA,aACAW,KAAA,aACAY,KAAA,aACAU,MAAA,kBAGA62C,EAAAvmD,UAAAwc,UAAA,SAAAD,GAIA,IAHA,IAAAnc,EAAAzL,KAAAyL,OACAsc,KAEAhnB,EAAA,EAAgBA,EAAA6mB,EAAAvlB,OAAkBtB,IAClCgnB,EAAAH,EAAA1U,OAAAnS,IAAA0K,EAAAmc,GAAA7mB,GAQA,OALA,IAAA0K,EAAAsiC,QACAhmB,EAAAtP,EAAAhN,EAAAsiC,OAIAhmB,GAGA6pC,EAAAvmD,UAAAyc,UAAA,SAAAF,EAAAG,GACA,IAIAhnB,EAkCAyzD,EAtCA/oD,EAAAzL,KAAAyL,OACA6oD,EAAAt0D,KAAAs0D,OACAC,EAAAv0D,KAAAu0D,MACAxmB,EAAA,EAKA,GAFA/tC,KAAAwW,OAAA,EAEA,UAAAoR,EACAmmB,EAAAhmB,OACE,GAAAA,EAAA1lB,OAEFoJ,EAAAmc,GAAAG,EAAA3U,MAAA,EAAAwU,EAAAvlB,QACA0rC,EAAAhmB,EAAAH,EAAAvlB,aACE,QAAAuI,IAAAmd,EAAAH,EAAA1U,OAAA,KAEF,IAAAnS,EAAA,EAAaA,EAAA6mB,EAAAvlB,OAAkBtB,IAC/B0K,EAAAmc,GAAA7mB,GAAAgnB,EAAAH,EAAA1U,OAAAnS,IAGAgtC,EAAAhmB,EAAAtP,OACE,QAAA7N,IAAAmd,EAAAusC,EAAA1sC,GAAA,KAEF,IAAA6sC,EAAAH,EAAA1sC,GAEA,IAAA7mB,EAAA,EAAaA,EAAA6mB,EAAAvlB,OAAkBtB,IAC/B0K,EAAAmc,GAAA7mB,GAAAgnB,EAAA0sC,EAAA1zD,IAGAgtC,EAAAhmB,EAAAgmB,MAKA,GAFAtiC,EAAAsiC,MAAA/uC,KAAAwH,IAAA,EAAAxH,KAAA0R,IAAA,OAAA9F,IAAAmjC,EAAAtiC,EAAAsiC,UAEA,UAAAnmB,EACA,SAMA,IAAA7mB,EAAA,EAAYA,EAAA6mB,EAAAvlB,OAAkBtB,IAC9ByzD,EAAAx1D,KAAAwH,IAAA,EAAAxH,KAAA0R,IAAA6jD,EAAA3sC,GAAA7mB,GAAA0K,EAAAmc,GAAA7mB,KACA0K,EAAAmc,GAAA7mB,GAAA/B,KAAAyoB,MAAA+sC,GAIA,QAAAE,KAAAJ,EACAI,IAAA9sC,IACAnc,EAAAipD,GAAAztC,EAAAW,GAAA8sC,GAAAjpD,EAAAmc,KAIA,UAGAgqC,EAAAvmD,UAAA0mD,SAAA,SAAAnqC,EAAAtU,GACA,IAAAyU,EAAAzU,EAAA,GAEA,YAAA1I,IAAAmd,EAEA/nB,KAAA6nB,UAAAD,IAIA,kBAAAG,IACAA,EAAAxU,MAAAlI,UAAA+H,MAAApK,KAAAsK,IAGAtT,KAAA8nB,UAAAF,EAAAG,GACA/nB,OAGA4xD,EAAAvmD,UAAAknD,WAAA,SAAA3qC,EAAA/nB,EAAAqZ,GACA,IAAAy7C,EAAA30D,KAAAyL,OAAAmc,GACA,YAAAhd,IAAAsO,EAEAy7C,EAAA90D,GACEqZ,IAAAy7C,EAAA90D,GAEFG,MAIA20D,EAAA90D,GAAAqZ,EACAlZ,KAAA8nB,UAAAF,EAAA+sC,GAEA30D,OAGA,qBAAAmoB,SACAA,OAAAypC,SAGAtoD,EAAAC,QAAAqoD,qCCleAtoD,EAAAC,QAAA,SAAA2C,GAEAA,EAAAM,KAAA,SAAA9B,EAAAhI,GAGA,OAFAA,EAAAkG,KAAA,OAEA,IAAAsD,EAAAxB,EAAAhI,wCCLA,IAAA0lB,EAAY7pB,EAAQ,QACpB8pB,EAAmB9pB,EAAQ,QAE3B+K,EAAAC,QAAA,WAGA,IAAAqkB,GACAtuB,SAAA,UAGAs1D,EAAAxsC,EAAA5lB,QAMAqyD,UAAA,WACA,IAAAx0D,EAAAL,KAAAC,MAAAI,KACA,OAAAL,KAAAwE,QAAA/D,SAAAT,KAAA6D,eAAAxD,EAAAy0D,QAAAz0D,EAAA00D,UAAA10D,EAAAI,QAGA+tB,oBAAA,WACA,IAIA8Z,EAJArlC,EAAAjD,KACAS,EAAAwC,EAAA4xD,YACA5xD,EAAA+xD,SAAA,EACA/xD,EAAAgyD,SAAAx0D,EAAA4B,OAAA,OAGAuI,IAAA3H,EAAAuB,QAAA0nB,MAAAxb,MAEA43B,EAAA7nC,EAAAqT,QAAA7Q,EAAAuB,QAAA0nB,MAAAxb,KACAzN,EAAA+xD,UAAA,IAAA1sB,IAAArlC,EAAA+xD,eAGApqD,IAAA3H,EAAAuB,QAAA0nB,MAAA1lB,MAEA8hC,EAAA7nC,EAAAqT,QAAA7Q,EAAAuB,QAAA0nB,MAAA1lB,KACAvD,EAAAgyD,UAAA,IAAA3sB,IAAArlC,EAAAgyD,UAGAhyD,EAAAyN,IAAAjQ,EAAAwC,EAAA+xD,UACA/xD,EAAAuD,IAAA/F,EAAAwC,EAAAgyD,WAGAhmC,WAAA,WACA,IAAAhsB,EAAAjD,KACAS,EAAAwC,EAAA4xD,YAEA5xD,EAAAipB,MAAA,IAAAjpB,EAAA+xD,UAAA/xD,EAAAgyD,WAAAx0D,EAAA4B,OAAA,EAAA5B,IAAA2S,MAAAnQ,EAAA+xD,SAAA/xD,EAAAgyD,SAAA,IAGA1lC,iBAAA,SAAA1vB,EAAAC,GACA,IAAAmD,EAAAjD,KACAK,EAAA4C,EAAAhD,MAAAI,KACAwD,EAAAZ,EAAAY,eAEA,OAAAxD,EAAA00D,UAAAlxD,EACAZ,EAAAiN,cAAA7P,EAAAC,SAAAR,GAAAO,KAAAR,IAEAoD,EAAAipB,MAAArsB,EAAAoD,EAAA+xD,WAIA7lD,iBAAA,SAAArF,EAAAjK,GACA,IAOAq1D,EAPAjyD,EAAAjD,KACA8qB,EAAA7nB,EAAAuB,QAAAsmB,OAEAqqC,EAAAn2D,KAAAwH,IAAAvD,EAAAgyD,SAAA,EAAAhyD,EAAA+xD,UAAAlqC,EAAA,QAQA,QAHAlgB,IAAAd,GAAA,OAAAA,IACAorD,EAAAjyD,EAAAY,eAAAiG,EAAA5C,EAAA4C,EAAA3C,QAEAyD,IAAAsqD,QAAAtqD,IAAAd,GAAA1C,MAAAvH,GAAA,CACA,IAAAY,EAAAwC,EAAA4xD,YACA/qD,EAAAorD,GAAAprD,EACA,IAAA0rB,EAAA/0B,EAAAqT,QAAAhK,GACAjK,GAAA,IAAA21B,IAAA31B,EAGA,GAAAoD,EAAAY,eAAA,CACA,IAAAuxD,EAAAnyD,EAAAa,MAAAqxD,EACAE,EAAAD,GAAAv1D,EAAAoD,EAAA+xD,UAMA,OAJAlqC,IACAuqC,GAAAD,EAAA,GAGAnyD,EAAAc,KAAA/E,KAAAyoB,MAAA4tC,GAEA,IAAAC,EAAAryD,EAAAgB,OAAAkxD,EACAI,EAAAD,GAAAz1D,EAAAoD,EAAA+xD,UAMA,OAJAlqC,IACAyqC,GAAAD,EAAA,GAGAryD,EAAAiB,IAAAlF,KAAAyoB,MAAA8tC,IAEAjlC,gBAAA,SAAAzwB,GACA,OAAAG,KAAAmP,iBAAAnP,KAAAksB,MAAArsB,KAAAG,KAAAg1D,SAAA,OAEAxkC,iBAAA,SAAAC,GACA,IAEA3mB,EAFA7G,EAAAjD,KACA8qB,EAAA7nB,EAAAuB,QAAAsmB,OAEAqqC,EAAAn2D,KAAAwH,IAAAvD,EAAAo/B,OAAAhgC,QAAAyoB,EAAA,QACA0qC,EAAAvyD,EAAAY,eACA4xD,GAAAD,EAAAvyD,EAAAa,MAAAb,EAAAgB,QAAAkxD,EAcA,OAZA1kC,GAAA+kC,EAAAvyD,EAAAc,KAAAd,EAAAiB,IAEA4mB,IACA2F,GAAAglC,EAAA,GAIA3rD,EADA2mB,GAAA,EACA,EAEAzxB,KAAAyoB,MAAAgJ,EAAAglC,GAGA3rD,EAAA7G,EAAA+xD,UAEA3lD,aAAA,WACA,OAAArP,KAAAmE,UAIAkkB,EAAAiJ,kBAAA,WAAAsjC,EAAAhnC,wCCnIA,IAAAtvB,EAAeC,EAAQ,QACvBE,EAAcF,EAAQ,QACtB8pB,EAAmB9pB,EAAQ,QAC3B+3B,EAAY/3B,EAAQ,QAEpB+K,EAAAC,QAAA,SAAA2C,GAEA,IAAAyoB,EAAAr2B,EAAA0G,OAEA4oB,GACAvuB,SAAA,EAGAq2D,SAAA,EACAp2D,SAAA,YAEAytD,YACA1tD,SAAA,EACAwW,MAAA,qBACAhU,UAAA,GAGA27B,WACAwvB,UAAA,GAIA9gC,OAEAypC,mBAAA,EAGAC,cAAA,yBAGAC,iBAAA,EAGAC,iBAAA,EAEApxD,SAAA4xB,EAAA6D,WAAAC,QAGA6yB,aAEA5tD,SAAA,EAGAP,SAAA,GAGA4F,SAAA,SAAAzD,GACA,OAAAA,KAKA,SAAA80D,EAAA/oD,GACA,IAAAnI,EAAAmI,EAAAxI,QACA,OAAAK,EAAAkoD,WAAA1tD,SAAAwF,EAAAooD,YAAA5tD,QAAA2N,EAAA/M,MAAAI,KAAAI,OAAA4B,OAAA,EAGA,SAAA2zD,EAAAhpD,GACA,IAAAipD,EAAAjpD,EAAAxI,QAAAyoD,YACAnuD,EAAAL,EAAAwG,eAAAgxD,EAAAn3D,SAAA61B,EAAAzvB,iBACAC,EAAA1G,EAAAwG,eAAAgxD,EAAA9wD,UAAAwvB,EAAAvvB,kBACAC,EAAA5G,EAAAwG,eAAAgxD,EAAA5wD,WAAAsvB,EAAArvB,mBACAI,EAAAjH,EAAA+G,WAAA1G,EAAAqG,EAAAE,GAEA,OACA0E,KAAAjL,EACAgzB,MAAA3sB,EACA+7B,OAAA77B,EACAK,QAIA,SAAAwwD,EAAApxD,EAAAhG,EAAAmC,GACA,OAAAxC,EAAAmC,QAAAK,IAEA2W,EAAAnZ,EAAAuiC,YAAAl8B,IAAAY,KAAAzE,GACAoW,EAAApW,EAAAoB,OAAAvD,EAAA,KAAAmC,EAAAoB,OAAA,GAAAvD,IAKA8Y,EAAA9S,EAAAkB,YAAA/E,GAAA6C,MACAuT,EAAAvY,GAIA,SAAAq3D,EAAAtlC,EAAA7G,EAAAjgB,EAAA2G,EAAAlK,GACA,OAAAqqB,IAAAngB,GAAAmgB,IAAArqB,GAEA2O,MAAA6U,EAAAjgB,EAAA,EACAmuB,IAAAlO,EAAAjgB,EAAA,GAEG8mB,EAAAngB,GAAAmgB,EAAArqB,GAEH2O,MAAA6U,EAAAjgB,EAAA,EACAmuB,IAAAlO,IAKA7U,MAAA6U,EACAkO,IAAAlO,EAAAjgB,EAAA,GAOA,SAAAqsD,EAAAppD,GA6BA,IAYAjM,EAAAiuC,EAAA/O,EAZAo2B,EAAAL,EAAAhpD,GAIAspD,EAAAt3D,KAAA0R,IAAA1D,EAAA/I,OAAA,EAAA+I,EAAAlJ,MAAA,GACAyyD,GACAnsD,EAAA4C,EAAAlJ,MACAwG,EAAA,EACAH,EAAA6C,EAAA/I,OACAoG,EAAA,GAEAmsD,KAGAxpD,EAAAlI,IAAAY,KAAA2wD,EAAA3wD,KACAsH,EAAAypD,oBAEA,IAAAC,EAAAX,EAAA/oD,GACA,IAAAjM,EAAA,EAAaA,EAAA21D,EAAgB31D,IAAA,CAC7Bk/B,EAAAjzB,EAAA2pD,iBAAA51D,EAAAu1D,GACAtnB,EAAAknB,EAAAlpD,EAAAlI,IAAAuxD,EAAAtsD,KAAAiD,EAAAigD,YAAAlsD,IAAA,IACAiM,EAAAypD,iBAAA11D,GAAAiuC,EAGA,IAAA3L,EAAAr2B,EAAA4pD,cAAA71D,GACA8vB,EAAApyB,EAAAk1C,UAAAtQ,GAAA,IACAwzB,EAAAV,EAAAtlC,EAAAoP,EAAA/4B,EAAA8nC,EAAAp3B,EAAA,OACAk/C,EAAAX,EAAAtlC,EAAAoP,EAAA94B,EAAA6nC,EAAA33B,EAAA,QAEAw/C,EAAA1hD,MAAAohD,EAAAjsD,IACAisD,EAAAjsD,EAAAusD,EAAA1hD,MACAqhD,EAAAlsD,EAAA+4B,GAGAwzB,EAAA3+B,IAAAq+B,EAAAnsD,IACAmsD,EAAAnsD,EAAAysD,EAAA3+B,IACAs+B,EAAApsD,EAAAi5B,GAGAyzB,EAAA3hD,MAAAohD,EAAApsD,IACAosD,EAAApsD,EAAA2sD,EAAA3hD,MACAqhD,EAAArsD,EAAAk5B,GAGAyzB,EAAA5+B,IAAAq+B,EAAAlsD,IACAksD,EAAAlsD,EAAAysD,EAAA5+B,IACAs+B,EAAAnsD,EAAAg5B,GAIAr2B,EAAA+pD,cAAAT,EAAAC,EAAAC,GAMA,SAAA/yD,EAAAuJ,GACA,IAAAspD,EAAAt3D,KAAA0R,IAAA1D,EAAA/I,OAAA,EAAA+I,EAAAlJ,MAAA,GACAkJ,EAAAgqD,YAAAh4D,KAAAyoB,MAAA6uC,GACAtpD,EAAAiqD,eAAA,SAGA,SAAAC,EAAArmC,GACA,WAAAA,GAAA,MAAAA,EACA,SACGA,EAAA,IACH,OAGA,QAGA,SAAA3oB,EAAApD,EAAA9D,EAAA1B,EAAAR,GACA,GAAAL,EAAAmC,QAAAI,GAIA,IAHA,IAAAmG,EAAA7H,EAAA6H,EACA8xC,EAAA,IAAAn6C,EAEAiC,EAAA,EAAkBA,EAAAC,EAAAqB,SAAiBtB,EACnC+D,EAAAoD,SAAAlH,EAAAD,GAAAzB,EAAA4H,EAAAC,GACAA,GAAA8xC,OAGAn0C,EAAAoD,SAAAlH,EAAA1B,EAAA4H,EAAA5H,EAAA6H,GAIA,SAAAgwD,EAAAtmC,EAAAme,EAAA1vC,GACA,KAAAuxB,GAAA,MAAAA,EACAvxB,EAAA6H,GAAA6nC,EAAA33B,EAAA,GACGwZ,EAAA,KAAAA,EAAA,MACHvxB,EAAA6H,GAAA6nC,EAAA33B,GAIA,SAAA+/C,EAAApqD,GACA,IAAAlI,EAAAkI,EAAAlI,IACAD,EAAAmI,EAAAxI,QACA6yD,EAAAxyD,EAAAkoD,WACAuK,EAAAzyD,EAAAooD,YAEAnoD,EAAAjD,UAAAw1D,EAAAx1D,UACAiD,EAAA/C,YAAAs1D,EAAAxhD,MAEA,IAAA0hD,EAAAvqD,EAAA2gD,8BAAA9oD,EAAAqnB,MAAA1sB,QAAAwN,EAAA0D,IAAA1D,EAAAxG,KAGA6vD,EAAAL,EAAAhpD,GAEAlI,EAAAgB,aAAA,MAEA,QAAA/E,EAAAg1D,EAAA/oD,GAAA,EAAwCjM,GAAA,EAAQA,IAAA,CAChD,GAAAs2D,EAAAh4D,QAAA,CACA,IAAAm4D,EAAAxqD,EAAA2pD,iBAAA51D,EAAAw2D,GACAzyD,EAAAyD,YACAzD,EAAA0D,OAAAwE,EAAAmzB,QAAAnzB,EAAAozB,SACAt7B,EAAA2D,OAAA+uD,EAAAtwD,EAAAswD,EAAArwD,GACArC,EAAA4D,SACA5D,EAAA8sB,YAGA,GAAA0lC,EAAAj4D,QAAA,CAEA,IAAAo4D,EAAAzqD,EAAA2pD,iBAAA51D,EAAAw2D,EAAA,GAGAG,EAAAj5D,EAAA2P,sBAAAkpD,EAAAvwD,UAAAhG,EAAA4zB,EAAA3tB,kBACAlC,EAAAY,KAAA2wD,EAAA3wD,KACAZ,EAAA5D,UAAAw2D,EAEA,IAAAr0B,EAAAr2B,EAAA4pD,cAAA71D,GACA8vB,EAAApyB,EAAAk1C,UAAAtQ,GACAv+B,EAAAe,UAAAqxD,EAAArmC,GACAsmC,EAAAtmC,EAAA7jB,EAAAypD,iBAAA11D,GAAA02D,GACAvvD,EAAApD,EAAAkI,EAAAigD,YAAAlsD,IAAA,GAAA02D,EAAApB,EAAAtsD,QAKA,SAAA4tD,EAAA3qD,EAAAu2B,EAAA97B,EAAA5H,GACA,IAAAiF,EAAAkI,EAAAlI,IAIA,GAHAA,EAAA/C,YAAAtD,EAAA2P,sBAAAm1B,EAAA1tB,MAAAhW,EAAA,GACAiF,EAAAjD,UAAApD,EAAA2P,sBAAAm1B,EAAA1hC,UAAAhC,EAAA,GAEAmN,EAAAxI,QAAAg5B,UAAAwvB,SAEAloD,EAAAyD,YACAzD,EAAAwtB,IAAAtlB,EAAAmzB,QAAAnzB,EAAAozB,QAAA34B,EAAA,IAAAzI,KAAA4c,IACA9W,EAAA8sB,YACA9sB,EAAA4D,aACG,CAEH,IAAAguD,EAAAX,EAAA/oD,GAEA,OAAA0pD,EACA,OAGA5xD,EAAAyD,YACA,IAAA03B,EAAAjzB,EAAA2pD,iBAAA,EAAAlvD,GACA3C,EAAA0D,OAAAy3B,EAAA/4B,EAAA+4B,EAAA94B,GAEA,QAAApG,EAAA,EAAkBA,EAAA21D,EAAgB31D,IAClCk/B,EAAAjzB,EAAA2pD,iBAAA51D,EAAA0G,GACA3C,EAAA2D,OAAAw3B,EAAA/4B,EAAA+4B,EAAA94B,GAGArC,EAAA8sB,YACA9sB,EAAA4D,UAIA,SAAAkvD,EAAAC,GACA,OAAAp5D,EAAAyY,SAAA2gD,KAAA,EAGA,IAAAC,EAAA5rD,EAAAouB,gBAAA93B,QACAW,cAAA,WACA,IAAAF,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACAyrB,EAAAprB,EAAAqnB,MAEAjpB,EAAAa,MAAAb,EAAAH,SACAG,EAAAgB,OAAAhB,EAAAF,UACAE,EAAAk9B,QAAAnhC,KAAAyoB,MAAAxkB,EAAAa,MAAA,GACAb,EAAAm9B,QAAAphC,KAAAyoB,MAAAxkB,EAAAgB,OAAA,GAEA,IAAAL,EAAAnF,EAAAiS,KAAAzN,EAAAgB,OAAAhB,EAAAa,QACAotB,EAAAzyB,EAAAwG,eAAAgrB,EAAAnxB,SAAA61B,EAAAzvB,iBACAjC,EAAA+zD,YAAAnyD,EAAAxF,QAAAuE,EAAA,GAAAstB,EAAA,EAAAjB,EAAA4lC,kBAAAjyD,EAAA,GAEA4qB,oBAAA,WACA,IAAAvrB,EAAAjD,KACAC,EAAAgD,EAAAhD,MACAyQ,EAAAT,OAAA8/B,kBACAvpC,EAAAyJ,OAAAmjC,kBAEA30C,EAAAsH,KAAA9F,EAAAI,KAAAC,SAAA,SAAAQ,EAAAhB,GACA,GAAAG,EAAAmB,iBAAAtB,GAAA,CACA,IAAAI,EAAAD,EAAAE,eAAAL,GAEArB,EAAAsH,KAAAjF,EAAAT,KAAA,SAAAkuB,EAAA1uB,GACA,IAAAiK,GAAA7G,EAAAiN,cAAAqe,GACAnnB,MAAA0C,IAAA5J,EAAAG,KAAAR,GAAAO,SAIAsQ,EAAA1R,KAAA0R,IAAA5G,EAAA4G,GACAlK,EAAAxH,KAAAwH,IAAAsD,EAAAtD,SAKAvD,EAAAyN,QAAAT,OAAA8/B,kBAAA,EAAAr/B,EACAzN,EAAAuD,QAAAyJ,OAAAmjC,kBAAA,EAAA5sC,EAGAvD,EAAAk4B,0BAEAC,aAAA,WACA,IAAAnL,EAAAjwB,KAAAwE,QAAA0nB,MACAgF,EAAAzyB,EAAAwG,eAAAgrB,EAAAnxB,SAAA61B,EAAAzvB,iBACA,OAAAlG,KAAA0R,IAAAuf,EAAAqL,cAAArL,EAAAqL,cAAA,GAAAt8B,KAAA8sB,KAAA9rB,KAAAg3D,aAAA,IAAA9lC,MAEAd,qBAAA,WACA,IAAAntB,EAAAjD,KAEAkM,EAAAouB,gBAAAjvB,UAAA+kB,qBAAApnB,KAAA/F,GAGAA,EAAAgqD,YAAAhqD,EAAAhD,MAAAI,KAAAI,OAAAI,IAAAoC,EAAAuB,QAAAyoD,YAAAvoD,SAAAzB,IAEAssB,iBAAA,SAAA1vB,EAAAC,GACA,OAAAE,KAAAkQ,cAAAlQ,KAAAC,MAAAI,KAAAC,SAAAR,GAAAO,KAAAR,KAEA4D,IAAA,WACAzD,KAAAwE,QAAAyoD,YAAA5tD,QACA+2D,EAAAp2D,MAEAyD,EAAAzD,OAOA+2D,cAAA,SAAAT,EAAAC,EAAAC,GACA,IAAAvzD,EAAAjD,KACA+3D,EAAAxB,EAAAjsD,EAAAtL,KAAAkd,IAAAs6C,EAAAlsD,GACA0tD,EAAAh5D,KAAAwH,IAAA+vD,EAAAnsD,EAAAnH,EAAAa,MAAA,GAAA9E,KAAAkd,IAAAs6C,EAAApsD,GACA6tD,GAAA1B,EAAApsD,EAAAnL,KAAAid,IAAAu6C,EAAArsD,GACA+tD,GAAAl5D,KAAAwH,IAAA+vD,EAAAlsD,EAAApH,EAAAgB,OAAA,GAAAjF,KAAAid,IAAAu6C,EAAAnsD,GAEA0tD,EAAAH,EAAAG,GACAC,EAAAJ,EAAAI,GACAC,EAAAL,EAAAK,GACAC,EAAAN,EAAAM,GAEAj1D,EAAA+zD,YAAAh4D,KAAA0R,IACA1R,KAAAyoB,MAAA6uC,GAAAyB,EAAAC,GAAA,GACAh5D,KAAAyoB,MAAA6uC,GAAA2B,EAAAC,GAAA,IACAj1D,EAAAg0D,eAAAc,EAAAC,EAAAC,EAAAC,IAEAjB,eAAA,SAAAkB,EAAAC,EAAAC,EAAAC,GACA,IAAAr1D,EAAAjD,KACAu4D,EAAAt1D,EAAAa,MAAAs0D,EAAAn1D,EAAA+zD,YACAwB,EAAAL,EAAAl1D,EAAA+zD,YACAyB,EAAAJ,EAAAp1D,EAAA+zD,YACA0B,EAAAz1D,EAAAgB,OAAAq0D,EAAAr1D,EAAA+zD,YAEA/zD,EAAAk9B,QAAAnhC,KAAAyoB,OAAA+wC,EAAAD,GAAA,EAAAt1D,EAAAc,MACAd,EAAAm9B,QAAAphC,KAAAyoB,OAAAgxC,EAAAC,GAAA,EAAAz1D,EAAAiB,MAGA0yD,cAAA,SAAA/2D,GACA,IAAA84D,EAAA,EAAA35D,KAAA4c,GAAAm6C,EAAA/1D,MACAg4B,EAAAh4B,KAAAC,MAAAuE,SAAAxE,KAAAC,MAAAuE,QAAAwzB,WACAh4B,KAAAC,MAAAuE,QAAAwzB,WACA,EAEA4gC,EAAA5gC,EAAAh5B,KAAA4c,GAAA,MAGA,OAAA/b,EAAA84D,EAAAC,GAEAjL,8BAAA,SAAA7jD,GACA,IAAA7G,EAAAjD,KAEA,UAAA8J,EACA,SAIA,IAAA+uD,EAAA51D,EAAA+zD,aAAA/zD,EAAAuD,IAAAvD,EAAAyN,KACA,OAAAzN,EAAAuB,QAAA0nB,MAAA1sB,SACAyD,EAAAuD,IAAAsD,GAAA+uD,GAEA/uD,EAAA7G,EAAAyN,KAAAmoD,GAEAlC,iBAAA,SAAA92D,EAAAi5D,GACA,IAAA71D,EAAAjD,KACA+4D,EAAA91D,EAAA2zD,cAAA/2D,GAAAb,KAAA4c,GAAA,EACA,OACA1U,EAAAlI,KAAAyoB,MAAAzoB,KAAAid,IAAA88C,GAAAD,GAAA71D,EAAAk9B,QACAh5B,EAAAnI,KAAAyoB,MAAAzoB,KAAAkd,IAAA68C,GAAAD,GAAA71D,EAAAm9B,UAGAF,yBAAA,SAAArgC,EAAAiK,GACA,OAAA9J,KAAA22D,iBAAA92D,EAAAG,KAAA2tD,8BAAA7jD,KAGAg4C,gBAAA,WACA,IAAA7+C,EAAAjD,KACA0Q,EAAAzN,EAAAyN,IACAlK,EAAAvD,EAAAuD,IAEA,OAAAvD,EAAAi9B,yBAAA,EACAj9B,EAAA8+B,YAAA,EACArxB,EAAA,GAAAlK,EAAA,EAAAA,EACAkK,EAAA,GAAAlK,EAAA,EAAAkK,EACA,IAGAjK,KAAA,WACA,IAAAxD,EAAAjD,KACA6E,EAAA5B,EAAAuB,QACA++B,EAAA1+B,EAAA24B,UACAvN,EAAAprB,EAAAqnB,MACAjnB,EAAAxG,EAAAwG,eAEA,GAAAJ,EAAAxF,QAAA,CACA,IAAAyF,EAAA7B,EAAA6B,IACAkzB,EAAAh4B,KAAA42D,cAAA,GAGA1lC,EAAAjsB,EAAAgrB,EAAAnxB,SAAA61B,EAAAzvB,iBACA8zD,EAAA/zD,EAAAgrB,EAAA9qB,UAAAwvB,EAAAvvB,kBACA6zD,EAAAh0D,EAAAgrB,EAAA5qB,WAAAsvB,EAAArvB,mBACA4zD,EAAAz6D,EAAA+G,WAAA0rB,EAAA8nC,EAAAC,GAEAx6D,EAAAsH,KAAA9C,EAAAipB,MAAA,SAAAjrB,EAAApB,GAEA,GAAAA,EAAA,GAAAowB,EAAAzwB,QAAA,CACA,IAAA25D,EAAAl2D,EAAA0qD,8BAAA1qD,EAAAw4B,eAAA57B,IAOA,GAJA0jC,EAAAlkC,SAAA,IAAAQ,GACA83D,EAAA10D,EAAAsgC,EAAA41B,EAAAt5D,GAGAowB,EAAA5wB,QAAA,CACA,IAAAgmC,EAAApgC,EAAAgrB,EAAAlpB,UAAA4tB,EAAA3tB,kBAOA,GANAlC,EAAAY,KAAAwzD,EAEAp0D,EAAAuC,OACAvC,EAAAstB,UAAAnvB,EAAAk9B,QAAAl9B,EAAAm9B,SACAt7B,EAAAutB,OAAA2F,GAEA/H,EAAA0lC,kBAAA,CACA,IAAAxyB,EAAAr+B,EAAAkB,YAAA/E,GAAA6C,MACAgB,EAAA5D,UAAA+uB,EAAA2lC,cACA9wD,EAAAkD,UACAm7B,EAAA,EAAAlT,EAAA6lC,kBACAqD,EAAAjoC,EAAA,EAAAjB,EAAA4lC,iBACA1yB,EAAA,EAAAlT,EAAA6lC,iBACA5kC,EAAA,EAAAjB,EAAA4lC,kBAIA/wD,EAAAe,UAAA,SACAf,EAAAgB,aAAA,SACAhB,EAAA5D,UAAAmkC,EACAvgC,EAAAoD,SAAAjH,EAAA,GAAAk4D,GACAr0D,EAAAmD,eAKApD,EAAAkoD,WAAA1tD,SAAAwF,EAAAooD,YAAA5tD,UACA+3D,EAAAn0D,OAMAolB,EAAAiJ,kBAAA,eAAAwmC,EAAAlqC","file":"js/chunk-7203ed6d.d6cf85c1.js","sourcesContent":["'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\tlegend: {\n\t\tdisplay: true,\n\t\tposition: 'top',\n\t\tfullWidth: true,\n\t\treverse: false,\n\t\tweight: 1000,\n\n\t\t// a callback that will handle\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.datasetIndex;\n\t\t\tvar ci = this.chart;\n\t\t\tvar meta = ci.getDatasetMeta(index);\n\n\t\t\t// See controller.isDatasetVisible comment\n\t\t\tmeta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null;\n\n\t\t\t// We hid a dataset ... rerender the chart\n\t\t\tci.update();\n\t\t},\n\n\t\tonHover: null,\n\n\t\tlabels: {\n\t\t\tboxWidth: 40,\n\t\t\tpadding: 10,\n\t\t\t// Generates labels shown in the legend\n\t\t\t// Valid properties to return:\n\t\t\t// text : text to display\n\t\t\t// fillStyle : fill of coloured box\n\t\t\t// strokeStyle: stroke of coloured box\n\t\t\t// hidden : if this legend item refers to a hidden item\n\t\t\t// lineCap : cap style for line\n\t\t\t// lineDash\n\t\t\t// lineDashOffset :\n\t\t\t// lineJoin :\n\t\t\t// lineWidth :\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\treturn helpers.isArray(data.datasets) ? data.datasets.map(function(dataset, i) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: dataset.label,\n\t\t\t\t\t\tfillStyle: (!helpers.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0]),\n\t\t\t\t\t\thidden: !chart.isDatasetVisible(i),\n\t\t\t\t\t\tlineCap: dataset.borderCapStyle,\n\t\t\t\t\t\tlineDash: dataset.borderDash,\n\t\t\t\t\t\tlineDashOffset: dataset.borderDashOffset,\n\t\t\t\t\t\tlineJoin: dataset.borderJoinStyle,\n\t\t\t\t\t\tlineWidth: dataset.borderWidth,\n\t\t\t\t\t\tstrokeStyle: dataset.borderColor,\n\t\t\t\t\t\tpointStyle: dataset.pointStyle,\n\n\t\t\t\t\t\t// Below is extra data used for toggling the datasets\n\t\t\t\t\t\tdatasetIndex: i\n\t\t\t\t\t};\n\t\t\t\t}, this) : [];\n\t\t\t}\n\t\t}\n\t},\n\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\t\tfor (var i = 0; i < chart.data.datasets.length; i++) {\n\t\t\ttext.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\t\t\tif (chart.data.datasets[i].label) {\n\t\t\t\ttext.push(chart.data.datasets[i].label);\n\t\t\t}\n\t\t\ttext.push('</li>');\n\t\t}\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t}\n});\n\n/**\n * Helper function to get the box width based on the usePointStyle option\n * @param labelopts {Object} the label options on the legend\n * @param fontSize {Number} the label font size\n * @return {Number} width of the color box area\n */\nfunction getBoxWidth(labelOpts, fontSize) {\n\treturn labelOpts.usePointStyle ?\n\t\tfontSize * Math.SQRT2 :\n\t\tlabelOpts.boxWidth;\n}\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Legend = Element.extend({\n\n\tinitialize: function(config) {\n\t\thelpers.extend(this, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tthis.legendHitBoxes = [];\n\n\t\t// Are we in doughnut mode which has a different data type\n\t\tthis.doughnutMode = false;\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\t// Any function defined here is inherited by all legend types.\n\t// Any function can be extended by the legend type\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: function() {\n\t\tvar me = this;\n\t\tvar labelOpts = me.options.labels || {};\n\t\tvar legendItems = helpers.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n\t\tif (labelOpts.filter) {\n\t\t\tlegendItems = legendItems.filter(function(item) {\n\t\t\t\treturn labelOpts.filter(item, me.chart.data);\n\t\t\t});\n\t\t}\n\n\t\tif (me.options.reverse) {\n\t\t\tlegendItems.reverse();\n\t\t}\n\n\t\tme.legendItems = legendItems;\n\t},\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar display = opts.display;\n\n\t\tvar ctx = me.ctx;\n\n\t\tvar globalDefault = defaults.global;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\t// Reset hit boxes\n\t\tvar hitboxes = me.legendHitBoxes = [];\n\n\t\tvar minSize = me.minSize;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tif (isHorizontal) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = display ? 10 : 0;\n\t\t} else {\n\t\t\tminSize.width = display ? 10 : 0;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Increase sizes here\n\t\tif (display) {\n\t\t\tctx.font = labelFont;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// Labels\n\n\t\t\t\t// Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n\t\t\t\tvar lineWidths = me.lineWidths = [0];\n\t\t\t\tvar totalHeight = me.legendItems.length ? fontSize + (labelOpts.padding) : 0;\n\n\t\t\t\tctx.textAlign = 'left';\n\t\t\t\tctx.textBaseline = 'top';\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar width = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\tif (lineWidths[lineWidths.length - 1] + width + labelOpts.padding >= me.width) {\n\t\t\t\t\t\ttotalHeight += fontSize + (labelOpts.padding);\n\t\t\t\t\t\tlineWidths[lineWidths.length] = me.left;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: width,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\n\t\t\t\t\tlineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n\t\t\t\t});\n\n\t\t\t\tminSize.height += totalHeight;\n\n\t\t\t} else {\n\t\t\t\tvar vPadding = labelOpts.padding;\n\t\t\t\tvar columnWidths = me.columnWidths = [];\n\t\t\t\tvar totalWidth = labelOpts.padding;\n\t\t\t\tvar currentColWidth = 0;\n\t\t\t\tvar currentColHeight = 0;\n\t\t\t\tvar itemHeight = fontSize + vPadding;\n\n\t\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\t\t\tvar itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n\t\t\t\t\t// If too tall, go to new column\n\t\t\t\t\tif (currentColHeight + itemHeight > minSize.height) {\n\t\t\t\t\t\ttotalWidth += currentColWidth + labelOpts.padding;\n\t\t\t\t\t\tcolumnWidths.push(currentColWidth); // previous column width\n\n\t\t\t\t\t\tcurrentColWidth = 0;\n\t\t\t\t\t\tcurrentColHeight = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Get max width\n\t\t\t\t\tcurrentColWidth = Math.max(currentColWidth, itemWidth);\n\t\t\t\t\tcurrentColHeight += itemHeight;\n\n\t\t\t\t\t// Store the hitbox width and height here. Final position will be updated in `draw`\n\t\t\t\t\thitboxes[i] = {\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\twidth: itemWidth,\n\t\t\t\t\t\theight: fontSize\n\t\t\t\t\t};\n\t\t\t\t});\n\n\t\t\t\ttotalWidth += currentColWidth;\n\t\t\t\tcolumnWidths.push(currentColWidth);\n\t\t\t\tminSize.width += totalWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\n\t// Actually draw the legend on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar labelOpts = opts.labels;\n\t\tvar globalDefault = defaults.global;\n\t\tvar lineDefault = globalDefault.elements.line;\n\t\tvar legendWidth = me.width;\n\t\tvar lineWidths = me.lineWidths;\n\n\t\tif (opts.display) {\n\t\t\tvar ctx = me.ctx;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar fontColor = valueOrDefault(labelOpts.fontColor, globalDefault.defaultFontColor);\n\t\t\tvar fontSize = valueOrDefault(labelOpts.fontSize, globalDefault.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(labelOpts.fontStyle, globalDefault.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(labelOpts.fontFamily, globalDefault.defaultFontFamily);\n\t\t\tvar labelFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar cursor;\n\n\t\t\t// Canvas setup\n\t\t\tctx.textAlign = 'left';\n\t\t\tctx.textBaseline = 'middle';\n\t\t\tctx.lineWidth = 0.5;\n\t\t\tctx.strokeStyle = fontColor; // for strikethrough effect\n\t\t\tctx.fillStyle = fontColor; // render in correct colour\n\t\t\tctx.font = labelFont;\n\n\t\t\tvar boxWidth = getBoxWidth(labelOpts, fontSize);\n\t\t\tvar hitboxes = me.legendHitBoxes;\n\n\t\t\t// current position\n\t\t\tvar drawLegendBox = function(x, y, legendItem) {\n\t\t\t\tif (isNaN(boxWidth) || boxWidth <= 0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Set the ctx for the box\n\t\t\t\tctx.save();\n\n\t\t\t\tctx.fillStyle = valueOrDefault(legendItem.fillStyle, globalDefault.defaultColor);\n\t\t\t\tctx.lineCap = valueOrDefault(legendItem.lineCap, lineDefault.borderCapStyle);\n\t\t\t\tctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n\t\t\t\tctx.lineJoin = valueOrDefault(legendItem.lineJoin, lineDefault.borderJoinStyle);\n\t\t\t\tctx.lineWidth = valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth);\n\t\t\t\tctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, globalDefault.defaultColor);\n\t\t\t\tvar isLineWidthZero = (valueOrDefault(legendItem.lineWidth, lineDefault.borderWidth) === 0);\n\n\t\t\t\tif (ctx.setLineDash) {\n\t\t\t\t\t// IE 9 and 10 do not support line dash\n\t\t\t\t\tctx.setLineDash(valueOrDefault(legendItem.lineDash, lineDefault.borderDash));\n\t\t\t\t}\n\n\t\t\t\tif (opts.labels && opts.labels.usePointStyle) {\n\t\t\t\t\t// Recalculate x and y for drawPoint() because its expecting\n\t\t\t\t\t// x and y to be center of figure (instead of top left)\n\t\t\t\t\tvar radius = fontSize * Math.SQRT2 / 2;\n\t\t\t\t\tvar offSet = radius / Math.SQRT2;\n\t\t\t\t\tvar centerX = x + offSet;\n\t\t\t\t\tvar centerY = y + offSet;\n\n\t\t\t\t\t// Draw pointStyle as legend symbol\n\t\t\t\t\thelpers.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n\t\t\t\t} else {\n\t\t\t\t\t// Draw box as legend symbol\n\t\t\t\t\tif (!isLineWidthZero) {\n\t\t\t\t\t\tctx.strokeRect(x, y, boxWidth, fontSize);\n\t\t\t\t\t}\n\t\t\t\t\tctx.fillRect(x, y, boxWidth, fontSize);\n\t\t\t\t}\n\n\t\t\t\tctx.restore();\n\t\t\t};\n\t\t\tvar fillText = function(x, y, legendItem, textWidth) {\n\t\t\t\tvar halfFontSize = fontSize / 2;\n\t\t\t\tvar xLeft = boxWidth + halfFontSize + x;\n\t\t\t\tvar yMiddle = y + halfFontSize;\n\n\t\t\t\tctx.fillText(legendItem.text, xLeft, yMiddle);\n\n\t\t\t\tif (legendItem.hidden) {\n\t\t\t\t\t// Strikethrough the text if hidden\n\t\t\t\t\tctx.beginPath();\n\t\t\t\t\tctx.lineWidth = 2;\n\t\t\t\t\tctx.moveTo(xLeft, yMiddle);\n\t\t\t\t\tctx.lineTo(xLeft + textWidth, yMiddle);\n\t\t\t\t\tctx.stroke();\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Horizontal\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tif (isHorizontal) {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + ((legendWidth - lineWidths[0]) / 2),\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tcursor = {\n\t\t\t\t\tx: me.left + labelOpts.padding,\n\t\t\t\t\ty: me.top + labelOpts.padding,\n\t\t\t\t\tline: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar itemHeight = fontSize + labelOpts.padding;\n\t\t\thelpers.each(me.legendItems, function(legendItem, i) {\n\t\t\t\tvar textWidth = ctx.measureText(legendItem.text).width;\n\t\t\t\tvar width = boxWidth + (fontSize / 2) + textWidth;\n\t\t\t\tvar x = cursor.x;\n\t\t\t\tvar y = cursor.y;\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tif (x + width >= legendWidth) {\n\t\t\t\t\t\ty = cursor.y += itemHeight;\n\t\t\t\t\t\tcursor.line++;\n\t\t\t\t\t\tx = cursor.x = me.left + ((legendWidth - lineWidths[cursor.line]) / 2);\n\t\t\t\t\t}\n\t\t\t\t} else if (y + itemHeight > me.bottom) {\n\t\t\t\t\tx = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n\t\t\t\t\ty = cursor.y = me.top + labelOpts.padding;\n\t\t\t\t\tcursor.line++;\n\t\t\t\t}\n\n\t\t\t\tdrawLegendBox(x, y, legendItem);\n\n\t\t\t\thitboxes[i].left = x;\n\t\t\t\thitboxes[i].top = y;\n\n\t\t\t\t// Fill the actual label\n\t\t\t\tfillText(x, y, legendItem, textWidth);\n\n\t\t\t\tif (isHorizontal) {\n\t\t\t\t\tcursor.x += width + (labelOpts.padding);\n\t\t\t\t} else {\n\t\t\t\t\tcursor.y += itemHeight;\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @return {Boolean} true if a change occured\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar opts = me.options;\n\t\tvar type = e.type === 'mouseup' ? 'click' : e.type;\n\t\tvar changed = false;\n\n\t\tif (type === 'mousemove') {\n\t\t\tif (!opts.onHover) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (type === 'click') {\n\t\t\tif (!opts.onClick) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// Chart event already has relative position in it\n\t\tvar x = e.x;\n\t\tvar y = e.y;\n\n\t\tif (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n\t\t\t// See if we are touching one of the dataset boxes\n\t\t\tvar lh = me.legendHitBoxes;\n\t\t\tfor (var i = 0; i < lh.length; ++i) {\n\t\t\t\tvar hitBox = lh[i];\n\n\t\t\t\tif (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n\t\t\t\t\t// Touching an element\n\t\t\t\t\tif (type === 'click') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onClick.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (type === 'mousemove') {\n\t\t\t\t\t\t// use e.native for backwards compatibility\n\t\t\t\t\t\topts.onHover.call(me, e.native, me.legendItems[i]);\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\nfunction createNewLegendAndAttach(chart, legendOpts) {\n\tvar legend = new Legend({\n\t\tctx: chart.ctx,\n\t\toptions: legendOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, legend, legendOpts);\n\tlayouts.addBox(chart, legend);\n\tchart.legend = legend;\n}\n\nmodule.exports = {\n\tid: 'legend',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n\t * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Legend,\n\n\tbeforeInit: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\n\t\tif (legendOpts) {\n\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar legendOpts = chart.options.legend;\n\t\tvar legend = chart.legend;\n\n\t\tif (legendOpts) {\n\t\t\thelpers.mergeIf(legendOpts, defaults.global.legend);\n\n\t\t\tif (legend) {\n\t\t\t\tlayouts.configure(chart, legend, legendOpts);\n\t\t\t\tlegend.options = legendOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewLegendAndAttach(chart, legendOpts);\n\t\t\t}\n\t\t} else if (legend) {\n\t\t\tlayouts.removeBox(chart, legend);\n\t\t\tdelete chart.legend;\n\t\t}\n\t},\n\n\tafterEvent: function(chart, e) {\n\t\tvar legend = chart.legend;\n\t\tif (legend) {\n\t\t\tlegend.handleEvent(e);\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @alias Chart.helpers.options\n * @namespace\n */\nmodule.exports = {\n\t/**\n\t * Converts the given line height `value` in pixels for a specific font `size`.\n\t * @param {Number|String} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n\t * @param {Number} size - The font size (in pixels) used to resolve relative `value`.\n\t * @returns {Number} The effective line height in pixels (size * 1.2 if value is invalid).\n\t * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n\t * @since 2.7.0\n\t */\n\ttoLineHeight: function(value, size) {\n\t\tvar matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\t\tif (!matches || matches[1] === 'normal') {\n\t\t\treturn size * 1.2;\n\t\t}\n\n\t\tvalue = +matches[2];\n\n\t\tswitch (matches[3]) {\n\t\tcase 'px':\n\t\t\treturn value;\n\t\tcase '%':\n\t\t\tvalue /= 100;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\n\t\treturn size * value;\n\t},\n\n\t/**\n\t * Converts the given value into a padding object with pre-computed width/height.\n\t * @param {Number|Object} value - If a number, set the value to all TRBL component,\n\t *  else, if and object, use defined properties and sets undefined ones to 0.\n\t * @returns {Object} The padding values (top, right, bottom, left, width, height)\n\t * @since 2.7.0\n\t */\n\ttoPadding: function(value) {\n\t\tvar t, r, b, l;\n\n\t\tif (helpers.isObject(value)) {\n\t\t\tt = +value.top || 0;\n\t\t\tr = +value.right || 0;\n\t\t\tb = +value.bottom || 0;\n\t\t\tl = +value.left || 0;\n\t\t} else {\n\t\t\tt = r = b = l = +value || 0;\n\t\t}\n\n\t\treturn {\n\t\t\ttop: t,\n\t\t\tright: r,\n\t\t\tbottom: b,\n\t\t\tleft: l,\n\t\t\theight: t + b,\n\t\t\twidth: l + r\n\t\t};\n\t},\n\n\t/**\n\t * Evaluates the given `inputs` sequentially and returns the first defined value.\n\t * @param {Array[]} inputs - An array of values, falling back to the last value.\n\t * @param {Object} [context] - If defined and the current value is a function, the value\n\t * is called with `context` as first argument and the result becomes the new input.\n\t * @param {Number} [index] - If defined and the current value is an array, the value\n\t * at `index` become the new input.\n\t * @since 2.7.0\n\t */\n\tresolve: function(inputs, context, index) {\n\t\tvar i, ilen, value;\n\n\t\tfor (i = 0, ilen = inputs.length; i < ilen; ++i) {\n\t\t\tvalue = inputs[i];\n\t\t\tif (value === undefined) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (context !== undefined && typeof value === 'function') {\n\t\t\t\tvalue = value(context);\n\t\t\t}\n\t\t\tif (index !== undefined && helpers.isArray(value)) {\n\t\t\t\tvalue = value[index];\n\t\t\t}\n\t\t\tif (value !== undefined) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar Element = require('./core.element');\n\nvar exports = module.exports = Element.extend({\n\tchart: null, // the animation associated chart instance\n\tcurrentStep: 0, // the current animation step\n\tnumSteps: 60, // default number of steps\n\teasing: '', // the easing to use for this animation\n\trender: null, // render function used by the animation service\n\n\tonAnimationProgress: null, // user specified callback to fire on each step of the animation\n\tonAnimationComplete: null, // user specified callback to fire when the animation finishes\n});\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.Animation instead\n * @prop Chart.Animation#animationObject\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'animationObject', {\n\tget: function() {\n\t\treturn this;\n\t}\n});\n\n/**\n * Provided for backward compatibility, use Chart.Animation#chart instead\n * @prop Chart.Animation#chartInstance\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n */\nObject.defineProperty(exports.prototype, 'chartInstance', {\n\tget: function() {\n\t\treturn this.chart;\n\t},\n\tset: function(value) {\n\t\tthis.chart = value;\n\t}\n});\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = {\n\t/**\n\t * @private\n\t */\n\t_set: function(scope, values) {\n\t\treturn helpers.merge(this[scope] || (this[scope] = {}), values);\n\t}\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('line', {\n\tshowLines: true,\n\tspanGaps: false,\n\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\t\t\tid: 'x-axis-0'\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tfunction lineEnabled(dataset, options) {\n\t\treturn helpers.valueOrDefault(dataset.showLine, options.showLines);\n\t}\n\n\tChart.controllers.line = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data || [];\n\t\t\tvar options = me.chart.options;\n\t\t\tvar lineElementOptions = options.elements.line;\n\t\t\tvar scale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar i, ilen, custom;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar showLine = lineEnabled(dataset, options);\n\n\t\t\t// Update Line\n\t\t\tif (showLine) {\n\t\t\t\tcustom = line.custom || {};\n\n\t\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t\t}\n\n\t\t\t\t// Utility\n\t\t\t\tline._scale = scale;\n\t\t\t\tline._datasetIndex = me.index;\n\t\t\t\t// Data\n\t\t\t\tline._children = points;\n\t\t\t\t// Model\n\t\t\t\tline._model = {\n\t\t\t\t\t// Appearance\n\t\t\t\t\t// The default behavior of lines is to break at null values, according\n\t\t\t\t\t// to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n\t\t\t\t\t// This option gives lines the ability to span gaps\n\t\t\t\t\tspanGaps: dataset.spanGaps ? dataset.spanGaps : options.spanGaps,\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tsteppedLine: custom.steppedLine ? custom.steppedLine : helpers.valueOrDefault(dataset.steppedLine, lineElementOptions.stepped),\n\t\t\t\t\tcubicInterpolationMode: custom.cubicInterpolationMode ? custom.cubicInterpolationMode : helpers.valueOrDefault(dataset.cubicInterpolationMode, lineElementOptions.cubicInterpolationMode),\n\t\t\t\t};\n\n\t\t\t\tline.pivot();\n\t\t\t}\n\n\t\t\t// Update Points\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(points[i], i, reset);\n\t\t\t}\n\n\t\t\tif (showLine && line._model.tension !== 0) {\n\t\t\t\tme.updateBezierControlPoints();\n\t\t\t}\n\n\t\t\t// Now pivot the point for animation\n\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\tpoints[i].pivot();\n\t\t\t}\n\t\t},\n\n\t\tgetPointBackgroundColor: function(point, index) {\n\t\t\tvar backgroundColor = this.chart.options.elements.point.backgroundColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.backgroundColor) {\n\t\t\t\tbackgroundColor = custom.backgroundColor;\n\t\t\t} else if (dataset.pointBackgroundColor) {\n\t\t\t\tbackgroundColor = helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, backgroundColor);\n\t\t\t} else if (dataset.backgroundColor) {\n\t\t\t\tbackgroundColor = dataset.backgroundColor;\n\t\t\t}\n\n\t\t\treturn backgroundColor;\n\t\t},\n\n\t\tgetPointBorderColor: function(point, index) {\n\t\t\tvar borderColor = this.chart.options.elements.point.borderColor;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (custom.borderColor) {\n\t\t\t\tborderColor = custom.borderColor;\n\t\t\t} else if (dataset.pointBorderColor) {\n\t\t\t\tborderColor = helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, borderColor);\n\t\t\t} else if (dataset.borderColor) {\n\t\t\t\tborderColor = dataset.borderColor;\n\t\t\t}\n\n\t\t\treturn borderColor;\n\t\t},\n\n\t\tgetPointBorderWidth: function(point, index) {\n\t\t\tvar borderWidth = this.chart.options.elements.point.borderWidth;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.borderWidth)) {\n\t\t\t\tborderWidth = custom.borderWidth;\n\t\t\t} else if (!isNaN(dataset.pointBorderWidth) || helpers.isArray(dataset.pointBorderWidth)) {\n\t\t\t\tborderWidth = helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, borderWidth);\n\t\t\t} else if (!isNaN(dataset.borderWidth)) {\n\t\t\t\tborderWidth = dataset.borderWidth;\n\t\t\t}\n\n\t\t\treturn borderWidth;\n\t\t},\n\n\t\tgetPointRotation: function(point, index) {\n\t\t\tvar pointRotation = this.chart.options.elements.point.rotation;\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar custom = point.custom || {};\n\n\t\t\tif (!isNaN(custom.rotation)) {\n\t\t\t\tpointRotation = custom.rotation;\n\t\t\t} else if (!isNaN(dataset.pointRotation) || helpers.isArray(dataset.pointRotation)) {\n\t\t\t\tpointRotation = helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointRotation);\n\t\t\t}\n\t\t\treturn pointRotation;\n\t\t},\n\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar value = dataset.data[index];\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar pointOptions = me.chart.options.elements.point;\n\t\t\tvar x, y;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\tx = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n\t\t\ty = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex);\n\n\t\t\t// Utility\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._datasetIndex = datasetIndex;\n\t\t\tpoint._index = index;\n\n\t\t\t// Desired view properties\n\t\t\tpoint._model = {\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\t// Appearance\n\t\t\t\tradius: custom.radius || helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointOptions.radius),\n\t\t\t\tpointStyle: custom.pointStyle || helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointOptions.pointStyle),\n\t\t\t\trotation: me.getPointRotation(point, index),\n\t\t\t\tbackgroundColor: me.getPointBackgroundColor(point, index),\n\t\t\t\tborderColor: me.getPointBorderColor(point, index),\n\t\t\t\tborderWidth: me.getPointBorderWidth(point, index),\n\t\t\t\ttension: meta.dataset._model ? meta.dataset._model.tension : 0,\n\t\t\t\tsteppedLine: meta.dataset._model ? meta.dataset._model.steppedLine : false,\n\t\t\t\t// Tooltip\n\t\t\t\thitRadius: custom.hitRadius || helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointOptions.hitRadius)\n\t\t\t};\n\t\t},\n\n\t\tcalculatePointY: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar sumPos = 0;\n\t\t\tvar sumNeg = 0;\n\t\t\tvar i, ds, dsMeta;\n\n\t\t\tif (yScale.options.stacked) {\n\t\t\t\tfor (i = 0; i < datasetIndex; i++) {\n\t\t\t\t\tds = chart.data.datasets[i];\n\t\t\t\t\tdsMeta = chart.getDatasetMeta(i);\n\t\t\t\t\tif (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n\t\t\t\t\t\tvar stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\t\t\t\t\t\tif (stackedRightValue < 0) {\n\t\t\t\t\t\t\tsumNeg += stackedRightValue || 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsumPos += stackedRightValue || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar rightValue = Number(yScale.getRightValue(value));\n\t\t\t\tif (rightValue < 0) {\n\t\t\t\t\treturn yScale.getPixelForValue(sumNeg + rightValue);\n\t\t\t\t}\n\t\t\t\treturn yScale.getPixelForValue(sumPos + rightValue);\n\t\t\t}\n\n\t\t\treturn yScale.getPixelForValue(value);\n\t\t},\n\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar area = me.chart.chartArea;\n\t\t\tvar points = (meta.data || []);\n\t\t\tvar i, ilen, point, model, controlPoints;\n\n\t\t\t// Only consider points that are drawn in case the spanGaps option is used\n\t\t\tif (meta.dataset._model.spanGaps) {\n\t\t\t\tpoints = points.filter(function(pt) {\n\t\t\t\t\treturn !pt._model.skip;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction capControlPoint(pt, min, max) {\n\t\t\t\treturn Math.max(Math.min(pt, max), min);\n\t\t\t}\n\n\t\t\tif (meta.dataset._model.cubicInterpolationMode === 'monotone') {\n\t\t\t\thelpers.splineCurveMonotone(points);\n\t\t\t} else {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tpoint = points[i];\n\t\t\t\t\tmodel = point._model;\n\t\t\t\t\tcontrolPoints = helpers.splineCurve(\n\t\t\t\t\t\thelpers.previousItem(points, i)._model,\n\t\t\t\t\t\tmodel,\n\t\t\t\t\t\thelpers.nextItem(points, i)._model,\n\t\t\t\t\t\tmeta.dataset._model.tension\n\t\t\t\t\t);\n\t\t\t\t\tmodel.controlPointPreviousX = controlPoints.previous.x;\n\t\t\t\t\tmodel.controlPointPreviousY = controlPoints.previous.y;\n\t\t\t\t\tmodel.controlPointNextX = controlPoints.next.x;\n\t\t\t\t\tmodel.controlPointNextY = controlPoints.next.y;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.chart.options.elements.line.capBezierPoints) {\n\t\t\t\tfor (i = 0, ilen = points.length; i < ilen; ++i) {\n\t\t\t\t\tmodel = points[i]._model;\n\t\t\t\t\tmodel.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n\t\t\t\t\tmodel.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n\t\t\t\t\tmodel.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data || [];\n\t\t\tvar area = chart.chartArea;\n\t\t\tvar ilen = points.length;\n\t\t\tvar halfBorderWidth;\n\t\t\tvar i = 0;\n\n\t\t\tif (lineEnabled(me.getDataset(), chart.options)) {\n\t\t\t\thalfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n\n\t\t\t\thelpers.canvas.clipArea(chart.ctx, {\n\t\t\t\t\tleft: area.left,\n\t\t\t\t\tright: area.right,\n\t\t\t\t\ttop: area.top - halfBorderWidth,\n\t\t\t\t\tbottom: area.bottom + halfBorderWidth\n\t\t\t\t});\n\n\t\t\t\tmeta.dataset.draw();\n\n\t\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t\t}\n\n\t\t\t// Draw the points\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tpoints[i].draw(area);\n\t\t\t}\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth || helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t\tmodel.radius = custom.hoverRadius || helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t},\n\t});\n};\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nmodule.exports = function(Chart) {\n\n\tvar arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n\n\t/**\n\t * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n\t * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n\t * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n\t */\n\tfunction listenArrayEvents(array, listener) {\n\t\tif (array._chartjs) {\n\t\t\tarray._chartjs.listeners.push(listener);\n\t\t\treturn;\n\t\t}\n\n\t\tObject.defineProperty(array, '_chartjs', {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: {\n\t\t\t\tlisteners: [listener]\n\t\t\t}\n\t\t});\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tvar method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n\t\t\tvar base = array[key];\n\n\t\t\tObject.defineProperty(array, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: function() {\n\t\t\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\t\t\tvar res = base.apply(this, args);\n\n\t\t\t\t\thelpers.each(array._chartjs.listeners, function(object) {\n\t\t\t\t\t\tif (typeof object[method] === 'function') {\n\t\t\t\t\t\t\tobject[method].apply(object, args);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Removes the given array event listener and cleanup extra attached properties (such as\n\t * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n\t */\n\tfunction unlistenArrayEvents(array, listener) {\n\t\tvar stub = array._chartjs;\n\t\tif (!stub) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar listeners = stub.listeners;\n\t\tvar index = listeners.indexOf(listener);\n\t\tif (index !== -1) {\n\t\t\tlisteners.splice(index, 1);\n\t\t}\n\n\t\tif (listeners.length > 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tarrayEvents.forEach(function(key) {\n\t\t\tdelete array[key];\n\t\t});\n\n\t\tdelete array._chartjs;\n\t}\n\n\t// Base class for all dataset controllers (line, bar, etc)\n\tChart.DatasetController = function(chart, datasetIndex) {\n\t\tthis.initialize(chart, datasetIndex);\n\t};\n\n\thelpers.extend(Chart.DatasetController.prototype, {\n\n\t\t/**\n\t\t * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdatasetElementType: null,\n\n\t\t/**\n\t\t * Element type used to generate a meta data (e.g. Chart.element.Point).\n\t\t * @type {Chart.core.element}\n\t\t */\n\t\tdataElementType: null,\n\n\t\tinitialize: function(chart, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tme.chart = chart;\n\t\t\tme.index = datasetIndex;\n\t\t\tme.linkScales();\n\t\t\tme.addElements();\n\t\t},\n\n\t\tupdateIndex: function(datasetIndex) {\n\t\t\tthis.index = datasetIndex;\n\t\t},\n\n\t\tlinkScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\n\t\t\tif (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n\t\t\t\tmeta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n\t\t\t}\n\t\t\tif (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n\t\t\t\tmeta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n\t\t\t}\n\t\t},\n\n\t\tgetDataset: function() {\n\t\t\treturn this.chart.data.datasets[this.index];\n\t\t},\n\n\t\tgetMeta: function() {\n\t\t\treturn this.chart.getDatasetMeta(this.index);\n\t\t},\n\n\t\tgetScaleForId: function(scaleID) {\n\t\t\treturn this.chart.scales[scaleID];\n\t\t},\n\n\t\treset: function() {\n\t\t\tthis.update(true);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroy: function() {\n\t\t\tif (this._data) {\n\t\t\t\tunlistenArrayEvents(this._data, this);\n\t\t\t}\n\t\t},\n\n\t\tcreateMetaDataset: function() {\n\t\t\tvar me = this;\n\t\t\tvar type = me.datasetElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index\n\t\t\t});\n\t\t},\n\n\t\tcreateMetaData: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar type = me.dataElementType;\n\t\t\treturn type && new type({\n\t\t\t\t_chart: me.chart,\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index\n\t\t\t});\n\t\t},\n\n\t\taddElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data || [];\n\t\t\tvar metaData = meta.data;\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = data.length; i < ilen; ++i) {\n\t\t\t\tmetaData[i] = metaData[i] || me.createMetaData(i);\n\t\t\t}\n\n\t\t\tmeta.dataset = meta.dataset || me.createMetaDataset();\n\t\t},\n\n\t\taddElementAndReset: function(index) {\n\t\t\tvar element = this.createMetaData(index);\n\t\t\tthis.getMeta().data.splice(index, 0, element);\n\t\t\tthis.updateElement(element, index, true);\n\t\t},\n\n\t\tbuildOrUpdateElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar data = dataset.data || (dataset.data = []);\n\n\t\t\t// In order to correctly handle data addition/deletion animation (an thus simulate\n\t\t\t// real-time charts), we need to monitor these data modifications and synchronize\n\t\t\t// the internal meta data accordingly.\n\t\t\tif (me._data !== data) {\n\t\t\t\tif (me._data) {\n\t\t\t\t\t// This case happens when the user replaced the data array instance.\n\t\t\t\t\tunlistenArrayEvents(me._data, me);\n\t\t\t\t}\n\n\t\t\t\tlistenArrayEvents(data, me);\n\t\t\t\tme._data = data;\n\t\t\t}\n\n\t\t\t// Re-sync meta data in case the user replaced the data array or if we missed\n\t\t\t// any updates and so make sure that we handle number of datapoints changing.\n\t\t\tme.resyncElements();\n\t\t},\n\n\t\tupdate: helpers.noop,\n\n\t\ttransition: function(easingValue) {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].transition(easingValue);\n\t\t\t}\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.transition(easingValue);\n\t\t\t}\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar elements = meta.data || [];\n\t\t\tvar ilen = elements.length;\n\t\t\tvar i = 0;\n\n\t\t\tif (meta.dataset) {\n\t\t\t\tmeta.dataset.draw();\n\t\t\t}\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\telements[i].draw();\n\t\t\t}\n\t\t},\n\n\t\tremoveHoverStyle: function(element) {\n\t\t\thelpers.merge(element._model, element.$previousStyle || {});\n\t\t\tdelete element.$previousStyle;\n\t\t},\n\n\t\tsetHoverStyle: function(element) {\n\t\t\tvar dataset = this.chart.data.datasets[element._datasetIndex];\n\t\t\tvar index = element._index;\n\t\t\tvar custom = element.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar getHoverColor = helpers.getHoverColor;\n\t\t\tvar model = element._model;\n\n\t\t\telement.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth\n\t\t\t};\n\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : valueOrDefault(dataset.hoverBackgroundColor, index, getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : valueOrDefault(dataset.hoverBorderColor, index, getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : valueOrDefault(dataset.hoverBorderWidth, index, model.borderWidth);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tresyncElements: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar data = me.getDataset().data;\n\t\t\tvar numMeta = meta.data.length;\n\t\t\tvar numData = data.length;\n\n\t\t\tif (numData < numMeta) {\n\t\t\t\tmeta.data.splice(numData, numMeta - numData);\n\t\t\t} else if (numData > numMeta) {\n\t\t\t\tme.insertElements(numMeta, numData - numMeta);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinsertElements: function(start, count) {\n\t\t\tfor (var i = 0; i < count; ++i) {\n\t\t\t\tthis.addElementAndReset(start + i);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPush: function() {\n\t\t\tthis.insertElements(this.getDataset().data.length - 1, arguments.length);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataPop: function() {\n\t\t\tthis.getMeta().data.pop();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataShift: function() {\n\t\t\tthis.getMeta().data.shift();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataSplice: function(start, count) {\n\t\t\tthis.getMeta().data.splice(start, count);\n\t\t\tthis.insertElements(start, arguments.length - 2);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tonDataUnshift: function() {\n\t\t\tthis.insertElements(0, arguments.length);\n\t\t}\n\t});\n\n\tChart.DatasetController.extend = helpers.inherits;\n};\n","'use strict';\n\nvar color = require('chartjs-color');\nvar helpers = require('../helpers/index');\n\nfunction interpolate(start, view, model, ease) {\n\tvar keys = Object.keys(model);\n\tvar i, ilen, key, actual, origin, target, type, c0, c1;\n\n\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\tkey = keys[i];\n\n\t\ttarget = model[key];\n\n\t\t// if a value is added to the model after pivot() has been called, the view\n\t\t// doesn't contain it, so let's initialize the view to the target value.\n\t\tif (!view.hasOwnProperty(key)) {\n\t\t\tview[key] = target;\n\t\t}\n\n\t\tactual = view[key];\n\n\t\tif (actual === target || key[0] === '_') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!start.hasOwnProperty(key)) {\n\t\t\tstart[key] = actual;\n\t\t}\n\n\t\torigin = start[key];\n\n\t\ttype = typeof target;\n\n\t\tif (type === typeof origin) {\n\t\t\tif (type === 'string') {\n\t\t\t\tc0 = color(origin);\n\t\t\t\tif (c0.valid) {\n\t\t\t\t\tc1 = color(target);\n\t\t\t\t\tif (c1.valid) {\n\t\t\t\t\t\tview[key] = c1.mix(c0, ease).rgbString();\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (type === 'number' && isFinite(origin) && isFinite(target)) {\n\t\t\t\tview[key] = origin + (target - origin) * ease;\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\n\t\tview[key] = target;\n\t}\n}\n\nvar Element = function(configuration) {\n\thelpers.extend(this, configuration);\n\tthis.initialize.apply(this, arguments);\n};\n\nhelpers.extend(Element.prototype, {\n\n\tinitialize: function() {\n\t\tthis.hidden = false;\n\t},\n\n\tpivot: function() {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\tme._view = helpers.clone(me._model);\n\t\t}\n\t\tme._start = {};\n\t\treturn me;\n\t},\n\n\ttransition: function(ease) {\n\t\tvar me = this;\n\t\tvar model = me._model;\n\t\tvar start = me._start;\n\t\tvar view = me._view;\n\n\t\t// No animation -> No Transition\n\t\tif (!model || ease === 1) {\n\t\t\tme._view = model;\n\t\t\tme._start = null;\n\t\t\treturn me;\n\t\t}\n\n\t\tif (!view) {\n\t\t\tview = me._view = {};\n\t\t}\n\n\t\tif (!start) {\n\t\t\tstart = me._start = {};\n\t\t}\n\n\t\tinterpolate(start, view, model, ease);\n\n\t\treturn me;\n\t},\n\n\ttooltipPosition: function() {\n\t\treturn {\n\t\t\tx: this._model.x,\n\t\t\ty: this._model.y\n\t\t};\n\t},\n\n\thasValue: function() {\n\t\treturn helpers.isNumber(this._model.x) && helpers.isNumber(this._model.y);\n\t}\n});\n\nElement.extend = helpers.inherits;\n\nmodule.exports = Element;\n","/* MIT license */\n\nmodule.exports = {\n  rgb2hsl: rgb2hsl,\n  rgb2hsv: rgb2hsv,\n  rgb2hwb: rgb2hwb,\n  rgb2cmyk: rgb2cmyk,\n  rgb2keyword: rgb2keyword,\n  rgb2xyz: rgb2xyz,\n  rgb2lab: rgb2lab,\n  rgb2lch: rgb2lch,\n\n  hsl2rgb: hsl2rgb,\n  hsl2hsv: hsl2hsv,\n  hsl2hwb: hsl2hwb,\n  hsl2cmyk: hsl2cmyk,\n  hsl2keyword: hsl2keyword,\n\n  hsv2rgb: hsv2rgb,\n  hsv2hsl: hsv2hsl,\n  hsv2hwb: hsv2hwb,\n  hsv2cmyk: hsv2cmyk,\n  hsv2keyword: hsv2keyword,\n\n  hwb2rgb: hwb2rgb,\n  hwb2hsl: hwb2hsl,\n  hwb2hsv: hwb2hsv,\n  hwb2cmyk: hwb2cmyk,\n  hwb2keyword: hwb2keyword,\n\n  cmyk2rgb: cmyk2rgb,\n  cmyk2hsl: cmyk2hsl,\n  cmyk2hsv: cmyk2hsv,\n  cmyk2hwb: cmyk2hwb,\n  cmyk2keyword: cmyk2keyword,\n\n  keyword2rgb: keyword2rgb,\n  keyword2hsl: keyword2hsl,\n  keyword2hsv: keyword2hsv,\n  keyword2hwb: keyword2hwb,\n  keyword2cmyk: keyword2cmyk,\n  keyword2lab: keyword2lab,\n  keyword2xyz: keyword2xyz,\n\n  xyz2rgb: xyz2rgb,\n  xyz2lab: xyz2lab,\n  xyz2lch: xyz2lch,\n\n  lab2xyz: lab2xyz,\n  lab2rgb: lab2rgb,\n  lab2lch: lab2lch,\n\n  lch2lab: lch2lab,\n  lch2xyz: lch2xyz,\n  lch2rgb: lch2rgb\n}\n\n\nfunction rgb2hsl(rgb) {\n  var r = rgb[0]/255,\n      g = rgb[1]/255,\n      b = rgb[2]/255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, l;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g)/ delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  l = (min + max) / 2;\n\n  if (max == min)\n    s = 0;\n  else if (l <= 0.5)\n    s = delta / (max + min);\n  else\n    s = delta / (2 - max - min);\n\n  return [h, s * 100, l * 100];\n}\n\nfunction rgb2hsv(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      delta = max - min,\n      h, s, v;\n\n  if (max == 0)\n    s = 0;\n  else\n    s = (delta/max * 1000)/10;\n\n  if (max == min)\n    h = 0;\n  else if (r == max)\n    h = (g - b) / delta;\n  else if (g == max)\n    h = 2 + (b - r) / delta;\n  else if (b == max)\n    h = 4 + (r - g) / delta;\n\n  h = Math.min(h * 60, 360);\n\n  if (h < 0)\n    h += 360;\n\n  v = ((max / 255) * 1000) / 10;\n\n  return [h, s, v];\n}\n\nfunction rgb2hwb(rgb) {\n  var r = rgb[0],\n      g = rgb[1],\n      b = rgb[2],\n      h = rgb2hsl(rgb)[0],\n      w = 1/255 * Math.min(r, Math.min(g, b)),\n      b = 1 - 1/255 * Math.max(r, Math.max(g, b));\n\n  return [h, w * 100, b * 100];\n}\n\nfunction rgb2cmyk(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255,\n      c, m, y, k;\n\n  k = Math.min(1 - r, 1 - g, 1 - b);\n  c = (1 - r - k) / (1 - k) || 0;\n  m = (1 - g - k) / (1 - k) || 0;\n  y = (1 - b - k) / (1 - k) || 0;\n  return [c * 100, m * 100, y * 100, k * 100];\n}\n\nfunction rgb2keyword(rgb) {\n  return reverseKeywords[JSON.stringify(rgb)];\n}\n\nfunction rgb2xyz(rgb) {\n  var r = rgb[0] / 255,\n      g = rgb[1] / 255,\n      b = rgb[2] / 255;\n\n  // assume sRGB\n  r = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n  g = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n  b = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n  var x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n  var y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n  var z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n  return [x * 100, y *100, z * 100];\n}\n\nfunction rgb2lab(rgb) {\n  var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction rgb2lch(args) {\n  return lab2lch(rgb2lab(args));\n}\n\nfunction hsl2rgb(hsl) {\n  var h = hsl[0] / 360,\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      t1, t2, t3, rgb, val;\n\n  if (s == 0) {\n    val = l * 255;\n    return [val, val, val];\n  }\n\n  if (l < 0.5)\n    t2 = l * (1 + s);\n  else\n    t2 = l + s - l * s;\n  t1 = 2 * l - t2;\n\n  rgb = [0, 0, 0];\n  for (var i = 0; i < 3; i++) {\n    t3 = h + 1 / 3 * - (i - 1);\n    t3 < 0 && t3++;\n    t3 > 1 && t3--;\n\n    if (6 * t3 < 1)\n      val = t1 + (t2 - t1) * 6 * t3;\n    else if (2 * t3 < 1)\n      val = t2;\n    else if (3 * t3 < 2)\n      val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n    else\n      val = t1;\n\n    rgb[i] = val * 255;\n  }\n\n  return rgb;\n}\n\nfunction hsl2hsv(hsl) {\n  var h = hsl[0],\n      s = hsl[1] / 100,\n      l = hsl[2] / 100,\n      sv, v;\n\n  if(l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n  }\n\n  l *= 2;\n  s *= (l <= 1) ? l : 2 - l;\n  v = (l + s) / 2;\n  sv = (2 * s) / (l + s);\n  return [h, sv * 100, v * 100];\n}\n\nfunction hsl2hwb(args) {\n  return rgb2hwb(hsl2rgb(args));\n}\n\nfunction hsl2cmyk(args) {\n  return rgb2cmyk(hsl2rgb(args));\n}\n\nfunction hsl2keyword(args) {\n  return rgb2keyword(hsl2rgb(args));\n}\n\n\nfunction hsv2rgb(hsv) {\n  var h = hsv[0] / 60,\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      hi = Math.floor(h) % 6;\n\n  var f = h - Math.floor(h),\n      p = 255 * v * (1 - s),\n      q = 255 * v * (1 - (s * f)),\n      t = 255 * v * (1 - (s * (1 - f))),\n      v = 255 * v;\n\n  switch(hi) {\n    case 0:\n      return [v, t, p];\n    case 1:\n      return [q, v, p];\n    case 2:\n      return [p, v, t];\n    case 3:\n      return [p, q, v];\n    case 4:\n      return [t, p, v];\n    case 5:\n      return [v, p, q];\n  }\n}\n\nfunction hsv2hsl(hsv) {\n  var h = hsv[0],\n      s = hsv[1] / 100,\n      v = hsv[2] / 100,\n      sl, l;\n\n  l = (2 - s) * v;\n  sl = s * v;\n  sl /= (l <= 1) ? l : 2 - l;\n  sl = sl || 0;\n  l /= 2;\n  return [h, sl * 100, l * 100];\n}\n\nfunction hsv2hwb(args) {\n  return rgb2hwb(hsv2rgb(args))\n}\n\nfunction hsv2cmyk(args) {\n  return rgb2cmyk(hsv2rgb(args));\n}\n\nfunction hsv2keyword(args) {\n  return rgb2keyword(hsv2rgb(args));\n}\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nfunction hwb2rgb(hwb) {\n  var h = hwb[0] / 360,\n      wh = hwb[1] / 100,\n      bl = hwb[2] / 100,\n      ratio = wh + bl,\n      i, v, f, n;\n\n  // wh + bl cant be > 1\n  if (ratio > 1) {\n    wh /= ratio;\n    bl /= ratio;\n  }\n\n  i = Math.floor(6 * h);\n  v = 1 - bl;\n  f = 6 * h - i;\n  if ((i & 0x01) != 0) {\n    f = 1 - f;\n  }\n  n = wh + f * (v - wh);  // linear interpolation\n\n  switch (i) {\n    default:\n    case 6:\n    case 0: r = v; g = n; b = wh; break;\n    case 1: r = n; g = v; b = wh; break;\n    case 2: r = wh; g = v; b = n; break;\n    case 3: r = wh; g = n; b = v; break;\n    case 4: r = n; g = wh; b = v; break;\n    case 5: r = v; g = wh; b = n; break;\n  }\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction hwb2hsl(args) {\n  return rgb2hsl(hwb2rgb(args));\n}\n\nfunction hwb2hsv(args) {\n  return rgb2hsv(hwb2rgb(args));\n}\n\nfunction hwb2cmyk(args) {\n  return rgb2cmyk(hwb2rgb(args));\n}\n\nfunction hwb2keyword(args) {\n  return rgb2keyword(hwb2rgb(args));\n}\n\nfunction cmyk2rgb(cmyk) {\n  var c = cmyk[0] / 100,\n      m = cmyk[1] / 100,\n      y = cmyk[2] / 100,\n      k = cmyk[3] / 100,\n      r, g, b;\n\n  r = 1 - Math.min(1, c * (1 - k) + k);\n  g = 1 - Math.min(1, m * (1 - k) + k);\n  b = 1 - Math.min(1, y * (1 - k) + k);\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction cmyk2hsl(args) {\n  return rgb2hsl(cmyk2rgb(args));\n}\n\nfunction cmyk2hsv(args) {\n  return rgb2hsv(cmyk2rgb(args));\n}\n\nfunction cmyk2hwb(args) {\n  return rgb2hwb(cmyk2rgb(args));\n}\n\nfunction cmyk2keyword(args) {\n  return rgb2keyword(cmyk2rgb(args));\n}\n\n\nfunction xyz2rgb(xyz) {\n  var x = xyz[0] / 100,\n      y = xyz[1] / 100,\n      z = xyz[2] / 100,\n      r, g, b;\n\n  r = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n  g = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n  b = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n  // assume sRGB\n  r = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n    : r = (r * 12.92);\n\n  g = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n    : g = (g * 12.92);\n\n  b = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n    : b = (b * 12.92);\n\n  r = Math.min(Math.max(0, r), 1);\n  g = Math.min(Math.max(0, g), 1);\n  b = Math.min(Math.max(0, b), 1);\n\n  return [r * 255, g * 255, b * 255];\n}\n\nfunction xyz2lab(xyz) {\n  var x = xyz[0],\n      y = xyz[1],\n      z = xyz[2],\n      l, a, b;\n\n  x /= 95.047;\n  y /= 100;\n  z /= 108.883;\n\n  x = x > 0.008856 ? Math.pow(x, 1/3) : (7.787 * x) + (16 / 116);\n  y = y > 0.008856 ? Math.pow(y, 1/3) : (7.787 * y) + (16 / 116);\n  z = z > 0.008856 ? Math.pow(z, 1/3) : (7.787 * z) + (16 / 116);\n\n  l = (116 * y) - 16;\n  a = 500 * (x - y);\n  b = 200 * (y - z);\n\n  return [l, a, b];\n}\n\nfunction xyz2lch(args) {\n  return lab2lch(xyz2lab(args));\n}\n\nfunction lab2xyz(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      x, y, z, y2;\n\n  if (l <= 8) {\n    y = (l * 100) / 903.3;\n    y2 = (7.787 * (y / 100)) + (16 / 116);\n  } else {\n    y = 100 * Math.pow((l + 16) / 116, 3);\n    y2 = Math.pow(y / 100, 1/3);\n  }\n\n  x = x / 95.047 <= 0.008856 ? x = (95.047 * ((a / 500) + y2 - (16 / 116))) / 7.787 : 95.047 * Math.pow((a / 500) + y2, 3);\n\n  z = z / 108.883 <= 0.008859 ? z = (108.883 * (y2 - (b / 200) - (16 / 116))) / 7.787 : 108.883 * Math.pow(y2 - (b / 200), 3);\n\n  return [x, y, z];\n}\n\nfunction lab2lch(lab) {\n  var l = lab[0],\n      a = lab[1],\n      b = lab[2],\n      hr, h, c;\n\n  hr = Math.atan2(b, a);\n  h = hr * 360 / 2 / Math.PI;\n  if (h < 0) {\n    h += 360;\n  }\n  c = Math.sqrt(a * a + b * b);\n  return [l, c, h];\n}\n\nfunction lab2rgb(args) {\n  return xyz2rgb(lab2xyz(args));\n}\n\nfunction lch2lab(lch) {\n  var l = lch[0],\n      c = lch[1],\n      h = lch[2],\n      a, b, hr;\n\n  hr = h / 360 * 2 * Math.PI;\n  a = c * Math.cos(hr);\n  b = c * Math.sin(hr);\n  return [l, a, b];\n}\n\nfunction lch2xyz(args) {\n  return lab2xyz(lch2lab(args));\n}\n\nfunction lch2rgb(args) {\n  return lab2rgb(lch2lab(args));\n}\n\nfunction keyword2rgb(keyword) {\n  return cssKeywords[keyword];\n}\n\nfunction keyword2hsl(args) {\n  return rgb2hsl(keyword2rgb(args));\n}\n\nfunction keyword2hsv(args) {\n  return rgb2hsv(keyword2rgb(args));\n}\n\nfunction keyword2hwb(args) {\n  return rgb2hwb(keyword2rgb(args));\n}\n\nfunction keyword2cmyk(args) {\n  return rgb2cmyk(keyword2rgb(args));\n}\n\nfunction keyword2lab(args) {\n  return rgb2lab(keyword2rgb(args));\n}\n\nfunction keyword2xyz(args) {\n  return rgb2xyz(keyword2rgb(args));\n}\n\nvar cssKeywords = {\n  aliceblue:  [240,248,255],\n  antiquewhite: [250,235,215],\n  aqua: [0,255,255],\n  aquamarine: [127,255,212],\n  azure:  [240,255,255],\n  beige:  [245,245,220],\n  bisque: [255,228,196],\n  black:  [0,0,0],\n  blanchedalmond: [255,235,205],\n  blue: [0,0,255],\n  blueviolet: [138,43,226],\n  brown:  [165,42,42],\n  burlywood:  [222,184,135],\n  cadetblue:  [95,158,160],\n  chartreuse: [127,255,0],\n  chocolate:  [210,105,30],\n  coral:  [255,127,80],\n  cornflowerblue: [100,149,237],\n  cornsilk: [255,248,220],\n  crimson:  [220,20,60],\n  cyan: [0,255,255],\n  darkblue: [0,0,139],\n  darkcyan: [0,139,139],\n  darkgoldenrod:  [184,134,11],\n  darkgray: [169,169,169],\n  darkgreen:  [0,100,0],\n  darkgrey: [169,169,169],\n  darkkhaki:  [189,183,107],\n  darkmagenta:  [139,0,139],\n  darkolivegreen: [85,107,47],\n  darkorange: [255,140,0],\n  darkorchid: [153,50,204],\n  darkred:  [139,0,0],\n  darksalmon: [233,150,122],\n  darkseagreen: [143,188,143],\n  darkslateblue:  [72,61,139],\n  darkslategray:  [47,79,79],\n  darkslategrey:  [47,79,79],\n  darkturquoise:  [0,206,209],\n  darkviolet: [148,0,211],\n  deeppink: [255,20,147],\n  deepskyblue:  [0,191,255],\n  dimgray:  [105,105,105],\n  dimgrey:  [105,105,105],\n  dodgerblue: [30,144,255],\n  firebrick:  [178,34,34],\n  floralwhite:  [255,250,240],\n  forestgreen:  [34,139,34],\n  fuchsia:  [255,0,255],\n  gainsboro:  [220,220,220],\n  ghostwhite: [248,248,255],\n  gold: [255,215,0],\n  goldenrod:  [218,165,32],\n  gray: [128,128,128],\n  green:  [0,128,0],\n  greenyellow:  [173,255,47],\n  grey: [128,128,128],\n  honeydew: [240,255,240],\n  hotpink:  [255,105,180],\n  indianred:  [205,92,92],\n  indigo: [75,0,130],\n  ivory:  [255,255,240],\n  khaki:  [240,230,140],\n  lavender: [230,230,250],\n  lavenderblush:  [255,240,245],\n  lawngreen:  [124,252,0],\n  lemonchiffon: [255,250,205],\n  lightblue:  [173,216,230],\n  lightcoral: [240,128,128],\n  lightcyan:  [224,255,255],\n  lightgoldenrodyellow: [250,250,210],\n  lightgray:  [211,211,211],\n  lightgreen: [144,238,144],\n  lightgrey:  [211,211,211],\n  lightpink:  [255,182,193],\n  lightsalmon:  [255,160,122],\n  lightseagreen:  [32,178,170],\n  lightskyblue: [135,206,250],\n  lightslategray: [119,136,153],\n  lightslategrey: [119,136,153],\n  lightsteelblue: [176,196,222],\n  lightyellow:  [255,255,224],\n  lime: [0,255,0],\n  limegreen:  [50,205,50],\n  linen:  [250,240,230],\n  magenta:  [255,0,255],\n  maroon: [128,0,0],\n  mediumaquamarine: [102,205,170],\n  mediumblue: [0,0,205],\n  mediumorchid: [186,85,211],\n  mediumpurple: [147,112,219],\n  mediumseagreen: [60,179,113],\n  mediumslateblue:  [123,104,238],\n  mediumspringgreen:  [0,250,154],\n  mediumturquoise:  [72,209,204],\n  mediumvioletred:  [199,21,133],\n  midnightblue: [25,25,112],\n  mintcream:  [245,255,250],\n  mistyrose:  [255,228,225],\n  moccasin: [255,228,181],\n  navajowhite:  [255,222,173],\n  navy: [0,0,128],\n  oldlace:  [253,245,230],\n  olive:  [128,128,0],\n  olivedrab:  [107,142,35],\n  orange: [255,165,0],\n  orangered:  [255,69,0],\n  orchid: [218,112,214],\n  palegoldenrod:  [238,232,170],\n  palegreen:  [152,251,152],\n  paleturquoise:  [175,238,238],\n  palevioletred:  [219,112,147],\n  papayawhip: [255,239,213],\n  peachpuff:  [255,218,185],\n  peru: [205,133,63],\n  pink: [255,192,203],\n  plum: [221,160,221],\n  powderblue: [176,224,230],\n  purple: [128,0,128],\n  rebeccapurple: [102, 51, 153],\n  red:  [255,0,0],\n  rosybrown:  [188,143,143],\n  royalblue:  [65,105,225],\n  saddlebrown:  [139,69,19],\n  salmon: [250,128,114],\n  sandybrown: [244,164,96],\n  seagreen: [46,139,87],\n  seashell: [255,245,238],\n  sienna: [160,82,45],\n  silver: [192,192,192],\n  skyblue:  [135,206,235],\n  slateblue:  [106,90,205],\n  slategray:  [112,128,144],\n  slategrey:  [112,128,144],\n  snow: [255,250,250],\n  springgreen:  [0,255,127],\n  steelblue:  [70,130,180],\n  tan:  [210,180,140],\n  teal: [0,128,128],\n  thistle:  [216,191,216],\n  tomato: [255,99,71],\n  turquoise:  [64,224,208],\n  violet: [238,130,238],\n  wheat:  [245,222,179],\n  white:  [255,255,255],\n  whitesmoke: [245,245,245],\n  yellow: [255,255,0],\n  yellowgreen:  [154,205,50]\n};\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n  reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n}\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bar = function(context, config) {\n\t\tconfig.type = 'bar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar defaultColor = defaults.global.defaultColor;\n\ndefaults._set('global', {\n\telements: {\n\t\tpoint: {\n\t\t\tradius: 3,\n\t\t\tpointStyle: 'circle',\n\t\t\tbackgroundColor: defaultColor,\n\t\t\tborderColor: defaultColor,\n\t\t\tborderWidth: 1,\n\t\t\t// Hover\n\t\t\thitRadius: 1,\n\t\t\thoverRadius: 4,\n\t\t\thoverBorderWidth: 1\n\t\t}\n\t}\n});\n\nfunction xRange(mouseX) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius) : false;\n}\n\nfunction yRange(mouseY) {\n\tvar vm = this._view;\n\treturn vm ? (Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius) : false;\n}\n\nmodule.exports = Element.extend({\n\tinRange: function(mouseX, mouseY) {\n\t\tvar vm = this._view;\n\t\treturn vm ? ((Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2)) < Math.pow(vm.hitRadius + vm.radius, 2)) : false;\n\t},\n\n\tinLabelRange: xRange,\n\tinXRange: xRange,\n\tinYRange: yRange,\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\treturn Math.PI * Math.pow(this._view.radius, 2);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y,\n\t\t\tpadding: vm.radius + vm.borderWidth\n\t\t};\n\t},\n\n\tdraw: function(chartArea) {\n\t\tvar vm = this._view;\n\t\tvar model = this._model;\n\t\tvar ctx = this._chart.ctx;\n\t\tvar pointStyle = vm.pointStyle;\n\t\tvar rotation = vm.rotation;\n\t\tvar radius = vm.radius;\n\t\tvar x = vm.x;\n\t\tvar y = vm.y;\n\t\tvar errMargin = 1.01; // 1.01 is margin for Accumulated error. (Especially Edge, IE.)\n\n\t\tif (vm.skip) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Clipping for Points.\n\t\tif (chartArea === undefined || (model.x >= chartArea.left && chartArea.right * errMargin >= model.x && model.y >= chartArea.top && chartArea.bottom * errMargin >= model.y)) {\n\t\t\tctx.strokeStyle = vm.borderColor || defaultColor;\n\t\t\tctx.lineWidth = helpers.valueOrDefault(vm.borderWidth, defaults.global.elements.point.borderWidth);\n\t\t\tctx.fillStyle = vm.backgroundColor || defaultColor;\n\t\t\thelpers.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n\t\t}\n\t}\n});\n","var conversions = require(\"./conversions\");\n\nvar convert = function() {\n   return new Converter();\n}\n\nfor (var func in conversions) {\n  // export Raw versions\n  convert[func + \"Raw\"] =  (function(func) {\n    // accept array or plain args\n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      return conversions[func](arg);\n    }\n  })(func);\n\n  var pair = /(\\w+)2(\\w+)/.exec(func),\n      from = pair[1],\n      to = pair[2];\n\n  // export rgb2hsl and [\"rgb\"][\"hsl\"]\n  convert[from] = convert[from] || {};\n\n  convert[from][to] = convert[func] = (function(func) { \n    return function(arg) {\n      if (typeof arg == \"number\")\n        arg = Array.prototype.slice.call(arguments);\n      \n      var val = conversions[func](arg);\n      if (typeof val == \"string\" || val === undefined)\n        return val; // keyword\n\n      for (var i = 0; i < val.length; i++)\n        val[i] = Math.round(val[i]);\n      return val;\n    }\n  })(func);\n}\n\n\n/* Converter does lazy conversion and caching */\nvar Converter = function() {\n   this.convs = {};\n};\n\n/* Either get the values for a space or\n  set the values for a space, depending on args */\nConverter.prototype.routeSpace = function(space, args) {\n   var values = args[0];\n   if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n   }\n   // color.rgb(10, 10, 10)\n   if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);        \n   }\n\n   return this.setValues(space, values);\n};\n  \n/* Set the values for a space, invalidating cache */\nConverter.prototype.setValues = function(space, values) {\n   this.space = space;\n   this.convs = {};\n   this.convs[space] = values;\n   return this;\n};\n\n/* Get the values for a space. If there's already\n  a conversion for the space, fetch it, otherwise\n  compute it */\nConverter.prototype.getValues = function(space) {\n   var vals = this.convs[space];\n   if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n\n      this.convs[space] = vals;\n   }\n  return vals;\n};\n\n[\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function(space) {\n   Converter.prototype[space] = function(vals) {\n      return this.routeSpace(space, arguments);\n   }\n});\n\nmodule.exports = convert;","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Bubble = function(context, config) {\n\t\tconfig.type = 'bubble';\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/* global window: false */\n'use strict';\n\nvar moment = require('moment');\nmoment = typeof moment === 'function' ? moment : window.moment;\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\n// Integer constants are from the ES6 spec.\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n\nvar INTERVALS = {\n\tmillisecond: {\n\t\tcommon: true,\n\t\tsize: 1,\n\t\tsteps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n\t},\n\tsecond: {\n\t\tcommon: true,\n\t\tsize: 1000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\tminute: {\n\t\tcommon: true,\n\t\tsize: 60000,\n\t\tsteps: [1, 2, 5, 10, 15, 30]\n\t},\n\thour: {\n\t\tcommon: true,\n\t\tsize: 3600000,\n\t\tsteps: [1, 2, 3, 6, 12]\n\t},\n\tday: {\n\t\tcommon: true,\n\t\tsize: 86400000,\n\t\tsteps: [1, 2, 5]\n\t},\n\tweek: {\n\t\tcommon: false,\n\t\tsize: 604800000,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tmonth: {\n\t\tcommon: true,\n\t\tsize: 2.628e9,\n\t\tsteps: [1, 2, 3]\n\t},\n\tquarter: {\n\t\tcommon: false,\n\t\tsize: 7.884e9,\n\t\tsteps: [1, 2, 3, 4]\n\t},\n\tyear: {\n\t\tcommon: true,\n\t\tsize: 3.154e10\n\t}\n};\n\nvar UNITS = Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n\treturn a - b;\n}\n\nfunction arrayUnique(items) {\n\tvar hash = {};\n\tvar out = [];\n\tvar i, ilen, item;\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\titem = items[i];\n\t\tif (!hash[item]) {\n\t\t\thash[item] = true;\n\t\t\tout.push(item);\n\t\t}\n\t}\n\n\treturn out;\n}\n\n/**\n * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n * extremity (left + width or top + height). Note that it would be more optimized to directly\n * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n *\n * @param {Number[]} timestamps - timestamps sorted from lowest to highest.\n * @param {String} distribution - If 'linear', timestamps will be spread linearly along the min\n * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n * If 'series', timestamps will be positioned at the same distance from each other. In this\n * case, only timestamps that break the time linearity are registered, meaning that in the\n * best case, all timestamps are linear, the table contains only min and max.\n */\nfunction buildLookupTable(timestamps, min, max, distribution) {\n\tif (distribution === 'linear' || !timestamps.length) {\n\t\treturn [\n\t\t\t{time: min, pos: 0},\n\t\t\t{time: max, pos: 1}\n\t\t];\n\t}\n\n\tvar table = [];\n\tvar items = [min];\n\tvar i, ilen, prev, curr, next;\n\n\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\tcurr = timestamps[i];\n\t\tif (curr > min && curr < max) {\n\t\t\titems.push(curr);\n\t\t}\n\t}\n\n\titems.push(max);\n\n\tfor (i = 0, ilen = items.length; i < ilen; ++i) {\n\t\tnext = items[i + 1];\n\t\tprev = items[i - 1];\n\t\tcurr = items[i];\n\n\t\t// only add points that breaks the scale linearity\n\t\tif (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n\t\t\ttable.push({time: curr, pos: i / (ilen - 1)});\n\t\t}\n\t}\n\n\treturn table;\n}\n\n// @see adapted from http://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\nfunction lookup(table, key, value) {\n\tvar lo = 0;\n\tvar hi = table.length - 1;\n\tvar mid, i0, i1;\n\n\twhile (lo >= 0 && lo <= hi) {\n\t\tmid = (lo + hi) >> 1;\n\t\ti0 = table[mid - 1] || null;\n\t\ti1 = table[mid];\n\n\t\tif (!i0) {\n\t\t\t// given value is outside table (before first item)\n\t\t\treturn {lo: null, hi: i1};\n\t\t} else if (i1[key] < value) {\n\t\t\tlo = mid + 1;\n\t\t} else if (i0[key] > value) {\n\t\t\thi = mid - 1;\n\t\t} else {\n\t\t\treturn {lo: i0, hi: i1};\n\t\t}\n\t}\n\n\t// given value is outside table (after last item)\n\treturn {lo: i1, hi: null};\n}\n\n/**\n * Linearly interpolates the given source `value` using the table items `skey` values and\n * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n * index [0, 1] or [n - 1, n] are used for the interpolation.\n */\nfunction interpolate(table, skey, sval, tkey) {\n\tvar range = lookup(table, skey, sval);\n\n\t// Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\tvar prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n\tvar next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n\n\tvar span = next[skey] - prev[skey];\n\tvar ratio = span ? (sval - prev[skey]) / span : 0;\n\tvar offset = (next[tkey] - prev[tkey]) * ratio;\n\n\treturn prev[tkey] + offset;\n}\n\n/**\n * Convert the given value to a moment object using the given time options.\n * @see http://momentjs.com/docs/#/parsing/\n */\nfunction momentify(value, options) {\n\tvar parser = options.parser;\n\tvar format = options.parser || options.format;\n\n\tif (typeof parser === 'function') {\n\t\treturn parser(value);\n\t}\n\n\tif (typeof value === 'string' && typeof format === 'string') {\n\t\treturn moment(value, format);\n\t}\n\n\tif (!(value instanceof moment)) {\n\t\tvalue = moment(value);\n\t}\n\n\tif (value.isValid()) {\n\t\treturn value;\n\t}\n\n\t// Labels are in an incompatible moment format and no `parser` has been provided.\n\t// The user might still use the deprecated `format` option to convert his inputs.\n\tif (typeof format === 'function') {\n\t\treturn format(value);\n\t}\n\n\treturn value;\n}\n\nfunction parse(input, scale) {\n\tif (helpers.isNullOrUndef(input)) {\n\t\treturn null;\n\t}\n\n\tvar options = scale.options.time;\n\tvar value = momentify(scale.getRightValue(input), options);\n\tif (!value.isValid()) {\n\t\treturn null;\n\t}\n\n\tif (options.round) {\n\t\tvalue.startOf(options.round);\n\t}\n\n\treturn value.valueOf();\n}\n\n/**\n * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n */\nfunction determineStepSize(min, max, unit, capacity) {\n\tvar range = max - min;\n\tvar interval = INTERVALS[unit];\n\tvar milliseconds = interval.size;\n\tvar steps = interval.steps;\n\tvar i, ilen, factor;\n\n\tif (!steps) {\n\t\treturn Math.ceil(range / (capacity * milliseconds));\n\t}\n\n\tfor (i = 0, ilen = steps.length; i < ilen; ++i) {\n\t\tfactor = steps[i];\n\t\tif (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\treturn factor;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n\tvar ilen = UNITS.length;\n\tvar i, interval, factor;\n\n\tfor (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n\t\tinterval = INTERVALS[UNITS[i]];\n\t\tfactor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n\t\tif (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n\n\treturn UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n */\nfunction determineUnitForFormatting(ticks, minUnit, min, max) {\n\tvar duration = moment.duration(moment(max).diff(moment(min)));\n\tvar ilen = UNITS.length;\n\tvar i, unit;\n\n\tfor (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n\t\tunit = UNITS[i];\n\t\tif (INTERVALS[unit].common && duration.as(unit) >= ticks.length) {\n\t\t\treturn unit;\n\t\t}\n\t}\n\n\treturn UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n\tfor (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n\t\tif (INTERVALS[UNITS[i]].common) {\n\t\t\treturn UNITS[i];\n\t\t}\n\t}\n}\n\n/**\n * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n * Important: this method can return ticks outside the min and max range, it's the\n * responsibility of the calling code to clamp values if needed.\n */\nfunction generate(min, max, capacity, options) {\n\tvar timeOpts = options.time;\n\tvar minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n\tvar major = determineMajorUnit(minor);\n\tvar stepSize = helpers.valueOrDefault(timeOpts.stepSize, timeOpts.unitStepSize);\n\tvar weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n\tvar majorTicksEnabled = options.ticks.major.enabled;\n\tvar interval = INTERVALS[minor];\n\tvar first = moment(min);\n\tvar last = moment(max);\n\tvar ticks = [];\n\tvar time;\n\n\tif (!stepSize) {\n\t\tstepSize = determineStepSize(min, max, minor, capacity);\n\t}\n\n\t// For 'week' unit, handle the first day of week option\n\tif (weekday) {\n\t\tfirst = first.isoWeekday(weekday);\n\t\tlast = last.isoWeekday(weekday);\n\t}\n\n\t// Align first/last ticks on unit\n\tfirst = first.startOf(weekday ? 'day' : minor);\n\tlast = last.startOf(weekday ? 'day' : minor);\n\n\t// Make sure that the last tick include max\n\tif (last < max) {\n\t\tlast.add(1, minor);\n\t}\n\n\ttime = moment(first);\n\n\tif (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n\t\t// Align the first tick on the previous `minor` unit aligned on the `major` unit:\n\t\t// we first aligned time on the previous `major` unit then add the number of full\n\t\t// stepSize there is between first and the previous major time.\n\t\ttime.startOf(major);\n\t\ttime.add(~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n\t}\n\n\tfor (; time < last; time.add(stepSize, minor)) {\n\t\tticks.push(+time);\n\t}\n\n\tticks.push(+time);\n\n\treturn ticks;\n}\n\n/**\n * Returns the right and left offsets from edges in the form of {left, right}.\n * Offsets are added when the `offset` option is true.\n */\nfunction computeOffsets(table, ticks, min, max, options) {\n\tvar left = 0;\n\tvar right = 0;\n\tvar upper, lower;\n\n\tif (options.offset && ticks.length) {\n\t\tif (!options.time.min) {\n\t\t\tupper = ticks.length > 1 ? ticks[1] : max;\n\t\t\tlower = ticks[0];\n\t\t\tleft = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t\tif (!options.time.max) {\n\t\t\tupper = ticks[ticks.length - 1];\n\t\t\tlower = ticks.length > 1 ? ticks[ticks.length - 2] : min;\n\t\t\tright = (\n\t\t\t\tinterpolate(table, 'time', upper, 'pos') -\n\t\t\t\tinterpolate(table, 'time', lower, 'pos')\n\t\t\t) / 2;\n\t\t}\n\t}\n\n\treturn {left: left, right: right};\n}\n\nfunction ticksFromTimestamps(values, majorUnit) {\n\tvar ticks = [];\n\tvar i, ilen, value, major;\n\n\tfor (i = 0, ilen = values.length; i < ilen; ++i) {\n\t\tvalue = values[i];\n\t\tmajor = majorUnit ? value === +moment(value).startOf(majorUnit) : false;\n\n\t\tticks.push({\n\t\t\tvalue: value,\n\t\t\tmajor: major\n\t\t});\n\t}\n\n\treturn ticks;\n}\n\nfunction determineLabelFormat(data, timeOpts) {\n\tvar i, momentDate, hasTime;\n\tvar ilen = data.length;\n\n\t// find the label with the most parts (milliseconds, minutes, etc.)\n\t// format all labels with the same level of detail as the most specific label\n\tfor (i = 0; i < ilen; i++) {\n\t\tmomentDate = momentify(data[i], timeOpts);\n\t\tif (momentDate.millisecond() !== 0) {\n\t\t\treturn 'MMM D, YYYY h:mm:ss.SSS a';\n\t\t}\n\t\tif (momentDate.second() !== 0 || momentDate.minute() !== 0 || momentDate.hour() !== 0) {\n\t\t\thasTime = true;\n\t\t}\n\t}\n\tif (hasTime) {\n\t\treturn 'MMM D, YYYY h:mm:ss a';\n\t}\n\treturn 'MMM D, YYYY';\n}\n\nmodule.exports = function() {\n\n\tvar defaultConfig = {\n\t\tposition: 'bottom',\n\n\t\t/**\n\t\t * Data distribution along the scale:\n\t\t * - 'linear': data are spread according to their time (distances can vary),\n\t\t * - 'series': data are spread at the same distance from each other.\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t * @since 2.7.0\n\t\t */\n\t\tdistribution: 'linear',\n\n\t\t/**\n\t\t * Scale boundary strategy (bypassed by min/max time options)\n\t\t * - `data`: make sure data are fully visible, ticks outside are removed\n\t\t * - `ticks`: make sure ticks are fully visible, data outside are truncated\n\t\t * @see https://github.com/chartjs/Chart.js/pull/4556\n\t\t * @since 2.7.0\n\t\t */\n\t\tbounds: 'data',\n\n\t\ttime: {\n\t\t\tparser: false, // false == a pattern string from http://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n\t\t\tformat: false, // DEPRECATED false == date objects, moment object, callback or a pattern string from http://momentjs.com/docs/#/parsing/string-format/\n\t\t\tunit: false, // false == automatic or override with week, month, year, etc.\n\t\t\tround: false, // none, or override with week, month, year, etc.\n\t\t\tdisplayFormat: false, // DEPRECATED\n\t\t\tisoWeekday: false, // override week start day - see http://momentjs.com/docs/#/get-set/iso-weekday/\n\t\t\tminUnit: 'millisecond',\n\n\t\t\t// defaults to unit's corresponding unitFormat below or override using pattern string from http://momentjs.com/docs/#/displaying/format/\n\t\t\tdisplayFormats: {\n\t\t\t\tmillisecond: 'h:mm:ss.SSS a', // 11:20:01.123 AM,\n\t\t\t\tsecond: 'h:mm:ss a', // 11:20:01 AM\n\t\t\t\tminute: 'h:mm a', // 11:20 AM\n\t\t\t\thour: 'hA', // 5PM\n\t\t\t\tday: 'MMM D', // Sep 4\n\t\t\t\tweek: 'll', // Week 46, or maybe \"[W]WW - YYYY\" ?\n\t\t\t\tmonth: 'MMM YYYY', // Sept 2015\n\t\t\t\tquarter: '[Q]Q - YYYY', // Q3\n\t\t\t\tyear: 'YYYY' // 2015\n\t\t\t},\n\t\t},\n\t\tticks: {\n\t\t\tautoSkip: false,\n\n\t\t\t/**\n\t\t\t * Ticks generation input values:\n\t\t\t * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n\t\t\t * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n\t\t\t * - 'labels': generates ticks from user given `data.labels` values ONLY.\n\t\t\t * @see https://github.com/chartjs/Chart.js/pull/4507\n\t\t\t * @since 2.7.0\n\t\t\t */\n\t\t\tsource: 'auto',\n\n\t\t\tmajor: {\n\t\t\t\tenabled: false\n\t\t\t}\n\t\t}\n\t};\n\n\tvar TimeScale = Scale.extend({\n\t\tinitialize: function() {\n\t\t\tif (!moment) {\n\t\t\t\tthrow new Error('Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com');\n\t\t\t}\n\n\t\t\tthis.mergeTicksOptions();\n\n\t\t\tScale.prototype.initialize.call(this);\n\t\t},\n\n\t\tupdate: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\n\t\t\t// DEPRECATIONS: output a message only one time per update\n\t\t\tif (options.time && options.time.format) {\n\t\t\t\tconsole.warn('options.time.format is deprecated and replaced by options.time.parser.');\n\t\t\t}\n\n\t\t\treturn Scale.prototype.update.apply(me, arguments);\n\t\t},\n\n\t\t/**\n\t\t * Allows data to be referenced via 't' attribute\n\t\t */\n\t\tgetRightValue: function(rawValue) {\n\t\t\tif (rawValue && rawValue.t !== undefined) {\n\t\t\t\trawValue = rawValue.t;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, rawValue);\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar unit = timeOpts.unit || 'day';\n\t\t\tvar min = MAX_INTEGER;\n\t\t\tvar max = MIN_INTEGER;\n\t\t\tvar timestamps = [];\n\t\t\tvar datasets = [];\n\t\t\tvar labels = [];\n\t\t\tvar i, j, ilen, jlen, data, timestamp;\n\n\t\t\t// Convert labels to timestamps\n\t\t\tfor (i = 0, ilen = chart.data.labels.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(parse(chart.data.labels[i], me));\n\t\t\t}\n\n\t\t\t// Convert data to timestamps\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (chart.isDatasetVisible(i)) {\n\t\t\t\t\tdata = chart.data.datasets[i].data;\n\n\t\t\t\t\t// Let's consider that all data have the same format.\n\t\t\t\t\tif (helpers.isObject(data[0])) {\n\t\t\t\t\t\tdatasets[i] = [];\n\n\t\t\t\t\t\tfor (j = 0, jlen = data.length; j < jlen; ++j) {\n\t\t\t\t\t\t\ttimestamp = parse(data[j], me);\n\t\t\t\t\t\t\ttimestamps.push(timestamp);\n\t\t\t\t\t\t\tdatasets[i][j] = timestamp;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttimestamps.push.apply(timestamps, labels);\n\t\t\t\t\t\tdatasets[i] = labels.slice(0);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tdatasets[i] = [];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (labels.length) {\n\t\t\t\t// Sort labels **after** data have been converted\n\t\t\t\tlabels = arrayUnique(labels).sort(sorter);\n\t\t\t\tmin = Math.min(min, labels[0]);\n\t\t\t\tmax = Math.max(max, labels[labels.length - 1]);\n\t\t\t}\n\n\t\t\tif (timestamps.length) {\n\t\t\t\ttimestamps = arrayUnique(timestamps).sort(sorter);\n\t\t\t\tmin = Math.min(min, timestamps[0]);\n\t\t\t\tmax = Math.max(max, timestamps[timestamps.length - 1]);\n\t\t\t}\n\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// In case there is no valid min/max, set limits based on unit time option\n\t\t\tmin = min === MAX_INTEGER ? +moment().startOf(unit) : min;\n\t\t\tmax = max === MIN_INTEGER ? +moment().endOf(unit) + 1 : max;\n\n\t\t\t// Make sure that max is strictly higher than min (required by the lookup table)\n\t\t\tme.min = Math.min(min, max);\n\t\t\tme.max = Math.max(min + 1, max);\n\n\t\t\t// PRIVATE\n\t\t\tme._horizontal = me.isHorizontal();\n\t\t\tme._table = [];\n\t\t\tme._timestamps = {\n\t\t\t\tdata: timestamps,\n\t\t\t\tdatasets: datasets,\n\t\t\t\tlabels: labels\n\t\t\t};\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\t\t\tvar options = me.options;\n\t\t\tvar timeOpts = options.time;\n\t\t\tvar timestamps = [];\n\t\t\tvar ticks = [];\n\t\t\tvar i, ilen, timestamp;\n\n\t\t\tswitch (options.ticks.source) {\n\t\t\tcase 'data':\n\t\t\t\ttimestamps = me._timestamps.data;\n\t\t\t\tbreak;\n\t\t\tcase 'labels':\n\t\t\t\ttimestamps = me._timestamps.labels;\n\t\t\t\tbreak;\n\t\t\tcase 'auto':\n\t\t\tdefault:\n\t\t\t\ttimestamps = generate(min, max, me.getLabelCapacity(min), options);\n\t\t\t}\n\n\t\t\tif (options.bounds === 'ticks' && timestamps.length) {\n\t\t\t\tmin = timestamps[0];\n\t\t\t\tmax = timestamps[timestamps.length - 1];\n\t\t\t}\n\n\t\t\t// Enforce limits with user min/max options\n\t\t\tmin = parse(timeOpts.min, me) || min;\n\t\t\tmax = parse(timeOpts.max, me) || max;\n\n\t\t\t// Remove ticks outside the min/max range\n\t\t\tfor (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n\t\t\t\ttimestamp = timestamps[i];\n\t\t\t\tif (timestamp >= min && timestamp <= max) {\n\t\t\t\t\tticks.push(timestamp);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.min = min;\n\t\t\tme.max = max;\n\n\t\t\t// PRIVATE\n\t\t\tme._unit = timeOpts.unit || determineUnitForFormatting(ticks, timeOpts.minUnit, me.min, me.max);\n\t\t\tme._majorUnit = determineMajorUnit(me._unit);\n\t\t\tme._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n\t\t\tme._offsets = computeOffsets(me._table, ticks, min, max, options);\n\t\t\tme._labelFormat = determineLabelFormat(me._timestamps.data, timeOpts);\n\n\t\t\treturn ticksFromTimestamps(ticks, me._majorUnit);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar timeOpts = me.options.time;\n\t\t\tvar label = data.labels && index < data.labels.length ? data.labels[index] : '';\n\t\t\tvar value = data.datasets[datasetIndex].data[index];\n\n\t\t\tif (helpers.isObject(value)) {\n\t\t\t\tlabel = me.getRightValue(value);\n\t\t\t}\n\t\t\tif (timeOpts.tooltipFormat) {\n\t\t\t\treturn momentify(label, timeOpts).format(timeOpts.tooltipFormat);\n\t\t\t}\n\t\t\tif (typeof label === 'string') {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\treturn momentify(label, timeOpts).format(me._labelFormat);\n\t\t},\n\n\t\t/**\n\t\t * Function to format an individual tick mark\n\t\t * @private\n\t\t */\n\t\ttickFormatFunction: function(tick, index, ticks, formatOverride) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar time = tick.valueOf();\n\t\t\tvar formats = options.time.displayFormats;\n\t\t\tvar minorFormat = formats[me._unit];\n\t\t\tvar majorUnit = me._majorUnit;\n\t\t\tvar majorFormat = formats[majorUnit];\n\t\t\tvar majorTime = tick.clone().startOf(majorUnit).valueOf();\n\t\t\tvar majorTickOpts = options.ticks.major;\n\t\t\tvar major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n\t\t\tvar label = tick.format(formatOverride ? formatOverride : major ? majorFormat : minorFormat);\n\t\t\tvar tickOpts = major ? majorTickOpts : options.ticks.minor;\n\t\t\tvar formatter = helpers.valueOrDefault(tickOpts.callback, tickOpts.userCallback);\n\n\t\t\treturn formatter ? formatter(label, index, ticks) : label;\n\t\t},\n\n\t\tconvertTicksToLabels: function(ticks) {\n\t\t\tvar labels = [];\n\t\t\tvar i, ilen;\n\n\t\t\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\t\t\tlabels.push(this.tickFormatFunction(moment(ticks[i].value), i, ticks));\n\t\t\t}\n\n\t\t\treturn labels;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetPixelForOffset: function(time) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = interpolate(me._table, 'time', time, 'pos');\n\n\t\t\treturn start + size * (me._offsets.left + pos) / (me._offsets.left + 1 + me._offsets.right);\n\t\t},\n\n\t\tgetPixelForValue: function(value, index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar time = null;\n\n\t\t\tif (index !== undefined && datasetIndex !== undefined) {\n\t\t\t\ttime = me._timestamps.datasets[datasetIndex][index];\n\t\t\t}\n\n\t\t\tif (time === null) {\n\t\t\t\ttime = parse(value, me);\n\t\t\t}\n\n\t\t\tif (time !== null) {\n\t\t\t\treturn me.getPixelForOffset(time);\n\t\t\t}\n\t\t},\n\n\t\tgetPixelForTick: function(index) {\n\t\t\tvar ticks = this.getTicks();\n\t\t\treturn index >= 0 && index < ticks.length ?\n\t\t\t\tthis.getPixelForOffset(ticks[index].value) :\n\t\t\t\tnull;\n\t\t},\n\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar size = me._horizontal ? me.width : me.height;\n\t\t\tvar start = me._horizontal ? me.left : me.top;\n\t\t\tvar pos = (size ? (pixel - start) / size : 0) * (me._offsets.left + 1 + me._offsets.left) - me._offsets.right;\n\t\t\tvar time = interpolate(me._table, 'pos', pos, 'time');\n\n\t\t\treturn moment(time);\n\t\t},\n\n\t\t/**\n\t\t * Crude approximation of what the label width might be\n\t\t * @private\n\t\t */\n\t\tgetLabelWidth: function(label) {\n\t\t\tvar me = this;\n\t\t\tvar ticksOpts = me.options.ticks;\n\t\t\tvar tickLabelWidth = me.ctx.measureText(label).width;\n\t\t\tvar angle = helpers.toRadians(ticksOpts.maxRotation);\n\t\t\tvar cosRotation = Math.cos(angle);\n\t\t\tvar sinRotation = Math.sin(angle);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(ticksOpts.fontSize, defaults.global.defaultFontSize);\n\n\t\t\treturn (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetLabelCapacity: function(exampleTime) {\n\t\t\tvar me = this;\n\n\t\t\tvar formatOverride = me.options.time.displayFormats.millisecond;\t// Pick the longest format for guestimation\n\n\t\t\tvar exampleLabel = me.tickFormatFunction(moment(exampleTime), 0, [], formatOverride);\n\t\t\tvar tickLabelWidth = me.getLabelWidth(exampleLabel);\n\t\t\tvar innerWidth = me.isHorizontal() ? me.width : me.height;\n\n\t\t\tvar capacity = Math.floor(innerWidth / tickLabelWidth);\n\t\t\treturn capacity > 0 ? capacity : 1;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('time', TimeScale, defaultConfig);\n};\n","'use strict';\n\nmodule.exports = require('./helpers.core');\nmodule.exports.easing = require('./helpers.easing');\nmodule.exports.canvas = require('./helpers.canvas');\nmodule.exports.options = require('./helpers.options');\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * @namespace Chart.helpers.canvas\n */\nvar exports = module.exports = {\n\t/**\n\t * Clears the entire canvas associated to the given `chart`.\n\t * @param {Chart} chart - The chart for which to clear the canvas.\n\t */\n\tclear: function(chart) {\n\t\tchart.ctx.clearRect(0, 0, chart.width, chart.height);\n\t},\n\n\t/**\n\t * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n\t * given size (width, height) and the same `radius` for all corners.\n\t * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n\t * @param {Number} x - The x axis of the coordinate for the rectangle starting point.\n\t * @param {Number} y - The y axis of the coordinate for the rectangle starting point.\n\t * @param {Number} width - The rectangle's width.\n\t * @param {Number} height - The rectangle's height.\n\t * @param {Number} radius - The rounded amount (in pixels) for the four corners.\n\t * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n\t */\n\troundedRect: function(ctx, x, y, width, height, radius) {\n\t\tif (radius) {\n\t\t\t// NOTE(SB) `epsilon` helps to prevent minor artifacts appearing\n\t\t\t// on Chrome when `r` is exactly half the height or the width.\n\t\t\tvar epsilon = 0.0000001;\n\t\t\tvar r = Math.min(radius, (height / 2) - epsilon, (width / 2) - epsilon);\n\n\t\t\tctx.moveTo(x + r, y);\n\t\t\tctx.lineTo(x + width - r, y);\n\t\t\tctx.arcTo(x + width, y, x + width, y + r, r);\n\t\t\tctx.lineTo(x + width, y + height - r);\n\t\t\tctx.arcTo(x + width, y + height, x + width - r, y + height, r);\n\t\t\tctx.lineTo(x + r, y + height);\n\t\t\tctx.arcTo(x, y + height, x, y + height - r, r);\n\t\t\tctx.lineTo(x, y + r);\n\t\t\tctx.arcTo(x, y, x + r, y, r);\n\t\t\tctx.closePath();\n\t\t\tctx.moveTo(x, y);\n\t\t} else {\n\t\t\tctx.rect(x, y, width, height);\n\t\t}\n\t},\n\n\tdrawPoint: function(ctx, style, radius, x, y, rotation) {\n\t\tvar type, edgeLength, xOffset, yOffset, height, size;\n\t\trotation = rotation || 0;\n\n\t\tif (style && typeof style === 'object') {\n\t\t\ttype = style.toString();\n\t\t\tif (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n\t\t\t\tctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tif (isNaN(radius) || radius <= 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tctx.save();\n\t\tctx.translate(x, y);\n\t\tctx.rotate(rotation * Math.PI / 180);\n\t\tctx.beginPath();\n\n\t\tswitch (style) {\n\t\t// Default includes circle\n\t\tdefault:\n\t\t\tctx.arc(0, 0, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'triangle':\n\t\t\tedgeLength = 3 * radius / Math.sqrt(3);\n\t\t\theight = edgeLength * Math.sqrt(3) / 2;\n\t\t\tctx.moveTo(-edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(edgeLength / 2, height / 3);\n\t\t\tctx.lineTo(0, -2 * height / 3);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'rect':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.rect(-size, -size, 2 * size, 2 * size);\n\t\t\tbreak;\n\t\tcase 'rectRounded':\n\t\t\tvar offset = radius / Math.SQRT2;\n\t\t\tvar leftX = -offset;\n\t\t\tvar topY = -offset;\n\t\t\tvar sideSize = Math.SQRT2 * radius;\n\n\t\t\t// NOTE(SB) the rounded rect implementation changed to use `arcTo`\n\t\t\t// instead of `quadraticCurveTo` since it generates better results\n\t\t\t// when rect is almost a circle. 0.425 (instead of 0.5) produces\n\t\t\t// results visually closer to the previous impl.\n\t\t\tthis.roundedRect(ctx, leftX, topY, sideSize, sideSize, radius * 0.425);\n\t\t\tbreak;\n\t\tcase 'rectRot':\n\t\t\tsize = 1 / Math.SQRT2 * radius;\n\t\t\tctx.moveTo(-size, 0);\n\t\t\tctx.lineTo(0, size);\n\t\t\tctx.lineTo(size, 0);\n\t\t\tctx.lineTo(0, -size);\n\t\t\tctx.closePath();\n\t\t\tbreak;\n\t\tcase 'cross':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'crossRot':\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'star':\n\t\t\tctx.moveTo(0, radius);\n\t\t\tctx.lineTo(0, -radius);\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\txOffset = Math.cos(Math.PI / 4) * radius;\n\t\t\tyOffset = Math.sin(Math.PI / 4) * radius;\n\t\t\tctx.moveTo(-xOffset, -yOffset);\n\t\t\tctx.lineTo(xOffset, yOffset);\n\t\t\tctx.moveTo(-xOffset, yOffset);\n\t\t\tctx.lineTo(xOffset, -yOffset);\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tctx.moveTo(-radius, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\tcase 'dash':\n\t\t\tctx.moveTo(0, 0);\n\t\t\tctx.lineTo(radius, 0);\n\t\t\tbreak;\n\t\t}\n\n\t\tctx.fill();\n\t\tctx.stroke();\n\t\tctx.restore();\n\t},\n\n\tclipArea: function(ctx, area) {\n\t\tctx.save();\n\t\tctx.beginPath();\n\t\tctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n\t\tctx.clip();\n\t},\n\n\tunclipArea: function(ctx) {\n\t\tctx.restore();\n\t},\n\n\tlineTo: function(ctx, previous, target, flip) {\n\t\tif (target.steppedLine) {\n\t\t\tif ((target.steppedLine === 'after' && !flip) || (target.steppedLine !== 'after' && flip)) {\n\t\t\t\tctx.lineTo(previous.x, target.y);\n\t\t\t} else {\n\t\t\t\tctx.lineTo(target.x, previous.y);\n\t\t\t}\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!target.tension) {\n\t\t\tctx.lineTo(target.x, target.y);\n\t\t\treturn;\n\t\t}\n\n\t\tctx.bezierCurveTo(\n\t\t\tflip ? previous.controlPointPreviousX : previous.controlPointNextX,\n\t\t\tflip ? previous.controlPointPreviousY : previous.controlPointNextY,\n\t\t\tflip ? target.controlPointNextX : target.controlPointPreviousX,\n\t\t\tflip ? target.controlPointNextY : target.controlPointPreviousY,\n\t\t\ttarget.x,\n\t\t\ttarget.y);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n * @namespace Chart.helpers.clear\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.clear = exports.clear;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n * @namespace Chart.helpers.drawRoundedRectangle\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.drawRoundedRectangle = function(ctx) {\n\tctx.beginPath();\n\texports.roundedRect.apply(exports, arguments);\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\tChart.Scatter = function(context, config) {\n\t\tconfig.type = 'scatter';\n\t\treturn new Chart(context, config);\n\t};\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Doughnut = function(context, config) {\n\t\tconfig.type = 'doughnut';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\n/**\n * @namespace Chart.helpers\n */\nvar helpers = {\n\t/**\n\t * An empty function that can be used, for example, for optional callback.\n\t */\n\tnoop: function() {},\n\n\t/**\n\t * Returns a unique id, sequentially generated from a global variable.\n\t * @returns {Number}\n\t * @function\n\t */\n\tuid: (function() {\n\t\tvar id = 0;\n\t\treturn function() {\n\t\t\treturn id++;\n\t\t};\n\t}()),\n\n\t/**\n\t * Returns true if `value` is neither null nor undefined, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisNullOrUndef: function(value) {\n\t\treturn value === null || typeof value === 'undefined';\n\t},\n\n\t/**\n\t * Returns true if `value` is an array, else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @function\n\t */\n\tisArray: Array.isArray ? Array.isArray : function(value) {\n\t\treturn Object.prototype.toString.call(value) === '[object Array]';\n\t},\n\n\t/**\n\t * Returns true if `value` is an object (excluding null), else returns false.\n\t * @param {*} value - The value to test.\n\t * @returns {Boolean}\n\t * @since 2.7.0\n\t */\n\tisObject: function(value) {\n\t\treturn value !== null && Object.prototype.toString.call(value) === '[object Object]';\n\t},\n\n\t/**\n\t * Returns `value` if defined, else returns `defaultValue`.\n\t * @param {*} value - The value to return if defined.\n\t * @param {*} defaultValue - The value to return if `value` is undefined.\n\t * @returns {*}\n\t */\n\tvalueOrDefault: function(value, defaultValue) {\n\t\treturn typeof value === 'undefined' ? defaultValue : value;\n\t},\n\n\t/**\n\t * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n\t * @param {Array} value - The array to lookup for value at `index`.\n\t * @param {Number} index - The index in `value` to lookup for value.\n\t * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n\t * @returns {*}\n\t */\n\tvalueAtIndexOrDefault: function(value, index, defaultValue) {\n\t\treturn helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n\t},\n\n\t/**\n\t * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n\t * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n\t * @param {Function} fn - The function to call.\n\t * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @returns {*}\n\t */\n\tcallback: function(fn, args, thisArg) {\n\t\tif (fn && typeof fn.call === 'function') {\n\t\t\treturn fn.apply(thisArg, args);\n\t\t}\n\t},\n\n\t/**\n\t * Note(SB) for performance sake, this method should only be used when loopable type\n\t * is unknown or in none intensive code (not called often and small loopable). Else\n\t * it's preferable to use a regular for() loop and save extra function calls.\n\t * @param {Object|Array} loopable - The object or array to be iterated.\n\t * @param {Function} fn - The function to call for each item.\n\t * @param {Object} [thisArg] - The value of `this` provided for the call to `fn`.\n\t * @param {Boolean} [reverse] - If true, iterates backward on the loopable.\n\t */\n\teach: function(loopable, fn, thisArg, reverse) {\n\t\tvar i, len, keys;\n\t\tif (helpers.isArray(loopable)) {\n\t\t\tlen = loopable.length;\n\t\t\tif (reverse) {\n\t\t\t\tfor (i = len - 1; i >= 0; i--) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\t\tfn.call(thisArg, loopable[i], i);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (helpers.isObject(loopable)) {\n\t\t\tkeys = Object.keys(loopable);\n\t\t\tlen = keys.length;\n\t\t\tfor (i = 0; i < len; i++) {\n\t\t\t\tfn.call(thisArg, loopable[keys[i]], keys[i]);\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n\t * @see http://stackoverflow.com/a/14853974\n\t * @param {Array} a0 - The array to compare\n\t * @param {Array} a1 - The array to compare\n\t * @returns {Boolean}\n\t */\n\tarrayEquals: function(a0, a1) {\n\t\tvar i, ilen, v0, v1;\n\n\t\tif (!a0 || !a1 || a0.length !== a1.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tfor (i = 0, ilen = a0.length; i < ilen; ++i) {\n\t\t\tv0 = a0[i];\n\t\t\tv1 = a1[i];\n\n\t\t\tif (v0 instanceof Array && v1 instanceof Array) {\n\t\t\t\tif (!helpers.arrayEquals(v0, v1)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else if (v0 !== v1) {\n\t\t\t\t// NOTE: two different object instances will never be equal: {x:20} != {x:20}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns a deep copy of `source` without keeping references on objects and arrays.\n\t * @param {*} source - The value to clone.\n\t * @returns {*}\n\t */\n\tclone: function(source) {\n\t\tif (helpers.isArray(source)) {\n\t\t\treturn source.map(helpers.clone);\n\t\t}\n\n\t\tif (helpers.isObject(source)) {\n\t\t\tvar target = {};\n\t\t\tvar keys = Object.keys(source);\n\t\t\tvar klen = keys.length;\n\t\t\tvar k = 0;\n\n\t\t\tfor (; k < klen; ++k) {\n\t\t\t\ttarget[keys[k]] = helpers.clone(source[keys[k]]);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\treturn source;\n\t},\n\n\t/**\n\t * The default merger when Chart.helpers.merge is called without merger option.\n\t * Note(SB): this method is also used by configMerge and scaleMerge as fallback.\n\t * @private\n\t */\n\t_merger: function(key, target, source, options) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.merge(tval, sval, options);\n\t\t} else {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Merges source[key] in target[key] only if target[key] is undefined.\n\t * @private\n\t */\n\t_mergerIf: function(key, target, source) {\n\t\tvar tval = target[key];\n\t\tvar sval = source[key];\n\n\t\tif (helpers.isObject(tval) && helpers.isObject(sval)) {\n\t\t\thelpers.mergeIf(tval, sval);\n\t\t} else if (!target.hasOwnProperty(key)) {\n\t\t\ttarget[key] = helpers.clone(sval);\n\t\t}\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` with the given `options`.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @param {Object} [options] - Merging options:\n\t * @param {Function} [options.merger] - The merge method (key, target, source, options)\n\t * @returns {Object} The `target` object.\n\t */\n\tmerge: function(target, source, options) {\n\t\tvar sources = helpers.isArray(source) ? source : [source];\n\t\tvar ilen = sources.length;\n\t\tvar merge, i, keys, klen, k;\n\n\t\tif (!helpers.isObject(target)) {\n\t\t\treturn target;\n\t\t}\n\n\t\toptions = options || {};\n\t\tmerge = options.merger || helpers._merger;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!helpers.isObject(source)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tkeys = Object.keys(source);\n\t\t\tfor (k = 0, klen = keys.length; k < klen; ++k) {\n\t\t\t\tmerge(keys[k], target, source, options);\n\t\t\t}\n\t\t}\n\n\t\treturn target;\n\t},\n\n\t/**\n\t * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n\t * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n\t * @param {Object} target - The target object in which all sources are merged into.\n\t * @param {Object|Array(Object)} source - Object(s) to merge into `target`.\n\t * @returns {Object} The `target` object.\n\t */\n\tmergeIf: function(target, source) {\n\t\treturn helpers.merge(target, source, {merger: helpers._mergerIf});\n\t},\n\n\t/**\n\t * Applies the contents of two or more objects together into the first object.\n\t * @param {Object} target - The target object in which all objects are merged into.\n\t * @param {Object} arg1 - Object containing additional properties to merge in target.\n\t * @param {Object} argN - Additional objects containing properties to merge in target.\n\t * @returns {Object} The `target` object.\n\t */\n\textend: function(target) {\n\t\tvar setFn = function(value, key) {\n\t\t\ttarget[key] = value;\n\t\t};\n\t\tfor (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n\t\t\thelpers.each(arguments[i], setFn);\n\t\t}\n\t\treturn target;\n\t},\n\n\t/**\n\t * Basic javascript inheritance based on the model created in Backbone.js\n\t */\n\tinherits: function(extensions) {\n\t\tvar me = this;\n\t\tvar ChartElement = (extensions && extensions.hasOwnProperty('constructor')) ? extensions.constructor : function() {\n\t\t\treturn me.apply(this, arguments);\n\t\t};\n\n\t\tvar Surrogate = function() {\n\t\t\tthis.constructor = ChartElement;\n\t\t};\n\n\t\tSurrogate.prototype = me.prototype;\n\t\tChartElement.prototype = new Surrogate();\n\t\tChartElement.extend = helpers.inherits;\n\n\t\tif (extensions) {\n\t\t\thelpers.extend(ChartElement.prototype, extensions);\n\t\t}\n\n\t\tChartElement.__super__ = me.prototype;\n\t\treturn ChartElement;\n\t}\n};\n\nmodule.exports = helpers;\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.callback instead.\n * @function Chart.helpers.callCallback\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nhelpers.callCallback = helpers.callback;\n\n/**\n * Provided for backward compatibility, use Array.prototype.indexOf instead.\n * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n * @function Chart.helpers.indexOf\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.indexOf = function(array, item, fromIndex) {\n\treturn Array.prototype.indexOf.call(array, item, fromIndex);\n};\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n * @function Chart.helpers.getValueOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueOrDefault = helpers.valueOrDefault;\n\n/**\n * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n * @function Chart.helpers.getValueAtIndexOrDefault\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\nvar globalDefaults = defaults.global;\n\ndefaults._set('global', {\n\telements: {\n\t\tline: {\n\t\t\ttension: 0.4,\n\t\t\tbackgroundColor: globalDefaults.defaultColor,\n\t\t\tborderWidth: 3,\n\t\t\tborderColor: globalDefaults.defaultColor,\n\t\t\tborderCapStyle: 'butt',\n\t\t\tborderDash: [],\n\t\t\tborderDashOffset: 0.0,\n\t\t\tborderJoinStyle: 'miter',\n\t\t\tcapBezierPoints: true,\n\t\t\tfill: true, // do we fill in the area between the line and its base axis\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar vm = me._view;\n\t\tvar ctx = me._chart.ctx;\n\t\tvar spanGaps = vm.spanGaps;\n\t\tvar points = me._children.slice(); // clone array\n\t\tvar globalOptionLineElements = globalDefaults.elements.line;\n\t\tvar lastDrawnIndex = -1;\n\t\tvar index, current, previous, currentVM;\n\n\t\t// If we are looping, adding the first point again\n\t\tif (me._loop && points.length) {\n\t\t\tpoints.push(points[0]);\n\t\t}\n\n\t\tctx.save();\n\n\t\t// Stroke Line Options\n\t\tctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle;\n\n\t\t// IE 9 and 10 do not support line dash\n\t\tif (ctx.setLineDash) {\n\t\t\tctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n\t\t}\n\n\t\tctx.lineDashOffset = vm.borderDashOffset || globalOptionLineElements.borderDashOffset;\n\t\tctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n\t\tctx.lineWidth = vm.borderWidth || globalOptionLineElements.borderWidth;\n\t\tctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor;\n\n\t\t// Stroke Line\n\t\tctx.beginPath();\n\t\tlastDrawnIndex = -1;\n\n\t\tfor (index = 0; index < points.length; ++index) {\n\t\t\tcurrent = points[index];\n\t\t\tprevious = helpers.previousItem(points, index);\n\t\t\tcurrentVM = current._view;\n\n\t\t\t// First point moves to it's starting position no matter what\n\t\t\tif (index === 0) {\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tprevious = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n\t\t\t\tif (!currentVM.skip) {\n\t\t\t\t\tif ((lastDrawnIndex !== (index - 1) && !spanGaps) || lastDrawnIndex === -1) {\n\t\t\t\t\t\t// There was a gap and this is the first point after the gap\n\t\t\t\t\t\tctx.moveTo(currentVM.x, currentVM.y);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Line to next point\n\t\t\t\t\t\thelpers.canvas.lineTo(ctx, previous._view, current._view);\n\t\t\t\t\t}\n\t\t\t\t\tlastDrawnIndex = index;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tctx.stroke();\n\t\tctx.restore();\n\t}\n});\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {}\n});\n\n/**\n * The plugin service singleton\n * @namespace Chart.plugins\n * @since 2.1.0\n */\nmodule.exports = {\n\t/**\n\t * Globally registered plugins.\n\t * @private\n\t */\n\t_plugins: [],\n\n\t/**\n\t * This identifier is used to invalidate the descriptors cache attached to each chart\n\t * when a global plugin is registered or unregistered. In this case, the cache ID is\n\t * incremented and descriptors are regenerated during following API calls.\n\t * @private\n\t */\n\t_cacheId: 0,\n\n\t/**\n\t * Registers the given plugin(s) if not already registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tif (p.indexOf(plugin) === -1) {\n\t\t\t\tp.push(plugin);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Unregisters the given plugin(s) only if registered.\n\t * @param {Array|Object} plugins plugin instance(s).\n\t */\n\tunregister: function(plugins) {\n\t\tvar p = this._plugins;\n\t\t([]).concat(plugins).forEach(function(plugin) {\n\t\t\tvar idx = p.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\tp.splice(idx, 1);\n\t\t\t}\n\t\t});\n\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Remove all registered plugins.\n\t * @since 2.1.5\n\t */\n\tclear: function() {\n\t\tthis._plugins = [];\n\t\tthis._cacheId++;\n\t},\n\n\t/**\n\t * Returns the number of registered plugins?\n\t * @returns {Number}\n\t * @since 2.1.5\n\t */\n\tcount: function() {\n\t\treturn this._plugins.length;\n\t},\n\n\t/**\n\t * Returns all registered plugin instances.\n\t * @returns {Array} array of plugin objects.\n\t * @since 2.1.5\n\t */\n\tgetAll: function() {\n\t\treturn this._plugins;\n\t},\n\n\t/**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Object} chart - The chart instance for which plugins should be called.\n\t * @param {String} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Array} [args] - Extra arguments to apply to the hook call.\n\t * @returns {Boolean} false if any of the plugins return false, else returns true.\n\t */\n\tnotify: function(chart, hook, args) {\n\t\tvar descriptors = this.descriptors(chart);\n\t\tvar ilen = descriptors.length;\n\t\tvar i, descriptor, plugin, params, method;\n\n\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\tdescriptor = descriptors[i];\n\t\t\tplugin = descriptor.plugin;\n\t\t\tmethod = plugin[hook];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\tparams = [chart].concat(args || []);\n\t\t\t\tparams.push(descriptor.options);\n\t\t\t\tif (method.apply(plugin, params) === false) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t},\n\n\t/**\n\t * Returns descriptors of enabled plugins for the given chart.\n\t * @returns {Array} [{ plugin, options }]\n\t * @private\n\t */\n\tdescriptors: function(chart) {\n\t\tvar cache = chart.$plugins || (chart.$plugins = {});\n\t\tif (cache.id === this._cacheId) {\n\t\t\treturn cache.descriptors;\n\t\t}\n\n\t\tvar plugins = [];\n\t\tvar descriptors = [];\n\t\tvar config = (chart && chart.config) || {};\n\t\tvar options = (config.options && config.options.plugins) || {};\n\n\t\tthis._plugins.concat(config.plugins || []).forEach(function(plugin) {\n\t\t\tvar idx = plugins.indexOf(plugin);\n\t\t\tif (idx !== -1) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar id = plugin.id;\n\t\t\tvar opts = options[id];\n\t\t\tif (opts === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (opts === true) {\n\t\t\t\topts = helpers.clone(defaults.global.plugins[id]);\n\t\t\t}\n\n\t\t\tplugins.push(plugin);\n\t\t\tdescriptors.push({\n\t\t\t\tplugin: plugin,\n\t\t\t\toptions: opts || {}\n\t\t\t});\n\t\t});\n\n\t\tcache.descriptors = descriptors;\n\t\tcache.id = this._cacheId;\n\t\treturn descriptors;\n\t},\n\n\t/**\n\t * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n\t * but in some cases, this reference can be changed by the user when updating options.\n\t * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t * @private\n\t */\n\t_invalidate: function(chart) {\n\t\tdelete chart.$plugins;\n\t}\n};\n\n/**\n * Plugin extension hooks.\n * @interface IPlugin\n * @since 2.1.0\n */\n/**\n * @method IPlugin#beforeInit\n * @desc Called before initializing `chart`.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterInit\n * @desc Called after `chart` has been initialized and before the first update.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeUpdate\n * @desc Called before updating `chart`. If any plugin returns `false`, the update\n * is cancelled (and thus subsequent render(s)) until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart update.\n */\n/**\n * @method IPlugin#afterUpdate\n * @desc Called after `chart` has been updated and before rendering. Note that this\n * hook will not be called if the chart update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsUpdate\n * @desc Called before updating the `chart` datasets. If any plugin returns `false`,\n * the datasets update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} false to cancel the datasets update.\n * @since version 2.1.5\n*/\n/**\n * @method IPlugin#afterDatasetsUpdate\n * @desc Called after the `chart` datasets have been updated. Note that this hook\n * will not be called if the datasets update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @since version 2.1.5\n */\n/**\n * @method IPlugin#beforeDatasetUpdate\n * @desc Called before updating the `chart` dataset at the given `args.index`. If any plugin\n * returns `false`, the datasets update is cancelled until another `update` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetUpdate\n * @desc Called after the `chart` datasets at the given `args.index` has been updated. Note\n * that this hook will not be called if the datasets update has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeLayout\n * @desc Called before laying out `chart`. If any plugin returns `false`,\n * the layout update is cancelled until another `update` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart layout.\n */\n/**\n * @method IPlugin#afterLayout\n * @desc Called after the `chart` has been layed out. Note that this hook will not\n * be called if the layout update has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeRender\n * @desc Called before rendering `chart`. If any plugin returns `false`,\n * the rendering is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart rendering.\n */\n/**\n * @method IPlugin#afterRender\n * @desc Called after the `chart` has been fully rendered (and animation completed). Note\n * that this hook will not be called if the rendering has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDraw\n * @desc Called before drawing `chart` at every animation frame specified by the given\n * easing value. If any plugin returns `false`, the frame drawing is cancelled until\n * another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart drawing.\n */\n/**\n * @method IPlugin#afterDraw\n * @desc Called after the `chart` has been drawn for the specific easing value. Note\n * that this hook will not be called if the drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetsDraw\n * @desc Called before drawing the `chart` datasets. If any plugin returns `false`,\n * the datasets drawing is cancelled until another `render` is triggered.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetsDraw\n * @desc Called after the `chart` datasets have been drawn. Note that this hook\n * will not be called if the datasets drawing has been previously cancelled.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeDatasetDraw\n * @desc Called before drawing the `chart` dataset at the given `args.index` (datasets\n * are drawn in the reverse order). If any plugin returns `false`, the datasets drawing\n * is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart datasets drawing.\n */\n/**\n * @method IPlugin#afterDatasetDraw\n * @desc Called after the `chart` datasets at the given `args.index` have been drawn\n * (datasets are drawn in the reverse order). Note that this hook will not be called\n * if the datasets drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Number} args.index - The dataset index.\n * @param {Object} args.meta - The dataset metadata.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeTooltipDraw\n * @desc Called before drawing the `tooltip`. If any plugin returns `false`,\n * the tooltip drawing is cancelled until another `render` is triggered.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n * @returns {Boolean} `false` to cancel the chart tooltip drawing.\n */\n/**\n * @method IPlugin#afterTooltipDraw\n * @desc Called after drawing the `tooltip`. Note that this hook will not\n * be called if the tooltip drawing has been previously cancelled.\n * @param {Chart} chart - The chart instance.\n * @param {Object} args - The call arguments.\n * @param {Object} args.tooltip - The tooltip.\n * @param {Number} args.easingValue - The current animation value, between 0.0 and 1.0.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#beforeEvent\n * @desc Called before processing the specified `event`. If any plugin returns `false`,\n * the event will be discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#afterEvent\n * @desc Called after the `event` has been consumed. Note that this hook\n * will not be called if the `event` has been previously discarded.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {IEvent} event - The event object.\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#resize\n * @desc Called after the chart as been resized.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Number} size - The new canvas display size (eq. canvas.style width & height).\n * @param {Object} options - The plugin options.\n */\n/**\n * @method IPlugin#destroy\n * @desc Called after the chart as been destroyed.\n * @param {Chart.Controller} chart - The chart instance.\n * @param {Object} options - The plugin options.\n */\n","/**\n * @namespace Chart\n */\nvar Chart = require('./core/core')();\n\nChart.helpers = require('./helpers/index');\n\n// @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\nrequire('./core/core.helpers')(Chart);\n\nChart.Animation = require('./core/core.animation');\nChart.animationService = require('./core/core.animations');\nChart.defaults = require('./core/core.defaults');\nChart.Element = require('./core/core.element');\nChart.elements = require('./elements/index');\nChart.Interaction = require('./core/core.interaction');\nChart.layouts = require('./core/core.layouts');\nChart.platform = require('./platforms/platform');\nChart.plugins = require('./core/core.plugins');\nChart.Scale = require('./core/core.scale');\nChart.scaleService = require('./core/core.scaleService');\nChart.Ticks = require('./core/core.ticks');\nChart.Tooltip = require('./core/core.tooltip');\n\nrequire('./core/core.controller')(Chart);\nrequire('./core/core.datasetController')(Chart);\n\nrequire('./scales/scale.linearbase')(Chart);\nrequire('./scales/scale.category')(Chart);\nrequire('./scales/scale.linear')(Chart);\nrequire('./scales/scale.logarithmic')(Chart);\nrequire('./scales/scale.radialLinear')(Chart);\nrequire('./scales/scale.time')(Chart);\n\n// Controllers must be loaded after elements\n// See Chart.core.datasetController.dataElementType\nrequire('./controllers/controller.bar')(Chart);\nrequire('./controllers/controller.bubble')(Chart);\nrequire('./controllers/controller.doughnut')(Chart);\nrequire('./controllers/controller.line')(Chart);\nrequire('./controllers/controller.polarArea')(Chart);\nrequire('./controllers/controller.radar')(Chart);\nrequire('./controllers/controller.scatter')(Chart);\n\nrequire('./charts/Chart.Bar')(Chart);\nrequire('./charts/Chart.Bubble')(Chart);\nrequire('./charts/Chart.Doughnut')(Chart);\nrequire('./charts/Chart.Line')(Chart);\nrequire('./charts/Chart.PolarArea')(Chart);\nrequire('./charts/Chart.Radar')(Chart);\nrequire('./charts/Chart.Scatter')(Chart);\n\n// Loading built-in plugins\nvar plugins = require('./plugins');\nfor (var k in plugins) {\n\tif (plugins.hasOwnProperty(k)) {\n\t\tChart.plugins.register(plugins[k]);\n\t}\n}\n\nChart.platform.initialize();\n\nmodule.exports = Chart;\nif (typeof window !== 'undefined') {\n\twindow.Chart = Chart;\n}\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Legend\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Legend = plugins.legend._element;\n\n/**\n * Provided for backward compatibility, not available anymore\n * @namespace Chart.Title\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.Title = plugins.title._element;\n\n/**\n * Provided for backward compatibility, use Chart.plugins instead\n * @namespace Chart.pluginService\n * @deprecated since version 2.1.5\n * @todo remove at version 3\n * @private\n */\nChart.pluginService = Chart.plugins;\n\n/**\n * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n * effect, instead simply create/register plugins via plain JavaScript objects.\n * @interface Chart.PluginBase\n * @deprecated since version 2.5.0\n * @todo remove at version 3\n * @private\n */\nChart.PluginBase = Chart.Element.extend({});\n\n/**\n * Provided for backward compatibility, use Chart.helpers.canvas instead.\n * @namespace Chart.canvasHelpers\n * @deprecated since version 2.6.0\n * @todo remove at version 3\n * @private\n */\nChart.canvasHelpers = Chart.helpers.canvas;\n\n/**\n * Provided for backward compatibility, use Chart.layouts instead.\n * @namespace Chart.layoutService\n * @deprecated since version 2.8.0\n * @todo remove at version 3\n * @private\n */\nChart.layoutService = Chart.layouts;\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('doughnut', {\n\tanimation: {\n\t\t// Boolean - Whether we animate the rotation of the Doughnut\n\t\tanimateRotate: true,\n\t\t// Boolean - Whether we animate scaling the Doughnut from the centre\n\t\tanimateScale: false\n\t},\n\thover: {\n\t\tmode: 'single'\n\t},\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc && arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\t// toggle visibility of index if exists\n\t\t\t\tif (meta.data[index]) {\n\t\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// The percentage of the chart that we cut out of the middle.\n\tcutoutPercentage: 50,\n\n\t// The rotation of the chart, where the first data arc begins.\n\trotation: Math.PI * -0.5,\n\n\t// The total circumference of the chart.\n\tcircumference: Math.PI * 2.0,\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar dataLabel = data.labels[tooltipItem.index];\n\t\t\t\tvar value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n\t\t\t\tif (helpers.isArray(dataLabel)) {\n\t\t\t\t\t// show value on first line of multiline label\n\t\t\t\t\t// need to clone because we are changing the value\n\t\t\t\t\tdataLabel = dataLabel.slice();\n\t\t\t\t\tdataLabel[0] += value;\n\t\t\t\t} else {\n\t\t\t\t\tdataLabel += value;\n\t\t\t\t}\n\n\t\t\t\treturn dataLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\ndefaults._set('pie', helpers.clone(defaults.doughnut));\ndefaults._set('pie', {\n\tcutoutPercentage: 0\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.doughnut = Chart.controllers.pie = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\t// Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n\t\tgetRingIndex: function(datasetIndex) {\n\t\t\tvar ringIndex = 0;\n\n\t\t\tfor (var j = 0; j < datasetIndex; ++j) {\n\t\t\t\tif (this.chart.isDatasetVisible(j)) {\n\t\t\t\t\t++ringIndex;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn ringIndex;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar availableWidth = chartArea.right - chartArea.left - arcOpts.borderWidth;\n\t\t\tvar availableHeight = chartArea.bottom - chartArea.top - arcOpts.borderWidth;\n\t\t\tvar minSize = Math.min(availableWidth, availableHeight);\n\t\t\tvar offset = {x: 0, y: 0};\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar cutoutPercentage = opts.cutoutPercentage;\n\t\t\tvar circumference = opts.circumference;\n\n\t\t\t// If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\t\t\tif (circumference < Math.PI * 2.0) {\n\t\t\t\tvar startAngle = opts.rotation % (Math.PI * 2.0);\n\t\t\t\tstartAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n\t\t\t\tvar endAngle = startAngle + circumference;\n\t\t\t\tvar start = {x: Math.cos(startAngle), y: Math.sin(startAngle)};\n\t\t\t\tvar end = {x: Math.cos(endAngle), y: Math.sin(endAngle)};\n\t\t\t\tvar contains0 = (startAngle <= 0 && endAngle >= 0) || (startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle);\n\t\t\t\tvar contains90 = (startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle);\n\t\t\t\tvar contains180 = (startAngle <= -Math.PI && -Math.PI <= endAngle) || (startAngle <= Math.PI && Math.PI <= endAngle);\n\t\t\t\tvar contains270 = (startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle) || (startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle);\n\t\t\t\tvar cutout = cutoutPercentage / 100.0;\n\t\t\t\tvar min = {x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)), y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))};\n\t\t\t\tvar max = {x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)), y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))};\n\t\t\t\tvar size = {width: (max.x - min.x) * 0.5, height: (max.y - min.y) * 0.5};\n\t\t\t\tminSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n\t\t\t\toffset = {x: (max.x + min.x) * -0.5, y: (max.y + min.y) * -0.5};\n\t\t\t}\n\n\t\t\tchart.borderWidth = me.getMaxBorderWidth(meta.data);\n\t\t\tchart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(cutoutPercentage ? (chart.outerRadius / 100) * (cutoutPercentage) : 0, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\t\t\tchart.offsetX = offset.x * chart.outerRadius;\n\t\t\tchart.offsetY = offset.y * chart.outerRadius;\n\n\t\t\tmeta.total = me.calculateTotal();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.getRingIndex(me.index));\n\t\t\tme.innerRadius = Math.max(me.outerRadius - chart.radiusLength, 0);\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar centerX = (chartArea.left + chartArea.right) / 2;\n\t\t\tvar centerY = (chartArea.top + chartArea.bottom) / 2;\n\t\t\tvar startAngle = opts.rotation; // non reset case handled later\n\t\t\tvar endAngle = opts.rotation; // non reset case handled later\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n\t\t\tvar innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n\t\t\tvar outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX + chart.offsetX,\n\t\t\t\t\ty: centerY + chart.offsetY,\n\t\t\t\t\tstartAngle: startAngle,\n\t\t\t\t\tendAngle: endAngle,\n\t\t\t\t\tcircumference: circumference,\n\t\t\t\t\touterRadius: outerRadius,\n\t\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\t\tlabel: valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tvar model = arc._model;\n\n\t\t\t// Resets the visual styles\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\t// Set correct angles if not resetting\n\t\t\tif (!reset || !animationOpts.animateRotate) {\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tmodel.startAngle = opts.rotation;\n\t\t\t\t} else {\n\t\t\t\t\tmodel.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n\t\t\t\t}\n\n\t\t\t\tmodel.endAngle = model.startAngle + model.circumference;\n\t\t\t}\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcalculateTotal: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar total = 0;\n\t\t\tvar value;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tvalue = dataset.data[index];\n\t\t\t\tif (!isNaN(value) && !element.hidden) {\n\t\t\t\t\ttotal += Math.abs(value);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t/* if (total === 0) {\n\t\t\t\ttotal = NaN;\n\t\t\t}*/\n\n\t\t\treturn total;\n\t\t},\n\n\t\tcalculateCircumference: function(value) {\n\t\t\tvar total = this.getMeta().total;\n\t\t\tif (total > 0 && !isNaN(value)) {\n\t\t\t\treturn (Math.PI * 2.0) * (Math.abs(value) / total);\n\t\t\t}\n\t\t\treturn 0;\n\t\t},\n\n\t\t// gets the max border or hover width to properly scale pie charts\n\t\tgetMaxBorderWidth: function(arcs) {\n\t\t\tvar max = 0;\n\t\t\tvar index = this.index;\n\t\t\tvar length = arcs.length;\n\t\t\tvar borderWidth;\n\t\t\tvar hoverWidth;\n\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tborderWidth = arcs[i]._model ? arcs[i]._model.borderWidth : 0;\n\t\t\t\thoverWidth = arcs[i]._chart ? arcs[i]._chart.config.data.datasets[index].hoverBorderWidth : 0;\n\n\t\t\t\tmax = borderWidth > max ? borderWidth : max;\n\t\t\t\tmax = hoverWidth > max ? hoverWidth : max;\n\t\t\t}\n\t\t\treturn max;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\telements: {\n\t\tarc: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: '#fff',\n\t\t\tborderWidth: 2\n\t\t}\n\t}\n});\n\nmodule.exports = Element.extend({\n\tinLabelRange: function(mouseX) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\treturn (Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2));\n\t\t}\n\t\treturn false;\n\t},\n\n\tinRange: function(chartX, chartY) {\n\t\tvar vm = this._view;\n\n\t\tif (vm) {\n\t\t\tvar pointRelativePosition = helpers.getAngleFromPoint(vm, {x: chartX, y: chartY});\n\t\t\tvar\tangle = pointRelativePosition.angle;\n\t\t\tvar distance = pointRelativePosition.distance;\n\n\t\t\t// Sanitise angle range\n\t\t\tvar startAngle = vm.startAngle;\n\t\t\tvar endAngle = vm.endAngle;\n\t\t\twhile (endAngle < startAngle) {\n\t\t\t\tendAngle += 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle > endAngle) {\n\t\t\t\tangle -= 2.0 * Math.PI;\n\t\t\t}\n\t\t\twhile (angle < startAngle) {\n\t\t\t\tangle += 2.0 * Math.PI;\n\t\t\t}\n\n\t\t\t// Check if within the range of the open/close angle\n\t\t\tvar betweenAngles = (angle >= startAngle && angle <= endAngle);\n\t\t\tvar withinRadius = (distance >= vm.innerRadius && distance <= vm.outerRadius);\n\n\t\t\treturn (betweenAngles && withinRadius);\n\t\t}\n\t\treturn false;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar halfAngle = (vm.startAngle + vm.endAngle) / 2;\n\t\tvar halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n\t\treturn {\n\t\t\tx: vm.x + Math.cos(halfAngle) * halfRadius,\n\t\t\ty: vm.y + Math.sin(halfAngle) * halfRadius\n\t\t};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\tvar centreAngle = vm.startAngle + ((vm.endAngle - vm.startAngle) / 2);\n\t\tvar rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n\n\t\treturn {\n\t\t\tx: vm.x + (Math.cos(centreAngle) * rangeFromCentre),\n\t\t\ty: vm.y + (Math.sin(centreAngle) * rangeFromCentre)\n\t\t};\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar sA = vm.startAngle;\n\t\tvar eA = vm.endAngle;\n\n\t\tctx.beginPath();\n\n\t\tctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n\t\tctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n\n\t\tctx.closePath();\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = vm.borderWidth;\n\n\t\tctx.fillStyle = vm.backgroundColor;\n\n\t\tctx.fill();\n\t\tctx.lineJoin = 'bevel';\n\n\t\tif (vm.borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.linear\n\t\t}\n\t};\n\n\tvar LinearScale = Chart.LinearScaleBase.extend({\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar DEFAULT_MIN = 0;\n\t\t\tvar DEFAULT_MAX = 1;\n\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// First Calculate the range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\tvaluesPerStack[key] = {\n\t\t\t\t\t\t\tpositiveValues: [],\n\t\t\t\t\t\t\tnegativeValues: []\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Store these per type\n\t\t\t\t\tvar positiveValues = valuesPerStack[key].positiveValues;\n\t\t\t\t\tvar negativeValues = valuesPerStack[key].negativeValues;\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tpositiveValues[index] = positiveValues[index] || 0;\n\t\t\t\t\t\t\tnegativeValues[index] = negativeValues[index] || 0;\n\n\t\t\t\t\t\t\tif (opts.relativePoints) {\n\t\t\t\t\t\t\t\tpositiveValues[index] = 100;\n\t\t\t\t\t\t\t} else if (value < 0) {\n\t\t\t\t\t\t\t\tnegativeValues[index] += value;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpositiveValues[index] += value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tvar values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n\t\t\t\t\tvar minVal = helpers.min(values);\n\t\t\t\t\tvar maxVal = helpers.max(values);\n\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n\t\t\tme.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX;\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar maxTicks;\n\t\t\tvar me = this;\n\t\t\tvar tickOpts = me.options.ticks;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.width / 50));\n\t\t\t} else {\n\t\t\t\t// The factor of 2 used to scale the font size has been experimentally determined.\n\t\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, defaults.global.defaultFontSize);\n\t\t\t\tmaxTicks = Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(me.height / (2 * tickFontSize)));\n\t\t\t}\n\n\t\t\treturn maxTicks;\n\t\t},\n\t\t// Called after the ticks are built. We need\n\t\thandleDirectionalChanges: function() {\n\t\t\tif (!this.isHorizontal()) {\n\t\t\t\t// We are in a vertical orientation. The top value is the highest. So reverse the array\n\t\t\t\tthis.ticks.reverse();\n\t\t\t}\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\t// Utils\n\t\tgetPixelForValue: function(value) {\n\t\t\t// This must be called after fit has been run so that\n\t\t\t// this.left, this.top, this.right, and this.bottom have been defined\n\t\t\tvar me = this;\n\t\t\tvar start = me.start;\n\n\t\t\tvar rightValue = +me.getRightValue(value);\n\t\t\tvar pixel;\n\t\t\tvar range = me.end - start;\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tpixel = me.left + (me.width / range * (rightValue - start));\n\t\t\t} else {\n\t\t\t\tpixel = me.bottom - (me.height / range * (rightValue - start));\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tvar innerDimension = isHorizontal ? me.width : me.height;\n\t\t\tvar offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n\t\t\treturn me.start + ((me.end - me.start) * offset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticksAsNumbers[index]);\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('linear', LinearScale, defaultConfig);\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t// Figure out what the max number of ticks we can support it is based on the size of\n\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t// the graph\n\tvar tickVal = valueOrDefault(generationOptions.min, Math.pow(10, Math.floor(helpers.log10(dataRange.min))));\n\n\tvar endExp = Math.floor(helpers.log10(dataRange.max));\n\tvar endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n\tvar exp, significand;\n\n\tif (tickVal === 0) {\n\t\texp = Math.floor(helpers.log10(dataRange.minNotZero));\n\t\tsignificand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n\n\t\tticks.push(tickVal);\n\t\ttickVal = significand * Math.pow(10, exp);\n\t} else {\n\t\texp = Math.floor(helpers.log10(tickVal));\n\t\tsignificand = Math.floor(tickVal / Math.pow(10, exp));\n\t}\n\tvar precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n\tdo {\n\t\tticks.push(tickVal);\n\n\t\t++significand;\n\t\tif (significand === 10) {\n\t\t\tsignificand = 1;\n\t\t\t++exp;\n\t\t\tprecision = exp >= 0 ? 1 : precision;\n\t\t}\n\n\t\ttickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n\t} while (exp < endExp || (exp === endExp && significand < endSignificand));\n\n\tvar lastTick = valueOrDefault(generationOptions.max, tickVal);\n\tticks.push(lastTick);\n\n\treturn ticks;\n}\n\n\nmodule.exports = function(Chart) {\n\n\tvar defaultConfig = {\n\t\tposition: 'left',\n\n\t\t// label settings\n\t\tticks: {\n\t\t\tcallback: Ticks.formatters.logarithmic\n\t\t}\n\t};\n\n\tvar LogarithmicScale = Scale.extend({\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar chart = me.chart;\n\t\t\tvar data = chart.data;\n\t\t\tvar datasets = data.datasets;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\t\t\tfunction IDMatches(meta) {\n\t\t\t\treturn isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n\t\t\t}\n\n\t\t\t// Calculate Range\n\t\t\tme.min = null;\n\t\t\tme.max = null;\n\t\t\tme.minNotZero = null;\n\n\t\t\tvar hasStacks = opts.stacked;\n\t\t\tif (hasStacks === undefined) {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tif (hasStacks) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) &&\n\t\t\t\t\t\tmeta.stack !== undefined) {\n\t\t\t\t\t\thasStacks = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif (opts.stacked || hasStacks) {\n\t\t\t\tvar valuesPerStack = {};\n\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tvar key = [\n\t\t\t\t\t\tmeta.type,\n\t\t\t\t\t\t// we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n\t\t\t\t\t\t((opts.stacked === undefined && meta.stack === undefined) ? datasetIndex : ''),\n\t\t\t\t\t\tmeta.stack\n\t\t\t\t\t].join('.');\n\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\tif (valuesPerStack[key] === undefined) {\n\t\t\t\t\t\t\tvaluesPerStack[key] = [];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar values = valuesPerStack[key];\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvalues[index] = values[index] || 0;\n\t\t\t\t\t\t\tvalues[index] += value;\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thelpers.each(valuesPerStack, function(valuesForType) {\n\t\t\t\t\tif (valuesForType.length > 0) {\n\t\t\t\t\t\tvar minVal = helpers.min(valuesForType);\n\t\t\t\t\t\tvar maxVal = helpers.max(valuesForType);\n\t\t\t\t\t\tme.min = me.min === null ? minVal : Math.min(me.min, minVal);\n\t\t\t\t\t\tme.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t} else {\n\t\t\t\thelpers.each(datasets, function(dataset, datasetIndex) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\t\t\tif (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n\t\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\t\t// invalid, hidden and negative values are ignored\n\t\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden || value < 0) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.min === null) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t} else if (value < me.min) {\n\t\t\t\t\t\t\t\tme.min = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (me.max === null) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t} else if (value > me.max) {\n\t\t\t\t\t\t\t\tme.max = value;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n\t\t\t\t\t\t\t\tme.minNotZero = value;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max\n\t\t\tthis.handleTickRangeOptions();\n\t\t},\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\t\tvar DEFAULT_MIN = 1;\n\t\t\tvar DEFAULT_MAX = 10;\n\n\t\t\tme.min = valueOrDefault(tickOpts.min, me.min);\n\t\t\tme.max = valueOrDefault(tickOpts.max, me.max);\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tif (me.min !== 0 && me.min !== null) {\n\t\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.min)) - 1);\n\t\t\t\t\tme.max = Math.pow(10, Math.floor(helpers.log10(me.max)) + 1);\n\t\t\t\t} else {\n\t\t\t\t\tme.min = DEFAULT_MIN;\n\t\t\t\t\tme.max = DEFAULT_MAX;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (me.min === null) {\n\t\t\t\tme.min = Math.pow(10, Math.floor(helpers.log10(me.max)) - 1);\n\t\t\t}\n\t\t\tif (me.max === null) {\n\t\t\t\tme.max = me.min !== 0\n\t\t\t\t\t? Math.pow(10, Math.floor(helpers.log10(me.min)) + 1)\n\t\t\t\t\t: DEFAULT_MAX;\n\t\t\t}\n\t\t\tif (me.minNotZero === null) {\n\t\t\t\tif (me.min > 0) {\n\t\t\t\t\tme.minNotZero = me.min;\n\t\t\t\t} else if (me.max < 1) {\n\t\t\t\t\tme.minNotZero = Math.pow(10, Math.floor(helpers.log10(me.max)));\n\t\t\t\t} else {\n\t\t\t\t\tme.minNotZero = DEFAULT_MIN;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar reverse = !me.isHorizontal();\n\n\t\t\tvar generationOptions = {\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(generationOptions, me);\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\treverse = !reverse;\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t\tif (reverse) {\n\t\t\t\tticks.reverse();\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tthis.tickValues = this.ticks.slice();\n\n\t\t\tScale.prototype.convertTicksToLabels.call(this);\n\t\t},\n\t\t// Get the correct tooltip label\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.tickValues[index]);\n\t\t},\n\t\t/**\n\t\t * Returns the value of the first tick.\n\t\t * @param {Number} value - The minimum not zero value.\n\t\t * @return {Number} The first tick value.\n\t\t * @private\n\t\t */\n\t\t_getFirstTickValue: function(value) {\n\t\t\tvar exp = Math.floor(helpers.log10(value));\n\t\t\tvar significand = Math.floor(value / Math.pow(10, exp));\n\n\t\t\treturn significand * Math.pow(10, exp);\n\t\t},\n\t\tgetPixelForValue: function(value) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar offset = 0;\n\t\t\tvar innerDimension, pixel, start, end, sign;\n\n\t\t\tvalue = +me.getRightValue(value);\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t\tsign = -1;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t\tsign = 1;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tpixel = reverse ? me.right : me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tsign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\t\t\t\tpixel = reverse ? me.top : me.bottom;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\toffset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tif (value !== 0) {\n\t\t\t\t\toffset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n\t\t\t\t}\n\t\t\t\tpixel += sign * offset;\n\t\t\t}\n\t\t\treturn pixel;\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar reverse = me.options.ticks.reverse;\n\t\t\tvar log10 = helpers.log10;\n\t\t\tvar firstTickValue = me._getFirstTickValue(me.minNotZero);\n\t\t\tvar innerDimension, start, end, value;\n\n\t\t\tif (reverse) {\n\t\t\t\tstart = me.end;\n\t\t\t\tend = me.start;\n\t\t\t} else {\n\t\t\t\tstart = me.start;\n\t\t\t\tend = me.end;\n\t\t\t}\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tinnerDimension = me.width;\n\t\t\t\tvalue = reverse ? me.right - pixel : pixel - me.left;\n\t\t\t} else {\n\t\t\t\tinnerDimension = me.height;\n\t\t\t\tvalue = reverse ? pixel - me.top : me.bottom - pixel;\n\t\t\t}\n\t\t\tif (value !== start) {\n\t\t\t\tif (start === 0) { // include zero tick\n\t\t\t\t\tvar offset = helpers.getValueOrDefault(\n\t\t\t\t\t\tme.options.ticks.fontSize,\n\t\t\t\t\t\tChart.defaults.global.defaultFontSize\n\t\t\t\t\t);\n\t\t\t\t\tvalue -= offset;\n\t\t\t\t\tinnerDimension -= offset;\n\t\t\t\t\tstart = firstTickValue;\n\t\t\t\t}\n\t\t\t\tvalue *= log10(end) - log10(start);\n\t\t\t\tvalue /= innerDimension;\n\t\t\t\tvalue = Math.pow(10, log10(start) + value);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('logarithmic', LogarithmicScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bar', {\n\thover: {\n\t\tmode: 'label'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\ttype: 'linear'\n\t\t}]\n\t}\n});\n\ndefaults._set('horizontalBar', {\n\thover: {\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'bottom'\n\t\t}],\n\n\t\tyAxes: [{\n\t\t\tposition: 'left',\n\t\t\ttype: 'category',\n\n\t\t\t// Specific to Horizontal Bar Controller\n\t\t\tcategoryPercentage: 0.8,\n\t\t\tbarPercentage: 0.9,\n\n\t\t\t// offset settings\n\t\t\toffset: true,\n\n\t\t\t// grid line settings\n\t\t\tgridLines: {\n\t\t\t\toffsetGridLines: true\n\t\t\t}\n\t\t}]\n\t},\n\n\telements: {\n\t\trectangle: {\n\t\t\tborderSkipped: 'left'\n\t\t}\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function(item, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\n\t\t\t\tif (item.length > 0) {\n\t\t\t\t\tif (item[0].yLabel) {\n\t\t\t\t\t\ttitle = item[0].yLabel;\n\t\t\t\t\t} else if (data.labels.length > 0 && item[0].index < data.labels.length) {\n\t\t\t\t\t\ttitle = data.labels[item[0].index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\treturn datasetLabel + ': ' + item.xLabel;\n\t\t\t}\n\t\t},\n\t\tmode: 'index',\n\t\taxis: 'y'\n\t}\n});\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(scale, pixels) {\n\tvar min = scale.isHorizontal() ? scale.width : scale.height;\n\tvar ticks = scale.getTicks();\n\tvar prev, curr, i, ilen;\n\n\tfor (i = 1, ilen = pixels.length; i < ilen; ++i) {\n\t\tmin = Math.min(min, pixels[i] - pixels[i - 1]);\n\t}\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tcurr = scale.getPixelForTick(i);\n\t\tmin = i > 0 ? Math.min(min, curr - prev) : min;\n\t\tprev = curr;\n\t}\n\n\treturn min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options) {\n\tvar thickness = options.barThickness;\n\tvar count = ruler.stackCount;\n\tvar curr = ruler.pixels[index];\n\tvar size, ratio;\n\n\tif (helpers.isNullOrUndef(thickness)) {\n\t\tsize = ruler.min * options.categoryPercentage;\n\t\tratio = options.barPercentage;\n\t} else {\n\t\t// When bar thickness is enforced, category and bar percentages are ignored.\n\t\t// Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n\t\t// and deprecate barPercentage since this value is ignored when thickness is absolute.\n\t\tsize = thickness * count;\n\t\tratio = 1;\n\t}\n\n\treturn {\n\t\tchunk: size / count,\n\t\tratio: ratio,\n\t\tstart: curr - (size / 2)\n\t};\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options) {\n\tvar pixels = ruler.pixels;\n\tvar curr = pixels[index];\n\tvar prev = index > 0 ? pixels[index - 1] : null;\n\tvar next = index < pixels.length - 1 ? pixels[index + 1] : null;\n\tvar percent = options.categoryPercentage;\n\tvar start, size;\n\n\tif (prev === null) {\n\t\t// first data: its size is double based on the next point or,\n\t\t// if it's also the last data, we use the scale end extremity.\n\t\tprev = curr - (next === null ? ruler.end - curr : next - curr);\n\t}\n\n\tif (next === null) {\n\t\t// last data: its size is also double based on the previous point.\n\t\tnext = curr + curr - prev;\n\t}\n\n\tstart = curr - ((curr - prev) / 2) * percent;\n\tsize = ((next - prev) / 2) * percent;\n\n\treturn {\n\t\tchunk: size / ruler.stackCount,\n\t\tratio: options.barPercentage,\n\t\tstart: start\n\t};\n}\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bar = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Rectangle,\n\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\t\t\tvar meta;\n\n\t\t\tChart.DatasetController.prototype.initialize.apply(me, arguments);\n\n\t\t\tmeta = me.getMeta();\n\t\t\tmeta.stack = me.getDataset().stack;\n\t\t\tmeta.bar = true;\n\t\t},\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar i, ilen;\n\n\t\t\tme._ruler = me.getRuler();\n\n\t\t\tfor (i = 0, ilen = rects.length; i < ilen; ++i) {\n\t\t\t\tme.updateElement(rects[i], i, reset);\n\t\t\t}\n\t\t},\n\n\t\tupdateElement: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar custom = rectangle.custom || {};\n\t\t\tvar rectangleOptions = chart.options.elements.rectangle;\n\n\t\t\trectangle._xScale = me.getScaleForId(meta.xAxisID);\n\t\t\trectangle._yScale = me.getScaleForId(meta.yAxisID);\n\t\t\trectangle._datasetIndex = me.index;\n\t\t\trectangle._index = index;\n\n\t\t\trectangle._model = {\n\t\t\t\tdatasetLabel: dataset.label,\n\t\t\t\tlabel: chart.data.labels[index],\n\t\t\t\tborderSkipped: custom.borderSkipped ? custom.borderSkipped : rectangleOptions.borderSkipped,\n\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.backgroundColor, index, rectangleOptions.backgroundColor),\n\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.borderColor, index, rectangleOptions.borderColor),\n\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.borderWidth, index, rectangleOptions.borderWidth)\n\t\t\t};\n\n\t\t\tme.updateElementGeometry(rectangle, index, reset);\n\n\t\t\trectangle.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tupdateElementGeometry: function(rectangle, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar model = rectangle._model;\n\t\t\tvar vscale = me.getValueScale();\n\t\t\tvar base = vscale.getBasePixel();\n\t\t\tvar horizontal = vscale.isHorizontal();\n\t\t\tvar ruler = me._ruler || me.getRuler();\n\t\t\tvar vpixels = me.calculateBarValuePixels(me.index, index);\n\t\t\tvar ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n\n\t\t\tmodel.horizontal = horizontal;\n\t\t\tmodel.base = reset ? base : vpixels.base;\n\t\t\tmodel.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n\t\t\tmodel.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n\t\t\tmodel.height = horizontal ? ipixels.size : undefined;\n\t\t\tmodel.width = horizontal ? undefined : ipixels.size;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScale: function() {\n\t\t\treturn this.getScaleForId(this.getValueScaleId());\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScale: function() {\n\t\t\treturn this.getScaleForId(this.getIndexScaleId());\n\t\t},\n\n\t\t/**\n\t\t * Returns the stacks based on groups and bar visibility.\n\t\t * @param {Number} [last] - The dataset index\n\t\t * @returns {Array} The stack list\n\t\t * @private\n\t\t */\n\t\t_getStacks: function(last) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar ilen = last === undefined ? chart.data.datasets.length : last + 1;\n\t\t\tvar stacks = [];\n\t\t\tvar i, meta;\n\n\t\t\tfor (i = 0; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tif (meta.bar && chart.isDatasetVisible(i) &&\n\t\t\t\t\t(stacked === false ||\n\t\t\t\t\t(stacked === true && stacks.indexOf(meta.stack) === -1) ||\n\t\t\t\t\t(stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1)))) {\n\t\t\t\t\tstacks.push(meta.stack);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn stacks;\n\t\t},\n\n\t\t/**\n\t\t * Returns the effective number of stacks based on groups and bar visibility.\n\t\t * @private\n\t\t */\n\t\tgetStackCount: function() {\n\t\t\treturn this._getStacks().length;\n\t\t},\n\n\t\t/**\n\t\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t\t * @param {Number} [datasetIndex] - The dataset index\n\t\t * @param {String} [name] - The stack name to find\n\t\t * @returns {Number} The stack index\n\t\t * @private\n\t\t */\n\t\tgetStackIndex: function(datasetIndex, name) {\n\t\t\tvar stacks = this._getStacks(datasetIndex);\n\t\t\tvar index = (name !== undefined)\n\t\t\t\t? stacks.indexOf(name)\n\t\t\t\t: -1; // indexOf returns -1 if element is not present\n\n\t\t\treturn (index === -1)\n\t\t\t\t? stacks.length - 1\n\t\t\t\t: index;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetRuler: function() {\n\t\t\tvar me = this;\n\t\t\tvar scale = me.getIndexScale();\n\t\t\tvar stackCount = me.getStackCount();\n\t\t\tvar datasetIndex = me.index;\n\t\t\tvar isHorizontal = scale.isHorizontal();\n\t\t\tvar start = isHorizontal ? scale.left : scale.top;\n\t\t\tvar end = start + (isHorizontal ? scale.width : scale.height);\n\t\t\tvar pixels = [];\n\t\t\tvar i, ilen, min;\n\n\t\t\tfor (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n\t\t\t\tpixels.push(scale.getPixelForValue(null, i, datasetIndex));\n\t\t\t}\n\n\t\t\tmin = helpers.isNullOrUndef(scale.options.barThickness)\n\t\t\t\t? computeMinSampleSize(scale, pixels)\n\t\t\t\t: -1;\n\n\t\t\treturn {\n\t\t\t\tmin: min,\n\t\t\t\tpixels: pixels,\n\t\t\t\tstart: start,\n\t\t\t\tend: end,\n\t\t\t\tstackCount: stackCount,\n\t\t\t\tscale: scale\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * Note: pixel values are not clamped to the scale area.\n\t\t * @private\n\t\t */\n\t\tcalculateBarValuePixels: function(datasetIndex, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar value = scale.getRightValue(datasets[datasetIndex].data[index]);\n\t\t\tvar stacked = scale.options.stacked;\n\t\t\tvar stack = meta.stack;\n\t\t\tvar start = 0;\n\t\t\tvar i, imeta, ivalue, base, head, size;\n\n\t\t\tif (stacked || (stacked === undefined && stack !== undefined)) {\n\t\t\t\tfor (i = 0; i < datasetIndex; ++i) {\n\t\t\t\t\timeta = chart.getDatasetMeta(i);\n\n\t\t\t\t\tif (imeta.bar &&\n\t\t\t\t\t\timeta.stack === stack &&\n\t\t\t\t\t\timeta.controller.getValueScaleId() === scale.id &&\n\t\t\t\t\t\tchart.isDatasetVisible(i)) {\n\n\t\t\t\t\t\tivalue = scale.getRightValue(datasets[i].data[index]);\n\t\t\t\t\t\tif ((value < 0 && ivalue < 0) || (value >= 0 && ivalue > 0)) {\n\t\t\t\t\t\t\tstart += ivalue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbase = scale.getPixelForValue(start);\n\t\t\thead = scale.getPixelForValue(start + value);\n\t\t\tsize = (head - base) / 2;\n\n\t\t\treturn {\n\t\t\t\tsize: size,\n\t\t\t\tbase: base,\n\t\t\t\thead: head,\n\t\t\t\tcenter: head + size / 2\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tcalculateBarIndexPixels: function(datasetIndex, index, ruler) {\n\t\t\tvar me = this;\n\t\t\tvar options = ruler.scale.options;\n\t\t\tvar range = options.barThickness === 'flex'\n\t\t\t\t? computeFlexCategoryTraits(index, ruler, options)\n\t\t\t\t: computeFitCategoryTraits(index, ruler, options);\n\n\t\t\tvar stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n\t\t\tvar center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n\t\t\tvar size = Math.min(\n\t\t\t\thelpers.valueOrDefault(options.maxBarThickness, Infinity),\n\t\t\t\trange.chunk * range.ratio);\n\n\t\t\treturn {\n\t\t\t\tbase: center - size / 2,\n\t\t\t\thead: center + size / 2,\n\t\t\t\tcenter: center,\n\t\t\t\tsize: size\n\t\t\t};\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar scale = me.getValueScale();\n\t\t\tvar rects = me.getMeta().data;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar ilen = rects.length;\n\t\t\tvar i = 0;\n\n\t\t\thelpers.canvas.clipArea(chart.ctx, chart.chartArea);\n\n\t\t\tfor (; i < ilen; ++i) {\n\t\t\t\tif (!isNaN(scale.getRightValue(dataset.data[i]))) {\n\t\t\t\t\trects[i].draw();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\thelpers.canvas.unclipArea(chart.ctx);\n\t\t},\n\t});\n\n\tChart.controllers.horizontalBar = Chart.controllers.bar.extend({\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetValueScaleId: function() {\n\t\t\treturn this.getMeta().xAxisID;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tgetIndexScaleId: function() {\n\t\t\treturn this.getMeta().yAxisID;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('radar', {\n\tscale: {\n\t\ttype: 'radialLinear'\n\t},\n\telements: {\n\t\tline: {\n\t\t\ttension: 0 // no bezier in radar\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.radar = Chart.DatasetController.extend({\n\n\t\tdatasetElementType: elements.Line,\n\n\t\tdataElementType: elements.Point,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar line = meta.dataset;\n\t\t\tvar points = meta.data;\n\t\t\tvar custom = line.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar lineElementOptions = me.chart.options.elements.line;\n\t\t\tvar scale = me.chart.scale;\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.tension !== undefined) && (dataset.lineTension === undefined)) {\n\t\t\t\tdataset.lineTension = dataset.tension;\n\t\t\t}\n\n\t\t\thelpers.extend(meta.dataset, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_scale: scale,\n\t\t\t\t// Data\n\t\t\t\t_children: points,\n\t\t\t\t_loop: true,\n\t\t\t\t// Model\n\t\t\t\t_model: {\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, lineElementOptions.tension),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : (dataset.backgroundColor || lineElementOptions.backgroundColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : (dataset.borderWidth || lineElementOptions.borderWidth),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : (dataset.borderColor || lineElementOptions.borderColor),\n\t\t\t\t\tfill: custom.fill ? custom.fill : (dataset.fill !== undefined ? dataset.fill : lineElementOptions.fill),\n\t\t\t\t\tborderCapStyle: custom.borderCapStyle ? custom.borderCapStyle : (dataset.borderCapStyle || lineElementOptions.borderCapStyle),\n\t\t\t\t\tborderDash: custom.borderDash ? custom.borderDash : (dataset.borderDash || lineElementOptions.borderDash),\n\t\t\t\t\tborderDashOffset: custom.borderDashOffset ? custom.borderDashOffset : (dataset.borderDashOffset || lineElementOptions.borderDashOffset),\n\t\t\t\t\tborderJoinStyle: custom.borderJoinStyle ? custom.borderJoinStyle : (dataset.borderJoinStyle || lineElementOptions.borderJoinStyle),\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmeta.dataset.pivot();\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t}, me);\n\n\t\t\t// Update bezier control points\n\t\t\tme.updateBezierControlPoints();\n\t\t},\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar scale = me.chart.scale;\n\t\t\tvar pointElementOptions = me.chart.options.elements.point;\n\t\t\tvar pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n\t\t\t// Compatibility: If the properties are defined with only the old name, use those values\n\t\t\tif ((dataset.radius !== undefined) && (dataset.pointRadius === undefined)) {\n\t\t\t\tdataset.pointRadius = dataset.radius;\n\t\t\t}\n\t\t\tif ((dataset.hitRadius !== undefined) && (dataset.pointHitRadius === undefined)) {\n\t\t\t\tdataset.pointHitRadius = dataset.hitRadius;\n\t\t\t}\n\n\t\t\thelpers.extend(point, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: reset ? scale.xCenter : pointPosition.x, // value not used in dataset scale, but we want a consistent API between scales\n\t\t\t\t\ty: reset ? scale.yCenter : pointPosition.y,\n\n\t\t\t\t\t// Appearance\n\t\t\t\t\ttension: custom.tension ? custom.tension : helpers.valueOrDefault(dataset.lineTension, me.chart.options.elements.line.tension),\n\t\t\t\t\tradius: custom.radius ? custom.radius : helpers.valueAtIndexOrDefault(dataset.pointRadius, index, pointElementOptions.radius),\n\t\t\t\t\tbackgroundColor: custom.backgroundColor ? custom.backgroundColor : helpers.valueAtIndexOrDefault(dataset.pointBackgroundColor, index, pointElementOptions.backgroundColor),\n\t\t\t\t\tborderColor: custom.borderColor ? custom.borderColor : helpers.valueAtIndexOrDefault(dataset.pointBorderColor, index, pointElementOptions.borderColor),\n\t\t\t\t\tborderWidth: custom.borderWidth ? custom.borderWidth : helpers.valueAtIndexOrDefault(dataset.pointBorderWidth, index, pointElementOptions.borderWidth),\n\t\t\t\t\tpointStyle: custom.pointStyle ? custom.pointStyle : helpers.valueAtIndexOrDefault(dataset.pointStyle, index, pointElementOptions.pointStyle),\n\t\t\t\t\trotation: custom.rotation ? custom.rotation : helpers.valueAtIndexOrDefault(dataset.pointRotation, index, pointElementOptions.rotation),\n\n\t\t\t\t\t// Tooltip\n\t\t\t\t\thitRadius: custom.hitRadius ? custom.hitRadius : helpers.valueAtIndexOrDefault(dataset.pointHitRadius, index, pointElementOptions.hitRadius)\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tpoint._model.skip = custom.skip ? custom.skip : (isNaN(point._model.x) || isNaN(point._model.y));\n\t\t},\n\t\tupdateBezierControlPoints: function() {\n\t\t\tvar chartArea = this.chart.chartArea;\n\t\t\tvar meta = this.getMeta();\n\n\t\t\thelpers.each(meta.data, function(point, index) {\n\t\t\t\tvar model = point._model;\n\t\t\t\tvar controlPoints = helpers.splineCurve(\n\t\t\t\t\thelpers.previousItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel,\n\t\t\t\t\thelpers.nextItem(meta.data, index, true)._model,\n\t\t\t\t\tmodel.tension\n\t\t\t\t);\n\n\t\t\t\t// Prevent the bezier going outside of the bounds of the graph\n\t\t\t\tmodel.controlPointPreviousX = Math.max(Math.min(controlPoints.previous.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointPreviousY = Math.max(Math.min(controlPoints.previous.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\tmodel.controlPointNextX = Math.max(Math.min(controlPoints.next.x, chartArea.right), chartArea.left);\n\t\t\t\tmodel.controlPointNextY = Math.max(Math.min(controlPoints.next.y, chartArea.bottom), chartArea.top);\n\n\t\t\t\t// Now pivot the point for animation\n\t\t\t\tpoint.pivot();\n\t\t\t});\n\t\t},\n\n\t\tsetHoverStyle: function(point) {\n\t\t\t// Point\n\t\t\tvar dataset = this.chart.data.datasets[point._datasetIndex];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar index = point._index;\n\t\t\tvar model = point._model;\n\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\n\t\t\tmodel.radius = custom.hoverRadius ? custom.hoverRadius : helpers.valueAtIndexOrDefault(dataset.pointHoverRadius, index, this.chart.options.elements.point.hoverRadius);\n\t\t\tmodel.backgroundColor = custom.hoverBackgroundColor ? custom.hoverBackgroundColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBackgroundColor, index, helpers.getHoverColor(model.backgroundColor));\n\t\t\tmodel.borderColor = custom.hoverBorderColor ? custom.hoverBorderColor : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderColor, index, helpers.getHoverColor(model.borderColor));\n\t\t\tmodel.borderWidth = custom.hoverBorderWidth ? custom.hoverBorderWidth : helpers.valueAtIndexOrDefault(dataset.pointHoverBorderWidth, index, model.borderWidth);\n\t\t},\n\t});\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('bubble', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\ttype: 'linear', // bubble should probably use a linear scale by default\n\t\t\tposition: 'bottom',\n\t\t\tid: 'x-axis-0' // need an ID so datasets can reference the scale\n\t\t}],\n\t\tyAxes: [{\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left',\n\t\t\tid: 'y-axis-0'\n\t\t}]\n\t},\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\t// Title doesn't make sense for scatter since we format the data as a point\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\tvar datasetLabel = data.datasets[item.datasetIndex].label || '';\n\t\t\t\tvar dataPoint = data.datasets[item.datasetIndex].data[item.index];\n\t\t\t\treturn datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.bubble = Chart.DatasetController.extend({\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tdataElementType: elements.Point,\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar points = meta.data;\n\n\t\t\t// Update Points\n\t\t\thelpers.each(points, function(point, index) {\n\t\t\t\tme.updateElement(point, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tupdateElement: function(point, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar xScale = me.getScaleForId(meta.xAxisID);\n\t\t\tvar yScale = me.getScaleForId(meta.yAxisID);\n\t\t\tvar options = me._resolveElementOptions(point, index);\n\t\t\tvar data = me.getDataset().data[index];\n\t\t\tvar dsIndex = me.index;\n\n\t\t\tvar x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n\t\t\tvar y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n\n\t\t\tpoint._xScale = xScale;\n\t\t\tpoint._yScale = yScale;\n\t\t\tpoint._options = options;\n\t\t\tpoint._datasetIndex = dsIndex;\n\t\t\tpoint._index = index;\n\t\t\tpoint._model = {\n\t\t\t\tbackgroundColor: options.backgroundColor,\n\t\t\t\tborderColor: options.borderColor,\n\t\t\t\tborderWidth: options.borderWidth,\n\t\t\t\thitRadius: options.hitRadius,\n\t\t\t\tpointStyle: options.pointStyle,\n\t\t\t\trotation: options.rotation,\n\t\t\t\tradius: reset ? 0 : options.radius,\n\t\t\t\tskip: custom.skip || isNaN(x) || isNaN(y),\n\t\t\t\tx: x,\n\t\t\t\ty: y,\n\t\t\t};\n\n\t\t\tpoint.pivot();\n\t\t},\n\n\t\t/**\n\t\t * @protected\n\t\t */\n\t\tsetHoverStyle: function(point) {\n\t\t\tvar model = point._model;\n\t\t\tvar options = point._options;\n\t\t\tpoint.$previousStyle = {\n\t\t\t\tbackgroundColor: model.backgroundColor,\n\t\t\t\tborderColor: model.borderColor,\n\t\t\t\tborderWidth: model.borderWidth,\n\t\t\t\tradius: model.radius\n\t\t\t};\n\t\t\tmodel.backgroundColor = helpers.valueOrDefault(options.hoverBackgroundColor, helpers.getHoverColor(options.backgroundColor));\n\t\t\tmodel.borderColor = helpers.valueOrDefault(options.hoverBorderColor, helpers.getHoverColor(options.borderColor));\n\t\t\tmodel.borderWidth = helpers.valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n\t\t\tmodel.radius = options.radius + options.hoverRadius;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_resolveElementOptions: function(point, index) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar datasets = chart.data.datasets;\n\t\t\tvar dataset = datasets[me.index];\n\t\t\tvar custom = point.custom || {};\n\t\t\tvar options = chart.options.elements.point;\n\t\t\tvar resolve = helpers.options.resolve;\n\t\t\tvar data = dataset.data[index];\n\t\t\tvar values = {};\n\t\t\tvar i, ilen, key;\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\tvar keys = [\n\t\t\t\t'backgroundColor',\n\t\t\t\t'borderColor',\n\t\t\t\t'borderWidth',\n\t\t\t\t'hoverBackgroundColor',\n\t\t\t\t'hoverBorderColor',\n\t\t\t\t'hoverBorderWidth',\n\t\t\t\t'hoverRadius',\n\t\t\t\t'hitRadius',\n\t\t\t\t'pointStyle',\n\t\t\t\t'rotation'\n\t\t\t];\n\n\t\t\tfor (i = 0, ilen = keys.length; i < ilen; ++i) {\n\t\t\t\tkey = keys[i];\n\t\t\t\tvalues[key] = resolve([\n\t\t\t\t\tcustom[key],\n\t\t\t\t\tdataset[key],\n\t\t\t\t\toptions[key]\n\t\t\t\t], context, index);\n\t\t\t}\n\n\t\t\t// Custom radius resolution\n\t\t\tvalues.radius = resolve([\n\t\t\t\tcustom.radius,\n\t\t\t\tdata ? data.r : undefined,\n\t\t\t\tdataset.radius,\n\t\t\t\toptions.radius\n\t\t\t], context, index);\n\t\t\treturn values;\n\t\t}\n\t});\n};\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\nvar Ticks = require('./core.ticks');\n\ndefaults._set('scale', {\n\tdisplay: true,\n\tposition: 'left',\n\toffset: false,\n\n\t// grid line settings\n\tgridLines: {\n\t\tdisplay: true,\n\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\tlineWidth: 1,\n\t\tdrawBorder: true,\n\t\tdrawOnChartArea: true,\n\t\tdrawTicks: true,\n\t\ttickMarkLength: 10,\n\t\tzeroLineWidth: 1,\n\t\tzeroLineColor: 'rgba(0,0,0,0.25)',\n\t\tzeroLineBorderDash: [],\n\t\tzeroLineBorderDashOffset: 0.0,\n\t\toffsetGridLines: false,\n\t\tborderDash: [],\n\t\tborderDashOffset: 0.0\n\t},\n\n\t// scale label\n\tscaleLabel: {\n\t\t// display property\n\t\tdisplay: false,\n\n\t\t// actual label\n\t\tlabelString: '',\n\n\t\t// line height\n\t\tlineHeight: 1.2,\n\n\t\t// top/bottom padding\n\t\tpadding: {\n\t\t\ttop: 4,\n\t\t\tbottom: 4\n\t\t}\n\t},\n\n\t// label settings\n\tticks: {\n\t\tbeginAtZero: false,\n\t\tminRotation: 0,\n\t\tmaxRotation: 50,\n\t\tmirror: false,\n\t\tpadding: 0,\n\t\treverse: false,\n\t\tdisplay: true,\n\t\tautoSkip: true,\n\t\tautoSkipPadding: 0,\n\t\tlabelOffset: 0,\n\t\t// We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n\t\tcallback: Ticks.formatters.values,\n\t\tminor: {},\n\t\tmajor: {}\n\t}\n});\n\nfunction labelsFromTicks(ticks) {\n\tvar labels = [];\n\tvar i, ilen;\n\n\tfor (i = 0, ilen = ticks.length; i < ilen; ++i) {\n\t\tlabels.push(ticks[i].label);\n\t}\n\n\treturn labels;\n}\n\nfunction getLineValue(scale, index, offsetGridLines) {\n\tvar lineValue = scale.getPixelForTick(index);\n\n\tif (offsetGridLines) {\n\t\tif (index === 0) {\n\t\t\tlineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n\t\t} else {\n\t\t\tlineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n\t\t}\n\t}\n\treturn lineValue;\n}\n\nfunction computeTextSize(context, tick, font) {\n\treturn helpers.isArray(tick) ?\n\t\thelpers.longestText(context, font, tick) :\n\t\tcontext.measureText(tick).width;\n}\n\nfunction parseFontOptions(options) {\n\tvar valueOrDefault = helpers.valueOrDefault;\n\tvar globalDefaults = defaults.global;\n\tvar size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n\tvar style = valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle);\n\tvar family = valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily);\n\n\treturn {\n\t\tsize: size,\n\t\tstyle: style,\n\t\tfamily: family,\n\t\tfont: helpers.fontString(size, style, family)\n\t};\n}\n\nfunction parseLineHeight(options) {\n\treturn helpers.options.toLineHeight(\n\t\thelpers.valueOrDefault(options.lineHeight, 1.2),\n\t\thelpers.valueOrDefault(options.fontSize, defaults.global.defaultFontSize));\n}\n\nmodule.exports = Element.extend({\n\t/**\n\t * Get the padding needed for the scale\n\t * @method getPadding\n\t * @private\n\t * @returns {Padding} the necessary padding\n\t */\n\tgetPadding: function() {\n\t\tvar me = this;\n\t\treturn {\n\t\t\tleft: me.paddingLeft || 0,\n\t\t\ttop: me.paddingTop || 0,\n\t\t\tright: me.paddingRight || 0,\n\t\t\tbottom: me.paddingBottom || 0\n\t\t};\n\t},\n\n\t/**\n\t * Returns the scale tick objects ({label, major})\n\t * @since 2.7\n\t */\n\tgetTicks: function() {\n\t\treturn this._ticks;\n\t},\n\n\t// These methods are ordered by lifecyle. Utilities then follow.\n\t// Any function defined here is inherited by all scale types.\n\t// Any function can be extended by the scale type\n\n\tmergeTicksOptions: function() {\n\t\tvar ticks = this.options.ticks;\n\t\tif (ticks.minor === false) {\n\t\t\tticks.minor = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tif (ticks.major === false) {\n\t\t\tticks.major = {\n\t\t\t\tdisplay: false\n\t\t\t};\n\t\t}\n\t\tfor (var key in ticks) {\n\t\t\tif (key !== 'major' && key !== 'minor') {\n\t\t\t\tif (typeof ticks.minor[key] === 'undefined') {\n\t\t\t\t\tticks.minor[key] = ticks[key];\n\t\t\t\t}\n\t\t\t\tif (typeof ticks.major[key] === 'undefined') {\n\t\t\t\t\tticks.major[key] = ticks[key];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\tbeforeUpdate: function() {\n\t\thelpers.callback(this.options.beforeUpdate, [this]);\n\t},\n\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\t\tvar i, ilen, labels, label, ticks, tick;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = helpers.extend({\n\t\t\tleft: 0,\n\t\t\tright: 0,\n\t\t\ttop: 0,\n\t\t\tbottom: 0\n\t\t}, margins);\n\t\tme.longestTextCache = me.longestTextCache || {};\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\n\t\t// Data min/max\n\t\tme.beforeDataLimits();\n\t\tme.determineDataLimits();\n\t\tme.afterDataLimits();\n\n\t\t// Ticks - `this.ticks` is now DEPRECATED!\n\t\t// Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n\t\t// and must not be accessed directly from outside this class. `this.ticks` being\n\t\t// around for long time and not marked as private, we can't change its structure\n\t\t// without unexpected breaking changes. If you need to access the scale ticks,\n\t\t// use scale.getTicks() instead.\n\n\t\tme.beforeBuildTicks();\n\n\t\t// New implementations should return an array of objects but for BACKWARD COMPAT,\n\t\t// we still support no return (`this.ticks` internally set by calling this method).\n\t\tticks = me.buildTicks() || [];\n\n\t\tme.afterBuildTicks();\n\n\t\tme.beforeTickToLabelConversion();\n\n\t\t// New implementations should return the formatted tick labels but for BACKWARD\n\t\t// COMPAT, we still support no return (`this.ticks` internally changed by calling\n\t\t// this method and supposed to contain only string values).\n\t\tlabels = me.convertTicksToLabels(ticks) || me.ticks;\n\n\t\tme.afterTickToLabelConversion();\n\n\t\tme.ticks = labels;   // BACKWARD COMPATIBILITY\n\n\t\t// IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n\n\t\t// BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\t\tfor (i = 0, ilen = labels.length; i < ilen; ++i) {\n\t\t\tlabel = labels[i];\n\t\t\ttick = ticks[i];\n\t\t\tif (!tick) {\n\t\t\t\tticks.push(tick = {\n\t\t\t\t\tlabel: label,\n\t\t\t\t\tmajor: false\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\ttick.label = label;\n\t\t\t}\n\t\t}\n\n\t\tme._ticks = ticks;\n\n\t\t// Tick Rotation\n\t\tme.beforeCalculateTickRotation();\n\t\tme.calculateTickRotation();\n\t\tme.afterCalculateTickRotation();\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: function() {\n\t\thelpers.callback(this.options.afterUpdate, [this]);\n\t},\n\n\t//\n\n\tbeforeSetDimensions: function() {\n\t\thelpers.callback(this.options.beforeSetDimensions, [this]);\n\t},\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\t},\n\tafterSetDimensions: function() {\n\t\thelpers.callback(this.options.afterSetDimensions, [this]);\n\t},\n\n\t// Data limits\n\tbeforeDataLimits: function() {\n\t\thelpers.callback(this.options.beforeDataLimits, [this]);\n\t},\n\tdetermineDataLimits: helpers.noop,\n\tafterDataLimits: function() {\n\t\thelpers.callback(this.options.afterDataLimits, [this]);\n\t},\n\n\t//\n\tbeforeBuildTicks: function() {\n\t\thelpers.callback(this.options.beforeBuildTicks, [this]);\n\t},\n\tbuildTicks: helpers.noop,\n\tafterBuildTicks: function() {\n\t\thelpers.callback(this.options.afterBuildTicks, [this]);\n\t},\n\n\tbeforeTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.beforeTickToLabelConversion, [this]);\n\t},\n\tconvertTicksToLabels: function() {\n\t\tvar me = this;\n\t\t// Convert ticks to strings\n\t\tvar tickOpts = me.options.ticks;\n\t\tme.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n\t},\n\tafterTickToLabelConversion: function() {\n\t\thelpers.callback(this.options.afterTickToLabelConversion, [this]);\n\t},\n\n\t//\n\n\tbeforeCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.beforeCalculateTickRotation, [this]);\n\t},\n\tcalculateTickRotation: function() {\n\t\tvar me = this;\n\t\tvar context = me.ctx;\n\t\tvar tickOpts = me.options.ticks;\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\t// Get the width of each grid by calculating the difference\n\t\t// between x offsets between 0 and 1.\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tcontext.font = tickFont.font;\n\n\t\tvar labelRotation = tickOpts.minRotation || 0;\n\n\t\tif (labels.length && me.options.display && me.isHorizontal()) {\n\t\t\tvar originalLabelWidth = helpers.longestText(context, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar labelWidth = originalLabelWidth;\n\t\t\tvar cosRotation, sinRotation;\n\n\t\t\t// Allow 3 pixels x2 padding either side for label readability\n\t\t\tvar tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6;\n\n\t\t\t// Max label rotation can be set or default to 90 - also act as a loop counter\n\t\t\twhile (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n\t\t\t\tvar angleRadians = helpers.toRadians(labelRotation);\n\t\t\t\tcosRotation = Math.cos(angleRadians);\n\t\t\t\tsinRotation = Math.sin(angleRadians);\n\n\t\t\t\tif (sinRotation * originalLabelWidth > me.maxHeight) {\n\t\t\t\t\t// go back one step\n\t\t\t\t\tlabelRotation--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlabelRotation++;\n\t\t\t\tlabelWidth = cosRotation * originalLabelWidth;\n\t\t\t}\n\t\t}\n\n\t\tme.labelRotation = labelRotation;\n\t},\n\tafterCalculateTickRotation: function() {\n\t\thelpers.callback(this.options.afterCalculateTickRotation, [this]);\n\t},\n\n\t//\n\n\tbeforeFit: function() {\n\t\thelpers.callback(this.options.beforeFit, [this]);\n\t},\n\tfit: function() {\n\t\tvar me = this;\n\t\t// Reset\n\t\tvar minSize = me.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\n\t\tvar labels = labelsFromTicks(me._ticks);\n\n\t\tvar opts = me.options;\n\t\tvar tickOpts = opts.ticks;\n\t\tvar scaleLabelOpts = opts.scaleLabel;\n\t\tvar gridLineOpts = opts.gridLines;\n\t\tvar display = opts.display;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar tickFont = parseFontOptions(tickOpts);\n\t\tvar tickMarkLength = opts.gridLines.tickMarkLength;\n\n\t\t// Width\n\t\tif (isHorizontal) {\n\t\t\t// subtract the margins to line up with the chartArea if we are a full width scale\n\t\t\tminSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n\t\t} else {\n\t\t\tminSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t}\n\n\t\t// height\n\t\tif (isHorizontal) {\n\t\t\tminSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n\t\t} else {\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\t// Are we showing a title for the scale?\n\t\tif (scaleLabelOpts.display && display) {\n\t\t\tvar scaleLabelLineHeight = parseLineHeight(scaleLabelOpts);\n\t\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabelOpts.padding);\n\t\t\tvar deltaHeight = scaleLabelLineHeight + scaleLabelPadding.height;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize.height += deltaHeight;\n\t\t\t} else {\n\t\t\t\tminSize.width += deltaHeight;\n\t\t\t}\n\t\t}\n\n\t\t// Don't bother fitting the ticks if we are not showing them\n\t\tif (tickOpts.display && display) {\n\t\t\tvar largestTextWidth = helpers.longestText(me.ctx, tickFont.font, labels, me.longestTextCache);\n\t\t\tvar tallestLabelHeightInLines = helpers.numberOfLabelLines(labels);\n\t\t\tvar lineSpace = tickFont.size * 0.5;\n\t\t\tvar tickPadding = me.options.ticks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\t// A horizontal axis is more constrained by the height.\n\t\t\t\tme.longestLabelWidth = largestTextWidth;\n\n\t\t\t\tvar angleRadians = helpers.toRadians(me.labelRotation);\n\t\t\t\tvar cosRotation = Math.cos(angleRadians);\n\t\t\t\tvar sinRotation = Math.sin(angleRadians);\n\n\t\t\t\t// TODO - improve this calculation\n\t\t\t\tvar labelHeight = (sinRotation * largestTextWidth)\n\t\t\t\t\t+ (tickFont.size * tallestLabelHeightInLines)\n\t\t\t\t\t+ (lineSpace * (tallestLabelHeightInLines - 1))\n\t\t\t\t\t+ lineSpace; // padding\n\n\t\t\t\tminSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n\n\t\t\t\tme.ctx.font = tickFont.font;\n\t\t\t\tvar firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.font);\n\t\t\t\tvar lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.font);\n\n\t\t\t\t// Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n\t\t\t\t// which means that the right padding is dominated by the font height\n\t\t\t\tif (me.labelRotation !== 0) {\n\t\t\t\t\tme.paddingLeft = opts.position === 'bottom' ? (cosRotation * firstLabelWidth) + 3 : (cosRotation * lineSpace) + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = opts.position === 'bottom' ? (cosRotation * lineSpace) + 3 : (cosRotation * lastLabelWidth) + 3;\n\t\t\t\t} else {\n\t\t\t\t\tme.paddingLeft = firstLabelWidth / 2 + 3; // add 3 px to move away from canvas edges\n\t\t\t\t\tme.paddingRight = lastLabelWidth / 2 + 3;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// A vertical axis is more constrained by the width. Labels are the\n\t\t\t\t// dominant factor here, so get that length first and account for padding\n\t\t\t\tif (tickOpts.mirror) {\n\t\t\t\t\tlargestTextWidth = 0;\n\t\t\t\t} else {\n\t\t\t\t\t// use lineSpace for consistency with horizontal axis\n\t\t\t\t\t// tickPadding is not implemented for horizontal\n\t\t\t\t\tlargestTextWidth += tickPadding + lineSpace;\n\t\t\t\t}\n\n\t\t\t\tminSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n\n\t\t\t\tme.paddingTop = tickFont.size / 2;\n\t\t\t\tme.paddingBottom = tickFont.size / 2;\n\t\t\t}\n\t\t}\n\n\t\tme.handleMargins();\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\t},\n\n\t/**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n\thandleMargins: function() {\n\t\tvar me = this;\n\t\tif (me.margins) {\n\t\t\tme.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n\t\t\tme.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n\t\t\tme.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n\t\t\tme.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n\t\t}\n\t},\n\n\tafterFit: function() {\n\t\thelpers.callback(this.options.afterFit, [this]);\n\t},\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\treturn this.options.position === 'top' || this.options.position === 'bottom';\n\t},\n\tisFullWidth: function() {\n\t\treturn (this.options.fullWidth);\n\t},\n\n\t// Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n\tgetRightValue: function(rawValue) {\n\t\t// Null and undefined values first\n\t\tif (helpers.isNullOrUndef(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\t\tif (typeof rawValue === 'number' && !isFinite(rawValue)) {\n\t\t\treturn NaN;\n\t\t}\n\t\t// If it is in fact an object, dive in one more level\n\t\tif (rawValue) {\n\t\t\tif (this.isHorizontal()) {\n\t\t\t\tif (rawValue.x !== undefined) {\n\t\t\t\t\treturn this.getRightValue(rawValue.x);\n\t\t\t\t}\n\t\t\t} else if (rawValue.y !== undefined) {\n\t\t\t\treturn this.getRightValue(rawValue.y);\n\t\t\t}\n\t\t}\n\n\t\t// Value is good, return it\n\t\treturn rawValue;\n\t},\n\n\t/**\n\t * Used to get the value to display in the tooltip for the data at the given index\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetLabelForIndex: helpers.noop,\n\n\t/**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param value\n\t * @param index\n\t * @param datasetIndex\n\t */\n\tgetPixelForValue: helpers.noop,\n\n\t/**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param pixel\n\t */\n\tgetValueForPixel: helpers.noop,\n\n\t/**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForTick: function(index) {\n\t\tvar me = this;\n\t\tvar offset = me.options.offset;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar tickWidth = innerWidth / Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar pixel = (tickWidth * index) + me.paddingLeft;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel += tickWidth / 2;\n\t\t\t}\n\n\t\t\tvar finalVal = me.left + Math.round(pixel);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\tvar innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n\t\treturn me.top + (index * (innerHeight / (me._ticks.length - 1)));\n\t},\n\n\t/**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetPixelForDecimal: function(decimal) {\n\t\tvar me = this;\n\t\tif (me.isHorizontal()) {\n\t\t\tvar innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n\t\t\tvar valueOffset = (innerWidth * decimal) + me.paddingLeft;\n\n\t\t\tvar finalVal = me.left + Math.round(valueOffset);\n\t\t\tfinalVal += me.isFullWidth() ? me.margins.left : 0;\n\t\t\treturn finalVal;\n\t\t}\n\t\treturn me.top + (decimal * me.height);\n\t},\n\n\t/**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t */\n\tgetBasePixel: function() {\n\t\treturn this.getPixelForValue(this.getBaseValue());\n\t},\n\n\tgetBaseValue: function() {\n\t\tvar me = this;\n\t\tvar min = me.min;\n\t\tvar max = me.max;\n\n\t\treturn me.beginAtZero ? 0 :\n\t\t\tmin < 0 && max < 0 ? max :\n\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t0;\n\t},\n\n\t/**\n\t * Returns a subset of ticks to be plotted to avoid overlapping labels.\n\t * @private\n\t */\n\t_autoSkip: function(ticks) {\n\t\tvar skipRatio;\n\t\tvar me = this;\n\t\tvar isHorizontal = me.isHorizontal();\n\t\tvar optionTicks = me.options.ticks.minor;\n\t\tvar tickCount = ticks.length;\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\t\tvar cosRotation = Math.cos(labelRotationRadians);\n\t\tvar longestRotatedLabel = me.longestLabelWidth * cosRotation;\n\t\tvar result = [];\n\t\tvar i, tick, shouldSkip;\n\n\t\t// figure out the maximum number of gridlines to show\n\t\tvar maxTicks;\n\t\tif (optionTicks.maxTicksLimit) {\n\t\t\tmaxTicks = optionTicks.maxTicksLimit;\n\t\t}\n\n\t\tif (isHorizontal) {\n\t\t\tskipRatio = false;\n\n\t\t\tif ((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount > (me.width - (me.paddingLeft + me.paddingRight))) {\n\t\t\t\tskipRatio = 1 + Math.floor(((longestRotatedLabel + optionTicks.autoSkipPadding) * tickCount) / (me.width - (me.paddingLeft + me.paddingRight)));\n\t\t\t}\n\n\t\t\t// if they defined a max number of optionTicks,\n\t\t\t// increase skipRatio until that number is met\n\t\t\tif (maxTicks && tickCount > maxTicks) {\n\t\t\t\tskipRatio = Math.max(skipRatio, Math.floor(tickCount / maxTicks));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < tickCount; i++) {\n\t\t\ttick = ticks[i];\n\n\t\t\t// Since we always show the last tick,we need may need to hide the last shown one before\n\t\t\tshouldSkip = (skipRatio > 1 && i % skipRatio > 0) || (i % skipRatio === 0 && i + skipRatio >= tickCount);\n\t\t\tif (shouldSkip && i !== tickCount - 1) {\n\t\t\t\t// leave tick in place but make sure it's not displayed (#4635)\n\t\t\t\tdelete tick.label;\n\t\t\t}\n\t\t\tresult.push(tick);\n\t\t}\n\t\treturn result;\n\t},\n\n\t// Actually draw the scale on the canvas\n\t// @param {rectangle} chartArea : the area of the chart to draw full grid lines on\n\tdraw: function(chartArea) {\n\t\tvar me = this;\n\t\tvar options = me.options;\n\t\tif (!options.display) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar context = me.ctx;\n\t\tvar globalDefaults = defaults.global;\n\t\tvar optionTicks = options.ticks.minor;\n\t\tvar optionMajorTicks = options.ticks.major || optionTicks;\n\t\tvar gridLines = options.gridLines;\n\t\tvar scaleLabel = options.scaleLabel;\n\n\t\tvar isRotated = me.labelRotation !== 0;\n\t\tvar isHorizontal = me.isHorizontal();\n\n\t\tvar ticks = optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n\t\tvar tickFontColor = helpers.valueOrDefault(optionTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar tickFont = parseFontOptions(optionTicks);\n\t\tvar majorTickFontColor = helpers.valueOrDefault(optionMajorTicks.fontColor, globalDefaults.defaultFontColor);\n\t\tvar majorTickFont = parseFontOptions(optionMajorTicks);\n\n\t\tvar tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n\n\t\tvar scaleLabelFontColor = helpers.valueOrDefault(scaleLabel.fontColor, globalDefaults.defaultFontColor);\n\t\tvar scaleLabelFont = parseFontOptions(scaleLabel);\n\t\tvar scaleLabelPadding = helpers.options.toPadding(scaleLabel.padding);\n\t\tvar labelRotationRadians = helpers.toRadians(me.labelRotation);\n\n\t\tvar itemsToDraw = [];\n\n\t\tvar axisWidth = me.options.gridLines.lineWidth;\n\t\tvar xTickStart = options.position === 'right' ? me.left : me.right - axisWidth - tl;\n\t\tvar xTickEnd = options.position === 'right' ? me.left + tl : me.right;\n\t\tvar yTickStart = options.position === 'bottom' ? me.top + axisWidth : me.bottom - tl - axisWidth;\n\t\tvar yTickEnd = options.position === 'bottom' ? me.top + axisWidth + tl : me.bottom + axisWidth;\n\n\t\thelpers.each(ticks, function(tick, index) {\n\t\t\t// autoskipper skipped this tick (#4635)\n\t\t\tif (helpers.isNullOrUndef(tick.label)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar label = tick.label;\n\t\t\tvar lineWidth, lineColor, borderDash, borderDashOffset;\n\t\t\tif (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n\t\t\t\t// Draw the first index specially\n\t\t\t\tlineWidth = gridLines.zeroLineWidth;\n\t\t\t\tlineColor = gridLines.zeroLineColor;\n\t\t\t\tborderDash = gridLines.zeroLineBorderDash;\n\t\t\t\tborderDashOffset = gridLines.zeroLineBorderDashOffset;\n\t\t\t} else {\n\t\t\t\tlineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, index);\n\t\t\t\tlineColor = helpers.valueAtIndexOrDefault(gridLines.color, index);\n\t\t\t\tborderDash = helpers.valueOrDefault(gridLines.borderDash, globalDefaults.borderDash);\n\t\t\t\tborderDashOffset = helpers.valueOrDefault(gridLines.borderDashOffset, globalDefaults.borderDashOffset);\n\t\t\t}\n\n\t\t\t// Common properties\n\t\t\tvar tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY;\n\t\t\tvar textAlign = 'middle';\n\t\t\tvar textBaseline = 'middle';\n\t\t\tvar tickPadding = optionTicks.padding;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tvar labelYOffset = tl + tickPadding;\n\n\t\t\t\tif (options.position === 'bottom') {\n\t\t\t\t\t// bottom\n\t\t\t\t\ttextBaseline = !isRotated ? 'top' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'right';\n\t\t\t\t\tlabelY = me.top + labelYOffset;\n\t\t\t\t} else {\n\t\t\t\t\t// top\n\t\t\t\t\ttextBaseline = !isRotated ? 'bottom' : 'middle';\n\t\t\t\t\ttextAlign = !isRotated ? 'center' : 'left';\n\t\t\t\t\tlabelY = me.bottom - labelYOffset;\n\t\t\t\t}\n\n\t\t\t\tvar xLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (xLineValue < me.left) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\txLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelX = me.getPixelForTick(index) + optionTicks.labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n\t\t\t\ttx1 = tx2 = x1 = x2 = xLineValue;\n\t\t\t\tty1 = yTickStart;\n\t\t\t\tty2 = yTickEnd;\n\t\t\t\ty1 = chartArea.top;\n\t\t\t\ty2 = chartArea.bottom + axisWidth;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tvar labelXOffset;\n\n\t\t\t\tif (optionTicks.mirror) {\n\t\t\t\t\ttextAlign = isLeft ? 'left' : 'right';\n\t\t\t\t\tlabelXOffset = tickPadding;\n\t\t\t\t} else {\n\t\t\t\t\ttextAlign = isLeft ? 'right' : 'left';\n\t\t\t\t\tlabelXOffset = tl + tickPadding;\n\t\t\t\t}\n\n\t\t\t\tlabelX = isLeft ? me.right - labelXOffset : me.left + labelXOffset;\n\n\t\t\t\tvar yLineValue = getLineValue(me, index, gridLines.offsetGridLines && ticks.length > 1);\n\t\t\t\tif (yLineValue < me.top) {\n\t\t\t\t\tlineColor = 'rgba(0,0,0,0)';\n\t\t\t\t}\n\t\t\t\tyLineValue += helpers.aliasPixel(lineWidth);\n\n\t\t\t\tlabelY = me.getPixelForTick(index) + optionTicks.labelOffset;\n\n\t\t\t\ttx1 = xTickStart;\n\t\t\t\ttx2 = xTickEnd;\n\t\t\t\tx1 = chartArea.left;\n\t\t\t\tx2 = chartArea.right + axisWidth;\n\t\t\t\tty1 = ty2 = y1 = y2 = yLineValue;\n\t\t\t}\n\n\t\t\titemsToDraw.push({\n\t\t\t\ttx1: tx1,\n\t\t\t\tty1: ty1,\n\t\t\t\ttx2: tx2,\n\t\t\t\tty2: ty2,\n\t\t\t\tx1: x1,\n\t\t\t\ty1: y1,\n\t\t\t\tx2: x2,\n\t\t\t\ty2: y2,\n\t\t\t\tlabelX: labelX,\n\t\t\t\tlabelY: labelY,\n\t\t\t\tglWidth: lineWidth,\n\t\t\t\tglColor: lineColor,\n\t\t\t\tglBorderDash: borderDash,\n\t\t\t\tglBorderDashOffset: borderDashOffset,\n\t\t\t\trotation: -1 * labelRotationRadians,\n\t\t\t\tlabel: label,\n\t\t\t\tmajor: tick.major,\n\t\t\t\ttextBaseline: textBaseline,\n\t\t\t\ttextAlign: textAlign\n\t\t\t});\n\t\t});\n\n\t\t// Draw all of the tick labels, tick marks, and grid lines at the correct places\n\t\thelpers.each(itemsToDraw, function(itemToDraw) {\n\t\t\tif (gridLines.display) {\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.lineWidth = itemToDraw.glWidth;\n\t\t\t\tcontext.strokeStyle = itemToDraw.glColor;\n\t\t\t\tif (context.setLineDash) {\n\t\t\t\t\tcontext.setLineDash(itemToDraw.glBorderDash);\n\t\t\t\t\tcontext.lineDashOffset = itemToDraw.glBorderDashOffset;\n\t\t\t\t}\n\n\t\t\t\tcontext.beginPath();\n\n\t\t\t\tif (gridLines.drawTicks) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n\t\t\t\t}\n\n\t\t\t\tif (gridLines.drawOnChartArea) {\n\t\t\t\t\tcontext.moveTo(itemToDraw.x1, itemToDraw.y1);\n\t\t\t\t\tcontext.lineTo(itemToDraw.x2, itemToDraw.y2);\n\t\t\t\t}\n\n\t\t\t\tcontext.stroke();\n\t\t\t\tcontext.restore();\n\t\t\t}\n\n\t\t\tif (optionTicks.display) {\n\t\t\t\t// Make sure we draw text in the correct color and font\n\t\t\t\tcontext.save();\n\t\t\t\tcontext.translate(itemToDraw.labelX, itemToDraw.labelY);\n\t\t\t\tcontext.rotate(itemToDraw.rotation);\n\t\t\t\tcontext.font = itemToDraw.major ? majorTickFont.font : tickFont.font;\n\t\t\t\tcontext.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n\t\t\t\tcontext.textBaseline = itemToDraw.textBaseline;\n\t\t\t\tcontext.textAlign = itemToDraw.textAlign;\n\n\t\t\t\tvar label = itemToDraw.label;\n\t\t\t\tif (helpers.isArray(label)) {\n\t\t\t\t\tvar lineCount = label.length;\n\t\t\t\t\tvar lineHeight = tickFont.size * 1.5;\n\t\t\t\t\tvar y = me.isHorizontal() ? 0 : -lineHeight * (lineCount - 1) / 2;\n\n\t\t\t\t\tfor (var i = 0; i < lineCount; ++i) {\n\t\t\t\t\t\t// We just make sure the multiline element is a string here..\n\t\t\t\t\t\tcontext.fillText('' + label[i], 0, y);\n\t\t\t\t\t\t// apply same lineSpacing as calculated @ L#320\n\t\t\t\t\t\ty += lineHeight;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tcontext.fillText(label, 0, 0);\n\t\t\t\t}\n\t\t\t\tcontext.restore();\n\t\t\t}\n\t\t});\n\n\t\tif (scaleLabel.display) {\n\t\t\t// Draw the scale label\n\t\t\tvar scaleLabelX;\n\t\t\tvar scaleLabelY;\n\t\t\tvar rotation = 0;\n\t\t\tvar halfLineHeight = parseLineHeight(scaleLabel) / 2;\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tscaleLabelX = me.left + ((me.right - me.left) / 2); // midpoint of the width\n\t\t\t\tscaleLabelY = options.position === 'bottom'\n\t\t\t\t\t? me.bottom - halfLineHeight - scaleLabelPadding.bottom\n\t\t\t\t\t: me.top + halfLineHeight + scaleLabelPadding.top;\n\t\t\t} else {\n\t\t\t\tvar isLeft = options.position === 'left';\n\t\t\t\tscaleLabelX = isLeft\n\t\t\t\t\t? me.left + halfLineHeight + scaleLabelPadding.top\n\t\t\t\t\t: me.right - halfLineHeight - scaleLabelPadding.top;\n\t\t\t\tscaleLabelY = me.top + ((me.bottom - me.top) / 2);\n\t\t\t\trotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n\t\t\t}\n\n\t\t\tcontext.save();\n\t\t\tcontext.translate(scaleLabelX, scaleLabelY);\n\t\t\tcontext.rotate(rotation);\n\t\t\tcontext.textAlign = 'center';\n\t\t\tcontext.textBaseline = 'middle';\n\t\t\tcontext.fillStyle = scaleLabelFontColor; // render in correct colour\n\t\t\tcontext.font = scaleLabelFont.font;\n\t\t\tcontext.fillText(scaleLabel.labelString, 0, 0);\n\t\t\tcontext.restore();\n\t\t}\n\n\t\tif (gridLines.drawBorder) {\n\t\t\t// Draw the line at the edge of the axis\n\t\t\tcontext.lineWidth = helpers.valueAtIndexOrDefault(gridLines.lineWidth, 0);\n\t\t\tcontext.strokeStyle = helpers.valueAtIndexOrDefault(gridLines.color, 0);\n\t\t\tvar x1 = me.left;\n\t\t\tvar x2 = me.right + axisWidth;\n\t\t\tvar y1 = me.top;\n\t\t\tvar y2 = me.bottom + axisWidth;\n\n\t\t\tvar aliasPixel = helpers.aliasPixel(context.lineWidth);\n\t\t\tif (isHorizontal) {\n\t\t\t\ty1 = y2 = options.position === 'top' ? me.bottom : me.top;\n\t\t\t\ty1 += aliasPixel;\n\t\t\t\ty2 += aliasPixel;\n\t\t\t} else {\n\t\t\t\tx1 = x2 = options.position === 'left' ? me.right : me.left;\n\t\t\t\tx1 += aliasPixel;\n\t\t\t\tx2 += aliasPixel;\n\t\t\t}\n\n\t\t\tcontext.beginPath();\n\t\t\tcontext.moveTo(x1, y1);\n\t\t\tcontext.lineTo(x2, y2);\n\t\t\tcontext.stroke();\n\t\t}\n\t}\n});\n","/* global window: false */\n'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tanimation: {\n\t\tduration: 1000,\n\t\teasing: 'easeOutQuart',\n\t\tonProgress: helpers.noop,\n\t\tonComplete: helpers.noop\n\t}\n});\n\nmodule.exports = {\n\tframeDuration: 17,\n\tanimations: [],\n\tdropFrames: 0,\n\trequest: null,\n\n\t/**\n\t * @param {Chart} chart - The chart to animate.\n\t * @param {Chart.Animation} animation - The animation that we will animate.\n\t * @param {Number} duration - The animation duration in ms.\n\t * @param {Boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n\t */\n\taddAnimation: function(chart, animation, duration, lazy) {\n\t\tvar animations = this.animations;\n\t\tvar i, ilen;\n\n\t\tanimation.chart = chart;\n\n\t\tif (!lazy) {\n\t\t\tchart.animating = true;\n\t\t}\n\n\t\tfor (i = 0, ilen = animations.length; i < ilen; ++i) {\n\t\t\tif (animations[i].chart === chart) {\n\t\t\t\tanimations[i] = animation;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tanimations.push(animation);\n\n\t\t// If there are no animations queued, manually kickstart a digest, for lack of a better word\n\t\tif (animations.length === 1) {\n\t\t\tthis.requestAnimationFrame();\n\t\t}\n\t},\n\n\tcancelAnimation: function(chart) {\n\t\tvar index = helpers.findIndex(this.animations, function(animation) {\n\t\t\treturn animation.chart === chart;\n\t\t});\n\n\t\tif (index !== -1) {\n\t\t\tthis.animations.splice(index, 1);\n\t\t\tchart.animating = false;\n\t\t}\n\t},\n\n\trequestAnimationFrame: function() {\n\t\tvar me = this;\n\t\tif (me.request === null) {\n\t\t\t// Skip animation frame requests until the active one is executed.\n\t\t\t// This can happen when processing mouse events, e.g. 'mousemove'\n\t\t\t// and 'mouseout' events will trigger multiple renders.\n\t\t\tme.request = helpers.requestAnimFrame.call(window, function() {\n\t\t\t\tme.request = null;\n\t\t\t\tme.startDigest();\n\t\t\t});\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tstartDigest: function() {\n\t\tvar me = this;\n\t\tvar startTime = Date.now();\n\t\tvar framesToDrop = 0;\n\n\t\tif (me.dropFrames > 1) {\n\t\t\tframesToDrop = Math.floor(me.dropFrames);\n\t\t\tme.dropFrames = me.dropFrames % 1;\n\t\t}\n\n\t\tme.advance(1 + framesToDrop);\n\n\t\tvar endTime = Date.now();\n\n\t\tme.dropFrames += (endTime - startTime) / me.frameDuration;\n\n\t\t// Do we have more stuff to animate?\n\t\tif (me.animations.length > 0) {\n\t\t\tme.requestAnimationFrame();\n\t\t}\n\t},\n\n\t/**\n\t * @private\n\t */\n\tadvance: function(count) {\n\t\tvar animations = this.animations;\n\t\tvar animation, chart;\n\t\tvar i = 0;\n\n\t\twhile (i < animations.length) {\n\t\t\tanimation = animations[i];\n\t\t\tchart = animation.chart;\n\n\t\t\tanimation.currentStep = (animation.currentStep || 0) + count;\n\t\t\tanimation.currentStep = Math.min(animation.currentStep, animation.numSteps);\n\n\t\t\thelpers.callback(animation.render, [chart, animation], chart);\n\t\t\thelpers.callback(animation.onAnimationProgress, [animation], chart);\n\n\t\t\tif (animation.currentStep >= animation.numSteps) {\n\t\t\t\thelpers.callback(animation.onAnimationComplete, [animation], chart);\n\t\t\t\tchart.animating = false;\n\t\t\t\tanimations.splice(i, 1);\n\t\t\t} else {\n\t\t\t\t++i;\n\t\t\t}\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\nfunction filterByPosition(array, position) {\n\treturn helpers.where(array, function(v) {\n\t\treturn v.position === position;\n\t});\n}\n\nfunction sortByWeight(array, reverse) {\n\tarray.forEach(function(v, i) {\n\t\tv._tmpIndex_ = i;\n\t\treturn v;\n\t});\n\tarray.sort(function(a, b) {\n\t\tvar v0 = reverse ? b : a;\n\t\tvar v1 = reverse ? a : b;\n\t\treturn v0.weight === v1.weight ?\n\t\t\tv0._tmpIndex_ - v1._tmpIndex_ :\n\t\t\tv0.weight - v1.weight;\n\t});\n\tarray.forEach(function(v) {\n\t\tdelete v._tmpIndex_;\n\t});\n}\n\n/**\n * @interface ILayoutItem\n * @prop {String} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {Number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {Boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n * @prop {Function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {Function} update - Takes two parameters: width and height. Returns size of item\n * @prop {Function} getPadding -  Returns an object with padding on the edges\n * @prop {Number} width - Width of item. Must be valid after update()\n * @prop {Number} height - Height of item. Must be valid after update()\n * @prop {Number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {Number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nmodule.exports = {\n\tdefaults: {},\n\n\t/**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {ILayoutItem} item - the item to add to be layed out\n\t */\n\taddBox: function(chart, item) {\n\t\tif (!chart.boxes) {\n\t\t\tchart.boxes = [];\n\t\t}\n\n\t\t// initialize item with default values\n\t\titem.fullWidth = item.fullWidth || false;\n\t\titem.position = item.position || 'top';\n\t\titem.weight = item.weight || 0;\n\n\t\tchart.boxes.push(item);\n\t},\n\n\t/**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {Object} layoutItem - the item to remove from the layout\n\t */\n\tremoveBox: function(chart, layoutItem) {\n\t\tvar index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\t\tif (index !== -1) {\n\t\t\tchart.boxes.splice(index, 1);\n\t\t}\n\t},\n\n\t/**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {Object} item - the item to configure with the given options\n\t * @param {Object} options - the new item options.\n\t */\n\tconfigure: function(chart, item, options) {\n\t\tvar props = ['fullWidth', 'position', 'weight'];\n\t\tvar ilen = props.length;\n\t\tvar i = 0;\n\t\tvar prop;\n\n\t\tfor (; i < ilen; ++i) {\n\t\t\tprop = props[i];\n\t\t\tif (options.hasOwnProperty(prop)) {\n\t\t\t\titem[prop] = options[prop];\n\t\t\t}\n\t\t}\n\t},\n\n\t/**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {Number} width - the width to fit into\n\t * @param {Number} height - the height to fit into\n\t */\n\tupdate: function(chart, width, height) {\n\t\tif (!chart) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar layoutOptions = chart.options.layout || {};\n\t\tvar padding = helpers.options.toPadding(layoutOptions.padding);\n\t\tvar leftPadding = padding.left;\n\t\tvar rightPadding = padding.right;\n\t\tvar topPadding = padding.top;\n\t\tvar bottomPadding = padding.bottom;\n\n\t\tvar leftBoxes = filterByPosition(chart.boxes, 'left');\n\t\tvar rightBoxes = filterByPosition(chart.boxes, 'right');\n\t\tvar topBoxes = filterByPosition(chart.boxes, 'top');\n\t\tvar bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n\t\tvar chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea');\n\n\t\t// Sort boxes by weight. A higher weight is further away from the chart area\n\t\tsortByWeight(leftBoxes, true);\n\t\tsortByWeight(rightBoxes, false);\n\t\tsortByWeight(topBoxes, true);\n\t\tsortByWeight(bottomBoxes, false);\n\n\t\t// Essentially we now have any number of boxes on each of the 4 sides.\n\t\t// Our canvas looks like the following.\n\t\t// The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n\t\t// B1 is the bottom axis\n\t\t// There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n\t\t// These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n\t\t// an error will be thrown.\n\t\t//\n\t\t// |----------------------------------------------------|\n\t\t// |                  T1 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t// |    |    |                 T2                  |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    | C1 |                           | C2 |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    |                                     |    |\n\t\t// | L1 | L2 |           ChartArea (C0)            | R1 |\n\t\t// |    |    |                                     |    |\n\t\t// |    |    |----|                           |----|    |\n\t\t// |    |    | C3 |                           | C4 |    |\n\t\t// |    |----|-------------------------------------|----|\n\t\t// |    |    |                 B1                  |    |\n\t\t// |----------------------------------------------------|\n\t\t// |                  B2 (Full Width)                   |\n\t\t// |----------------------------------------------------|\n\t\t//\n\t\t// What we do to find the best sizing, we do the following\n\t\t// 1. Determine the minimum size of the chart area.\n\t\t// 2. Split the remaining width equally between each vertical axis\n\t\t// 3. Split the remaining height equally between each horizontal axis\n\t\t// 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n\t\t// 5. Adjust the sizes of each axis based on it's minimum reported size.\n\t\t// 6. Refit each axis\n\t\t// 7. Position each axis in the final location\n\t\t// 8. Tell the chart the final location of the chart area\n\t\t// 9. Tell any axes that overlay the chart area the positions of the chart area\n\n\t\t// Step 1\n\t\tvar chartWidth = width - leftPadding - rightPadding;\n\t\tvar chartHeight = height - topPadding - bottomPadding;\n\t\tvar chartAreaWidth = chartWidth / 2; // min 50%\n\t\tvar chartAreaHeight = chartHeight / 2; // min 50%\n\n\t\t// Step 2\n\t\tvar verticalBoxWidth = (width - chartAreaWidth) / (leftBoxes.length + rightBoxes.length);\n\n\t\t// Step 3\n\t\tvar horizontalBoxHeight = (height - chartAreaHeight) / (topBoxes.length + bottomBoxes.length);\n\n\t\t// Step 4\n\t\tvar maxChartAreaWidth = chartWidth;\n\t\tvar maxChartAreaHeight = chartHeight;\n\t\tvar minBoxSizes = [];\n\n\t\tfunction getMinimumBoxSize(box) {\n\t\t\tvar minSize;\n\t\t\tvar isHorizontal = box.isHorizontal();\n\n\t\t\tif (isHorizontal) {\n\t\t\t\tminSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, horizontalBoxHeight);\n\t\t\t\tmaxChartAreaHeight -= minSize.height;\n\t\t\t} else {\n\t\t\t\tminSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n\t\t\t\tmaxChartAreaWidth -= minSize.width;\n\t\t\t}\n\n\t\t\tminBoxSizes.push({\n\t\t\t\thorizontal: isHorizontal,\n\t\t\t\tminSize: minSize,\n\t\t\t\tbox: box,\n\t\t\t});\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes, topBoxes, bottomBoxes), getMinimumBoxSize);\n\n\t\t// If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\t\tvar maxHorizontalLeftPadding = 0;\n\t\tvar maxHorizontalRightPadding = 0;\n\t\tvar maxVerticalTopPadding = 0;\n\t\tvar maxVerticalBottomPadding = 0;\n\n\t\thelpers.each(topBoxes.concat(bottomBoxes), function(horizontalBox) {\n\t\t\tif (horizontalBox.getPadding) {\n\t\t\t\tvar boxPadding = horizontalBox.getPadding();\n\t\t\t\tmaxHorizontalLeftPadding = Math.max(maxHorizontalLeftPadding, boxPadding.left);\n\t\t\t\tmaxHorizontalRightPadding = Math.max(maxHorizontalRightPadding, boxPadding.right);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(leftBoxes.concat(rightBoxes), function(verticalBox) {\n\t\t\tif (verticalBox.getPadding) {\n\t\t\t\tvar boxPadding = verticalBox.getPadding();\n\t\t\t\tmaxVerticalTopPadding = Math.max(maxVerticalTopPadding, boxPadding.top);\n\t\t\t\tmaxVerticalBottomPadding = Math.max(maxVerticalBottomPadding, boxPadding.bottom);\n\t\t\t}\n\t\t});\n\n\t\t// At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n\t\t// be if the axes are drawn at their minimum sizes.\n\t\t// Steps 5 & 6\n\t\tvar totalLeftBoxesWidth = leftPadding;\n\t\tvar totalRightBoxesWidth = rightPadding;\n\t\tvar totalTopBoxesHeight = topPadding;\n\t\tvar totalBottomBoxesHeight = bottomPadding;\n\n\t\t// Function to fit a box\n\t\tfunction fitBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minBox) {\n\t\t\t\treturn minBox.box === box;\n\t\t\t});\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tif (box.isHorizontal()) {\n\t\t\t\t\tvar scaleMargin = {\n\t\t\t\t\t\tleft: Math.max(totalLeftBoxesWidth, maxHorizontalLeftPadding),\n\t\t\t\t\t\tright: Math.max(totalRightBoxesWidth, maxHorizontalRightPadding),\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tbottom: 0\n\t\t\t\t\t};\n\n\t\t\t\t\t// Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n\t\t\t\t\t// on the margin. Sometimes they need to increase in size slightly\n\t\t\t\t\tbox.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n\t\t\t\t} else {\n\t\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Update, and calculate the left and right margins for the horizontal boxes\n\t\thelpers.each(leftBoxes.concat(rightBoxes), fitBox);\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\t// Set the Left and Right margins for the horizontal boxes\n\t\thelpers.each(topBoxes.concat(bottomBoxes), fitBox);\n\n\t\t// Figure out how much margin is on the top and bottom of the vertical boxes\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\tfunction finalFitVerticalBox(box) {\n\t\t\tvar minBoxSize = helpers.findNextWhere(minBoxSizes, function(minSize) {\n\t\t\t\treturn minSize.box === box;\n\t\t\t});\n\n\t\t\tvar scaleMargin = {\n\t\t\t\tleft: 0,\n\t\t\t\tright: 0,\n\t\t\t\ttop: totalTopBoxesHeight,\n\t\t\t\tbottom: totalBottomBoxesHeight\n\t\t\t};\n\n\t\t\tif (minBoxSize) {\n\t\t\t\tbox.update(minBoxSize.minSize.width, maxChartAreaHeight, scaleMargin);\n\t\t\t}\n\t\t}\n\n\t\t// Let the left layout know the final margin\n\t\thelpers.each(leftBoxes.concat(rightBoxes), finalFitVerticalBox);\n\n\t\t// Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\t\ttotalLeftBoxesWidth = leftPadding;\n\t\ttotalRightBoxesWidth = rightPadding;\n\t\ttotalTopBoxesHeight = topPadding;\n\t\ttotalBottomBoxesHeight = bottomPadding;\n\n\t\thelpers.each(leftBoxes, function(box) {\n\t\t\ttotalLeftBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(rightBoxes, function(box) {\n\t\t\ttotalRightBoxesWidth += box.width;\n\t\t});\n\n\t\thelpers.each(topBoxes, function(box) {\n\t\t\ttotalTopBoxesHeight += box.height;\n\t\t});\n\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\ttotalBottomBoxesHeight += box.height;\n\t\t});\n\n\t\t// We may be adding some padding to account for rotated x axis labels\n\t\tvar leftPaddingAddition = Math.max(maxHorizontalLeftPadding - totalLeftBoxesWidth, 0);\n\t\ttotalLeftBoxesWidth += leftPaddingAddition;\n\t\ttotalRightBoxesWidth += Math.max(maxHorizontalRightPadding - totalRightBoxesWidth, 0);\n\n\t\tvar topPaddingAddition = Math.max(maxVerticalTopPadding - totalTopBoxesHeight, 0);\n\t\ttotalTopBoxesHeight += topPaddingAddition;\n\t\ttotalBottomBoxesHeight += Math.max(maxVerticalBottomPadding - totalBottomBoxesHeight, 0);\n\n\t\t// Figure out if our chart area changed. This would occur if the dataset layout label rotation\n\t\t// changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n\t\t// without calling `fit` again\n\t\tvar newMaxChartAreaHeight = height - totalTopBoxesHeight - totalBottomBoxesHeight;\n\t\tvar newMaxChartAreaWidth = width - totalLeftBoxesWidth - totalRightBoxesWidth;\n\n\t\tif (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n\t\t\thelpers.each(leftBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(rightBoxes, function(box) {\n\t\t\t\tbox.height = newMaxChartAreaHeight;\n\t\t\t});\n\n\t\t\thelpers.each(topBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\thelpers.each(bottomBoxes, function(box) {\n\t\t\t\tif (!box.fullWidth) {\n\t\t\t\t\tbox.width = newMaxChartAreaWidth;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tmaxChartAreaHeight = newMaxChartAreaHeight;\n\t\t\tmaxChartAreaWidth = newMaxChartAreaWidth;\n\t\t}\n\n\t\t// Step 7 - Position the boxes\n\t\tvar left = leftPadding + leftPaddingAddition;\n\t\tvar top = topPadding + topPaddingAddition;\n\n\t\tfunction placeBox(box) {\n\t\t\tif (box.isHorizontal()) {\n\t\t\t\tbox.left = box.fullWidth ? leftPadding : totalLeftBoxesWidth;\n\t\t\t\tbox.right = box.fullWidth ? width - rightPadding : totalLeftBoxesWidth + maxChartAreaWidth;\n\t\t\t\tbox.top = top;\n\t\t\t\tbox.bottom = top + box.height;\n\n\t\t\t\t// Move to next point\n\t\t\t\ttop = box.bottom;\n\n\t\t\t} else {\n\n\t\t\t\tbox.left = left;\n\t\t\t\tbox.right = left + box.width;\n\t\t\t\tbox.top = totalTopBoxesHeight;\n\t\t\t\tbox.bottom = totalTopBoxesHeight + maxChartAreaHeight;\n\n\t\t\t\t// Move to next point\n\t\t\t\tleft = box.right;\n\t\t\t}\n\t\t}\n\n\t\thelpers.each(leftBoxes.concat(topBoxes), placeBox);\n\n\t\t// Account for chart width and height\n\t\tleft += maxChartAreaWidth;\n\t\ttop += maxChartAreaHeight;\n\n\t\thelpers.each(rightBoxes, placeBox);\n\t\thelpers.each(bottomBoxes, placeBox);\n\n\t\t// Step 8\n\t\tchart.chartArea = {\n\t\t\tleft: totalLeftBoxesWidth,\n\t\t\ttop: totalTopBoxesHeight,\n\t\t\tright: totalLeftBoxesWidth + maxChartAreaWidth,\n\t\t\tbottom: totalTopBoxesHeight + maxChartAreaHeight\n\t\t};\n\n\t\t// Step 9\n\t\thelpers.each(chartAreaBoxes, function(box) {\n\t\t\tbox.left = chart.chartArea.left;\n\t\t\tbox.top = chart.chartArea.top;\n\t\t\tbox.right = chart.chartArea.right;\n\t\t\tbox.bottom = chart.chartArea.bottom;\n\n\t\t\tbox.update(maxChartAreaWidth, maxChartAreaHeight);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Namespace to hold static tick generation functions\n * @namespace Chart.Ticks\n */\nmodule.exports = {\n\t/**\n\t * Namespace to hold formatters for different types of ticks\n\t * @namespace Chart.Ticks.formatters\n\t */\n\tformatters: {\n\t\t/**\n\t\t * Formatter for value labels\n\t\t * @method Chart.Ticks.formatters.values\n\t\t * @param value the value to display\n\t\t * @return {String|Array} the label to display\n\t\t */\n\t\tvalues: function(value) {\n\t\t\treturn helpers.isArray(value) ? value : '' + value;\n\t\t},\n\n\t\t/**\n\t\t * Formatter for linear numeric ticks\n\t\t * @method Chart.Ticks.formatters.linear\n\t\t * @param tickValue {Number} the value to be formatted\n\t\t * @param index {Number} the position of the tickValue parameter in the ticks array\n\t\t * @param ticks {Array<Number>} the list of ticks being converted\n\t\t * @return {String} string representation of the tickValue parameter\n\t\t */\n\t\tlinear: function(tickValue, index, ticks) {\n\t\t\t// If we have lots of ticks, don't use the ones\n\t\t\tvar delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0];\n\n\t\t\t// If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\t\t\tif (Math.abs(delta) > 1) {\n\t\t\t\tif (tickValue !== Math.floor(tickValue)) {\n\t\t\t\t\t// not an integer\n\t\t\t\t\tdelta = tickValue - Math.floor(tickValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar logDelta = helpers.log10(Math.abs(delta));\n\t\t\tvar tickString = '';\n\n\t\t\tif (tickValue !== 0) {\n\t\t\t\tvar maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\t\t\t\tif (maxTick < 1e-4) { // all ticks are small numbers; use scientific notation\n\t\t\t\t\tvar logTick = helpers.log10(Math.abs(tickValue));\n\t\t\t\t\ttickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n\t\t\t\t} else {\n\t\t\t\t\tvar numDecimal = -1 * Math.floor(logDelta);\n\t\t\t\t\tnumDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\t\t\t\t\ttickString = tickValue.toFixed(numDecimal);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttickString = '0'; // never show decimal places for 0\n\t\t\t}\n\n\t\t\treturn tickString;\n\t\t},\n\n\t\tlogarithmic: function(tickValue, index, ticks) {\n\t\t\tvar remain = tickValue / (Math.pow(10, Math.floor(helpers.log10(tickValue))));\n\n\t\t\tif (tickValue === 0) {\n\t\t\t\treturn '0';\n\t\t\t} else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n\t\t\t\treturn tickValue.toExponential();\n\t\t\t}\n\t\t\treturn '';\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar basic = require('./platform.basic');\nvar dom = require('./platform.dom');\n\n// @TODO Make possible to select another platform at build time.\nvar implementation = dom._enabled ? dom : basic;\n\n/**\n * @namespace Chart.platform\n * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n * @since 2.4.0\n */\nmodule.exports = helpers.extend({\n\t/**\n\t * @since 2.7.0\n\t */\n\tinitialize: function() {},\n\n\t/**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {*} item - The native item from which to acquire context (platform specific)\n\t * @param {Object} options - The chart options\n\t * @returns {CanvasRenderingContext2D} context2d instance\n\t */\n\tacquireContext: function() {},\n\n\t/**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {Boolean} true if the method succeeded, else false\n\t */\n\treleaseContext: function() {},\n\n\t/**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {String} type - The ({@link IEvent}) type to listen for\n\t * @param {Function} listener - Receives a notification (an object that implements\n\t * the {@link IEvent} interface) when an event of the specified type occurs.\n\t */\n\taddEventListener: function() {},\n\n\t/**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart -Chart from which to remove the listener\n\t * @param {String} type - The ({@link IEvent}) type to remove\n\t * @param {Function} listener - The listener function to remove from the event target.\n\t */\n\tremoveEventListener: function() {}\n\n}, implementation);\n\n/**\n * @interface IPlatform\n * Allows abstracting platform dependencies away from the chart\n * @borrows Chart.platform.acquireContext as acquireContext\n * @borrows Chart.platform.releaseContext as releaseContext\n * @borrows Chart.platform.addEventListener as addEventListener\n * @borrows Chart.platform.removeEventListener as removeEventListener\n */\n\n/**\n * @interface IEvent\n * @prop {String} type - The event type name, possible values are:\n * 'contextmenu', 'mouseenter', 'mousedown', 'mousemove', 'mouseup', 'mouseout',\n * 'click', 'dblclick', 'keydown', 'keypress', 'keyup' and 'resize'\n * @prop {*} native - The original native event (null for emulated events, e.g. 'resize')\n * @prop {Number} x - The mouse x position, relative to the canvas (null for incompatible events)\n * @prop {Number} y - The mouse y position, relative to the canvas (null for incompatible events)\n */\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Radar = function(context, config) {\n\t\tconfig.type = 'radar';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.filler = require('./plugin.filler');\nmodule.exports.legend = require('./plugin.legend');\nmodule.exports.title = require('./plugin.title');\n","/* MIT license */\nvar colorNames = require('color-name');\n\nmodule.exports = {\n   getRgba: getRgba,\n   getHsla: getHsla,\n   getRgb: getRgb,\n   getHsl: getHsl,\n   getHwb: getHwb,\n   getAlpha: getAlpha,\n\n   hexString: hexString,\n   rgbString: rgbString,\n   rgbaString: rgbaString,\n   percentString: percentString,\n   percentaString: percentaString,\n   hslString: hslString,\n   hslaString: hslaString,\n   hwbString: hwbString,\n   keyword: keyword\n}\n\nfunction getRgba(string) {\n   if (!string) {\n      return;\n   }\n   var abbr =  /^#([a-fA-F0-9]{3})$/i,\n       hex =  /^#([a-fA-F0-9]{6})$/i,\n       rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n       keyword = /(\\w+)/;\n\n   var rgb = [0, 0, 0],\n       a = 1,\n       match = string.match(abbr);\n   if (match) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n   }\n   else if (match = string.match(hex)) {\n      match = match[1];\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n   }\n   else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = parseInt(match[i + 1]);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n         rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n      a = parseFloat(match[4]);\n   }\n   else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n         return [0, 0, 0, 0];\n      }\n      rgb = colorNames[match[1]];\n      if (!rgb) {\n         return;\n      }\n   }\n\n   for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n   }\n   if (!a && a != 0) {\n      a = 1;\n   }\n   else {\n      a = scale(a, 0, 1);\n   }\n   rgb[3] = a;\n   return rgb;\n}\n\nfunction getHsla(string) {\n   if (!string) {\n      return;\n   }\n   var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hsl);\n   if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n   }\n}\n\nfunction getHwb(string) {\n   if (!string) {\n      return;\n   }\n   var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n   var match = string.match(hwb);\n   if (match) {\n    var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n   }\n}\n\nfunction getRgb(string) {\n   var rgba = getRgba(string);\n   return rgba && rgba.slice(0, 3);\n}\n\nfunction getHsl(string) {\n  var hsla = getHsla(string);\n  return hsla && hsla.slice(0, 3);\n}\n\nfunction getAlpha(string) {\n   var vals = getRgba(string);\n   if (vals) {\n      return vals[3];\n   }\n   else if (vals = getHsla(string)) {\n      return vals[3];\n   }\n   else if (vals = getHwb(string)) {\n      return vals[3];\n   }\n}\n\n// generators\nfunction hexString(rgb) {\n   return \"#\" + hexDouble(rgb[0]) + hexDouble(rgb[1])\n              + hexDouble(rgb[2]);\n}\n\nfunction rgbString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return rgbaString(rgba, alpha);\n   }\n   return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n}\n\nfunction rgbaString(rgba, alpha) {\n   if (alpha === undefined) {\n      alpha = (rgba[3] !== undefined ? rgba[3] : 1);\n   }\n   return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2]\n           + \", \" + alpha + \")\";\n}\n\nfunction percentString(rgba, alpha) {\n   if (alpha < 1 || (rgba[3] && rgba[3] < 1)) {\n      return percentaString(rgba, alpha);\n   }\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n\n   return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n}\n\nfunction percentaString(rgba, alpha) {\n   var r = Math.round(rgba[0]/255 * 100),\n       g = Math.round(rgba[1]/255 * 100),\n       b = Math.round(rgba[2]/255 * 100);\n   return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n}\n\nfunction hslString(hsla, alpha) {\n   if (alpha < 1 || (hsla[3] && hsla[3] < 1)) {\n      return hslaString(hsla, alpha);\n   }\n   return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n}\n\nfunction hslaString(hsla, alpha) {\n   if (alpha === undefined) {\n      alpha = (hsla[3] !== undefined ? hsla[3] : 1);\n   }\n   return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \"\n           + alpha + \")\";\n}\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\nfunction hwbString(hwb, alpha) {\n   if (alpha === undefined) {\n      alpha = (hwb[3] !== undefined ? hwb[3] : 1);\n   }\n   return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\"\n           + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n}\n\nfunction keyword(rgb) {\n  return reverseNames[rgb.slice(0, 3)];\n}\n\n// helpers\nfunction scale(num, min, max) {\n   return Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n  var str = num.toString(16).toUpperCase();\n  return (str.length < 2) ? \"0\" + str : str;\n}\n\n\n//create a list of reverse color names\nvar reverseNames = {};\nfor (var name in colorNames) {\n   reverseNames[colorNames[name]] = name;\n}\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\nvar helpers = require('../helpers/index');\nvar layouts = require('../core/core.layouts');\n\nvar noop = helpers.noop;\n\ndefaults._set('global', {\n\ttitle: {\n\t\tdisplay: false,\n\t\tfontStyle: 'bold',\n\t\tfullWidth: true,\n\t\tlineHeight: 1.2,\n\t\tpadding: 10,\n\t\tposition: 'top',\n\t\ttext: '',\n\t\tweight: 2000         // by default greater than legend (1000) to be above\n\t}\n});\n\n/**\n * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n */\nvar Title = Element.extend({\n\tinitialize: function(config) {\n\t\tvar me = this;\n\t\thelpers.extend(me, config);\n\n\t\t// Contains hit boxes for each dataset (in dataset order)\n\t\tme.legendHitBoxes = [];\n\t},\n\n\t// These methods are ordered by lifecycle. Utilities then follow.\n\n\tbeforeUpdate: noop,\n\tupdate: function(maxWidth, maxHeight, margins) {\n\t\tvar me = this;\n\n\t\t// Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\t\tme.beforeUpdate();\n\n\t\t// Absorb the master measurements\n\t\tme.maxWidth = maxWidth;\n\t\tme.maxHeight = maxHeight;\n\t\tme.margins = margins;\n\n\t\t// Dimensions\n\t\tme.beforeSetDimensions();\n\t\tme.setDimensions();\n\t\tme.afterSetDimensions();\n\t\t// Labels\n\t\tme.beforeBuildLabels();\n\t\tme.buildLabels();\n\t\tme.afterBuildLabels();\n\n\t\t// Fit\n\t\tme.beforeFit();\n\t\tme.fit();\n\t\tme.afterFit();\n\t\t//\n\t\tme.afterUpdate();\n\n\t\treturn me.minSize;\n\n\t},\n\tafterUpdate: noop,\n\n\t//\n\n\tbeforeSetDimensions: noop,\n\tsetDimensions: function() {\n\t\tvar me = this;\n\t\t// Set the unconstrained dimension before label rotation\n\t\tif (me.isHorizontal()) {\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.left = 0;\n\t\t\tme.right = me.width;\n\t\t} else {\n\t\t\tme.height = me.maxHeight;\n\n\t\t\t// Reset position before calculating rotation\n\t\t\tme.top = 0;\n\t\t\tme.bottom = me.height;\n\t\t}\n\n\t\t// Reset padding\n\t\tme.paddingLeft = 0;\n\t\tme.paddingTop = 0;\n\t\tme.paddingRight = 0;\n\t\tme.paddingBottom = 0;\n\n\t\t// Reset minSize\n\t\tme.minSize = {\n\t\t\twidth: 0,\n\t\t\theight: 0\n\t\t};\n\t},\n\tafterSetDimensions: noop,\n\n\t//\n\n\tbeforeBuildLabels: noop,\n\tbuildLabels: noop,\n\tafterBuildLabels: noop,\n\n\t//\n\n\tbeforeFit: noop,\n\tfit: function() {\n\t\tvar me = this;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar display = opts.display;\n\t\tvar fontSize = valueOrDefault(opts.fontSize, defaults.global.defaultFontSize);\n\t\tvar minSize = me.minSize;\n\t\tvar lineCount = helpers.isArray(opts.text) ? opts.text.length : 1;\n\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\tvar textSize = display ? (lineCount * lineHeight) + (opts.padding * 2) : 0;\n\n\t\tif (me.isHorizontal()) {\n\t\t\tminSize.width = me.maxWidth; // fill all the width\n\t\t\tminSize.height = textSize;\n\t\t} else {\n\t\t\tminSize.width = textSize;\n\t\t\tminSize.height = me.maxHeight; // fill all the height\n\t\t}\n\n\t\tme.width = minSize.width;\n\t\tme.height = minSize.height;\n\n\t},\n\tafterFit: noop,\n\n\t// Shared Methods\n\tisHorizontal: function() {\n\t\tvar pos = this.options.position;\n\t\treturn pos === 'top' || pos === 'bottom';\n\t},\n\n\t// Actually draw the title block on the canvas\n\tdraw: function() {\n\t\tvar me = this;\n\t\tvar ctx = me.ctx;\n\t\tvar valueOrDefault = helpers.valueOrDefault;\n\t\tvar opts = me.options;\n\t\tvar globalDefaults = defaults.global;\n\n\t\tif (opts.display) {\n\t\t\tvar fontSize = valueOrDefault(opts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tvar fontStyle = valueOrDefault(opts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\tvar fontFamily = valueOrDefault(opts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\tvar titleFont = helpers.fontString(fontSize, fontStyle, fontFamily);\n\t\t\tvar lineHeight = helpers.options.toLineHeight(opts.lineHeight, fontSize);\n\t\t\tvar offset = lineHeight / 2 + opts.padding;\n\t\t\tvar rotation = 0;\n\t\t\tvar top = me.top;\n\t\t\tvar left = me.left;\n\t\t\tvar bottom = me.bottom;\n\t\t\tvar right = me.right;\n\t\t\tvar maxWidth, titleX, titleY;\n\n\t\t\tctx.fillStyle = valueOrDefault(opts.fontColor, globalDefaults.defaultFontColor); // render in correct colour\n\t\t\tctx.font = titleFont;\n\n\t\t\t// Horizontal\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\ttitleX = left + ((right - left) / 2); // midpoint of the width\n\t\t\t\ttitleY = top + offset;\n\t\t\t\tmaxWidth = right - left;\n\t\t\t} else {\n\t\t\t\ttitleX = opts.position === 'left' ? left + offset : right - offset;\n\t\t\t\ttitleY = top + ((bottom - top) / 2);\n\t\t\t\tmaxWidth = bottom - top;\n\t\t\t\trotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n\t\t\t}\n\n\t\t\tctx.save();\n\t\t\tctx.translate(titleX, titleY);\n\t\t\tctx.rotate(rotation);\n\t\t\tctx.textAlign = 'center';\n\t\t\tctx.textBaseline = 'middle';\n\n\t\t\tvar text = opts.text;\n\t\t\tif (helpers.isArray(text)) {\n\t\t\t\tvar y = 0;\n\t\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\t\tctx.fillText(text[i], 0, y, maxWidth);\n\t\t\t\t\ty += lineHeight;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.fillText(text, 0, 0, maxWidth);\n\t\t\t}\n\n\t\t\tctx.restore();\n\t\t}\n\t}\n});\n\nfunction createNewTitleBlockAndAttach(chart, titleOpts) {\n\tvar title = new Title({\n\t\tctx: chart.ctx,\n\t\toptions: titleOpts,\n\t\tchart: chart\n\t});\n\n\tlayouts.configure(chart, title, titleOpts);\n\tlayouts.addBox(chart, title);\n\tchart.titleBlock = title;\n}\n\nmodule.exports = {\n\tid: 'title',\n\n\t/**\n\t * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n\t * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n\t * the plugin, which one will be re-exposed in the chart.js file.\n\t * https://github.com/chartjs/Chart.js/pull/2640\n\t * @private\n\t */\n\t_element: Title,\n\n\tbeforeInit: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\n\t\tif (titleOpts) {\n\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t}\n\t},\n\n\tbeforeUpdate: function(chart) {\n\t\tvar titleOpts = chart.options.title;\n\t\tvar titleBlock = chart.titleBlock;\n\n\t\tif (titleOpts) {\n\t\t\thelpers.mergeIf(titleOpts, defaults.global.title);\n\n\t\t\tif (titleBlock) {\n\t\t\t\tlayouts.configure(chart, titleBlock, titleOpts);\n\t\t\t\ttitleBlock.options = titleOpts;\n\t\t\t} else {\n\t\t\t\tcreateNewTitleBlockAndAttach(chart, titleOpts);\n\t\t\t}\n\t\t} else if (titleBlock) {\n\t\t\tlayouts.removeBox(chart, titleBlock);\n\t\t\tdelete chart.titleBlock;\n\t\t}\n\t}\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\n\n/**\n * Helper function to get relative position for an event\n * @param {Event|IEvent} event - The event to get the position for\n * @param {Chart} chart - The chart\n * @returns {Point} the event position\n */\nfunction getRelativePosition(e, chart) {\n\tif (e.native) {\n\t\treturn {\n\t\t\tx: e.x,\n\t\t\ty: e.y\n\t\t};\n\t}\n\n\treturn helpers.getRelativePosition(e, chart);\n}\n\n/**\n * Helper function to traverse all of the visible elements in the chart\n * @param chart {chart} the chart\n * @param handler {Function} the callback to execute for each visible item\n */\nfunction parseVisibleItems(chart, handler) {\n\tvar datasets = chart.data.datasets;\n\tvar meta, i, j, ilen, jlen;\n\n\tfor (i = 0, ilen = datasets.length; i < ilen; ++i) {\n\t\tif (!chart.isDatasetVisible(i)) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tmeta = chart.getDatasetMeta(i);\n\t\tfor (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n\t\t\tvar element = meta.data[j];\n\t\t\tif (!element._view.skip) {\n\t\t\t\thandler(element);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param items {ChartElement[]} elements to filter\n * @param position {Point} the point to be nearest to\n * @return {ChartElement[]} the nearest items\n */\nfunction getIntersectItems(chart, position) {\n\tvar elements = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (element.inRange(position.x, position.y)) {\n\t\t\telements.push(element);\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in teh chart\n * @param chart {Chart} the chart to look at elements from\n * @param position {Point} the point to be nearest to\n * @param intersect {Boolean} if true, only consider items that intersect the position\n * @param distanceMetric {Function} function to provide the distance between points\n * @return {ChartElement[]} the nearest items\n */\nfunction getNearestItems(chart, position, intersect, distanceMetric) {\n\tvar minDistance = Number.POSITIVE_INFINITY;\n\tvar nearestItems = [];\n\n\tparseVisibleItems(chart, function(element) {\n\t\tif (intersect && !element.inRange(position.x, position.y)) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar center = element.getCenterPoint();\n\t\tvar distance = distanceMetric(position, center);\n\n\t\tif (distance < minDistance) {\n\t\t\tnearestItems = [element];\n\t\t\tminDistance = distance;\n\t\t} else if (distance === minDistance) {\n\t\t\t// Can have multiple items at the same distance in which case we sort by size\n\t\t\tnearestItems.push(element);\n\t\t}\n\t});\n\n\treturn nearestItems;\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {String} axis the axis mode. x|y|xy\n */\nfunction getDistanceMetricForAxis(axis) {\n\tvar useX = axis.indexOf('x') !== -1;\n\tvar useY = axis.indexOf('y') !== -1;\n\n\treturn function(pt1, pt2) {\n\t\tvar deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n\t\tvar deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n\t\treturn Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n\t};\n}\n\nfunction indexMode(chart, e, options) {\n\tvar position = getRelativePosition(e, chart);\n\t// Default axis for index mode is 'x' to match old behaviour\n\toptions.axis = options.axis || 'x';\n\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\tvar elements = [];\n\n\tif (!items.length) {\n\t\treturn [];\n\t}\n\n\tchart.data.datasets.forEach(function(dataset, datasetIndex) {\n\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\t\t\tvar element = meta.data[items[0]._index];\n\n\t\t\t// don't count items that are skipped (null data)\n\t\t\tif (element && !element._view.skip) {\n\t\t\t\telements.push(element);\n\t\t\t}\n\t\t}\n\t});\n\n\treturn elements;\n}\n\n/**\n * @interface IInteractionOptions\n */\n/**\n * If true, only consider items that intersect the point\n * @name IInterfaceOptions#boolean\n * @type Boolean\n */\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nmodule.exports = {\n\t// Helper function for different modes\n\tmodes: {\n\t\tsingle: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar elements = [];\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\telements.push(element);\n\t\t\t\t\treturn elements;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn elements.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.label\n\t\t * @deprecated since version 2.4.0\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\tlabel: indexMode,\n\n\t\t/**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tindex: indexMode,\n\n\t\t/**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use during interaction\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tdataset: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n\t\t\tif (items.length > 0) {\n\t\t\t\titems = chart.getDatasetMeta(items[0]._datasetIndex).data;\n\t\t\t}\n\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * @function Chart.Interaction.modes.x-axis\n\t\t * @deprecated since version 2.4.0. Use index mode and intersect == true\n\t\t * @todo remove at version 3\n\t\t * @private\n\t\t */\n\t\t'x-axis': function(chart, e) {\n\t\t\treturn indexMode(chart, e, {intersect: false});\n\t\t},\n\n\t\t/**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tpoint: function(chart, e) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\treturn getIntersectItems(chart, position);\n\t\t},\n\n\t\t/**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tnearest: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\toptions.axis = options.axis || 'xy';\n\t\t\tvar distanceMetric = getDistanceMetricForAxis(options.axis);\n\t\t\tvar nearestItems = getNearestItems(chart, position, options.intersect, distanceMetric);\n\n\t\t\t// We have multiple items at the same distance from the event. Now sort by smallest\n\t\t\tif (nearestItems.length > 1) {\n\t\t\t\tnearestItems.sort(function(a, b) {\n\t\t\t\t\tvar sizeA = a.getArea();\n\t\t\t\t\tvar sizeB = b.getArea();\n\t\t\t\t\tvar ret = sizeA - sizeB;\n\n\t\t\t\t\tif (ret === 0) {\n\t\t\t\t\t\t// if equal sort by dataset index\n\t\t\t\t\t\tret = a._datasetIndex - b._datasetIndex;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Return only 1 item\n\t\t\treturn nearestItems.slice(0, 1);\n\t\t},\n\n\t\t/**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\tx: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inXRange(position.x)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t},\n\n\t\t/**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param chart {chart} the chart we are returning items from\n\t\t * @param e {Event} the event we are find things at\n\t\t * @param options {IInteractionOptions} options to use\n\t\t * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n\t\t */\n\t\ty: function(chart, e, options) {\n\t\t\tvar position = getRelativePosition(e, chart);\n\t\t\tvar items = [];\n\t\t\tvar intersectsItem = false;\n\n\t\t\tparseVisibleItems(chart, function(element) {\n\t\t\t\tif (element.inYRange(position.y)) {\n\t\t\t\t\titems.push(element);\n\t\t\t\t}\n\n\t\t\t\tif (element.inRange(position.x, position.y)) {\n\t\t\t\t\tintersectsItem = true;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// If we want to trigger on an intersect and we don't have any items\n\t\t\t// that intersect the position, return nothing\n\t\t\tif (options.intersect && !intersectsItem) {\n\t\t\t\titems = [];\n\t\t\t}\n\t\t\treturn items;\n\t\t}\n\t}\n};\n","/* global window: false */\n/* global document: false */\n'use strict';\n\nvar color = require('chartjs-color');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// -- Basic js utility methods\n\n\thelpers.configMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tvar tval = target[key] || {};\n\t\t\t\tvar sval = source[key];\n\n\t\t\t\tif (key === 'scales') {\n\t\t\t\t\t// scale config merging is complex. Add our own function here for that\n\t\t\t\t\ttarget[key] = helpers.scaleMerge(tval, sval);\n\t\t\t\t} else if (key === 'scale') {\n\t\t\t\t\t// used in polar area & radar charts since there is only one scale\n\t\t\t\t\ttarget[key] = helpers.merge(tval, [scaleService.getScaleDefaults(sval.type), sval]);\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.scaleMerge = function(/* objects ... */) {\n\t\treturn helpers.merge(helpers.clone(arguments[0]), [].slice.call(arguments, 1), {\n\t\t\tmerger: function(key, target, source, options) {\n\t\t\t\tif (key === 'xAxes' || key === 'yAxes') {\n\t\t\t\t\tvar slen = source[key].length;\n\t\t\t\t\tvar i, type, scale;\n\n\t\t\t\t\tif (!target[key]) {\n\t\t\t\t\t\ttarget[key] = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (i = 0; i < slen; ++i) {\n\t\t\t\t\t\tscale = source[key][i];\n\t\t\t\t\t\ttype = helpers.valueOrDefault(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n\t\t\t\t\t\tif (i >= target[key].length) {\n\t\t\t\t\t\t\ttarget[key].push({});\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!target[key][i].type || (scale.type && scale.type !== target[key][i].type)) {\n\t\t\t\t\t\t\t// new/untyped scale or type changed: let's apply the new defaults\n\t\t\t\t\t\t\t// then merge source scale to correctly overwrite the defaults.\n\t\t\t\t\t\t\thelpers.merge(target[key][i], [scaleService.getScaleDefaults(type), scale]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// scales type are the same\n\t\t\t\t\t\t\thelpers.merge(target[key][i], scale);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\thelpers._merger(key, target, source, options);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\thelpers.where = function(collection, filterCallback) {\n\t\tif (helpers.isArray(collection) && Array.prototype.filter) {\n\t\t\treturn collection.filter(filterCallback);\n\t\t}\n\t\tvar filtered = [];\n\n\t\thelpers.each(collection, function(item) {\n\t\t\tif (filterCallback(item)) {\n\t\t\t\tfiltered.push(item);\n\t\t\t}\n\t\t});\n\n\t\treturn filtered;\n\t};\n\thelpers.findIndex = Array.prototype.findIndex ?\n\t\tfunction(array, callback, scope) {\n\t\t\treturn array.findIndex(callback, scope);\n\t\t} :\n\t\tfunction(array, callback, scope) {\n\t\t\tscope = scope === undefined ? array : scope;\n\t\t\tfor (var i = 0, ilen = array.length; i < ilen; ++i) {\n\t\t\t\tif (callback.call(scope, array[i], i, array)) {\n\t\t\t\t\treturn i;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\thelpers.findNextWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to start of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = -1;\n\t\t}\n\t\tfor (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.findPreviousWhere = function(arrayToSearch, filterCallback, startIndex) {\n\t\t// Default to end of the array\n\t\tif (helpers.isNullOrUndef(startIndex)) {\n\t\t\tstartIndex = arrayToSearch.length;\n\t\t}\n\t\tfor (var i = startIndex - 1; i >= 0; i--) {\n\t\t\tvar currentItem = arrayToSearch[i];\n\t\t\tif (filterCallback(currentItem)) {\n\t\t\t\treturn currentItem;\n\t\t\t}\n\t\t}\n\t};\n\n\t// -- Math methods\n\thelpers.isNumber = function(n) {\n\t\treturn !isNaN(parseFloat(n)) && isFinite(n);\n\t};\n\thelpers.almostEquals = function(x, y, epsilon) {\n\t\treturn Math.abs(x - y) < epsilon;\n\t};\n\thelpers.almostWhole = function(x, epsilon) {\n\t\tvar rounded = Math.round(x);\n\t\treturn (((rounded - epsilon) < x) && ((rounded + epsilon) > x));\n\t};\n\thelpers.max = function(array) {\n\t\treturn array.reduce(function(max, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.max(max, value);\n\t\t\t}\n\t\t\treturn max;\n\t\t}, Number.NEGATIVE_INFINITY);\n\t};\n\thelpers.min = function(array) {\n\t\treturn array.reduce(function(min, value) {\n\t\t\tif (!isNaN(value)) {\n\t\t\t\treturn Math.min(min, value);\n\t\t\t}\n\t\t\treturn min;\n\t\t}, Number.POSITIVE_INFINITY);\n\t};\n\thelpers.sign = Math.sign ?\n\t\tfunction(x) {\n\t\t\treturn Math.sign(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tx = +x; // convert to a number\n\t\t\tif (x === 0 || isNaN(x)) {\n\t\t\t\treturn x;\n\t\t\t}\n\t\t\treturn x > 0 ? 1 : -1;\n\t\t};\n\thelpers.log10 = Math.log10 ?\n\t\tfunction(x) {\n\t\t\treturn Math.log10(x);\n\t\t} :\n\t\tfunction(x) {\n\t\t\tvar exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n\t\t\t// Check for whole powers of 10,\n\t\t\t// which due to floating point rounding error should be corrected.\n\t\t\tvar powerOf10 = Math.round(exponent);\n\t\t\tvar isPowerOf10 = x === Math.pow(10, powerOf10);\n\n\t\t\treturn isPowerOf10 ? powerOf10 : exponent;\n\t\t};\n\thelpers.toRadians = function(degrees) {\n\t\treturn degrees * (Math.PI / 180);\n\t};\n\thelpers.toDegrees = function(radians) {\n\t\treturn radians * (180 / Math.PI);\n\t};\n\t// Gets the angle from vertical upright to the point about a centre.\n\thelpers.getAngleFromPoint = function(centrePoint, anglePoint) {\n\t\tvar distanceFromXCenter = anglePoint.x - centrePoint.x;\n\t\tvar distanceFromYCenter = anglePoint.y - centrePoint.y;\n\t\tvar radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n\n\t\tvar angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n\t\tif (angle < (-0.5 * Math.PI)) {\n\t\t\tangle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n\t\t}\n\n\t\treturn {\n\t\t\tangle: angle,\n\t\t\tdistance: radialDistanceFromCenter\n\t\t};\n\t};\n\thelpers.distanceBetweenPoints = function(pt1, pt2) {\n\t\treturn Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n\t};\n\thelpers.aliasPixel = function(pixelWidth) {\n\t\treturn (pixelWidth % 2 === 0) ? 0 : 0.5;\n\t};\n\thelpers.splineCurve = function(firstPoint, middlePoint, afterPoint, t) {\n\t\t// Props to Rob Spencer at scaled innovation for his post on splining between points\n\t\t// http://scaledinnovation.com/analytics/splines/aboutSplines.html\n\n\t\t// This function must also respect \"skipped\" points\n\n\t\tvar previous = firstPoint.skip ? middlePoint : firstPoint;\n\t\tvar current = middlePoint;\n\t\tvar next = afterPoint.skip ? middlePoint : afterPoint;\n\n\t\tvar d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n\t\tvar d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n\n\t\tvar s01 = d01 / (d01 + d12);\n\t\tvar s12 = d12 / (d01 + d12);\n\n\t\t// If all points are the same, s01 & s02 will be inf\n\t\ts01 = isNaN(s01) ? 0 : s01;\n\t\ts12 = isNaN(s12) ? 0 : s12;\n\n\t\tvar fa = t * s01; // scaling factor for triangle Ta\n\t\tvar fb = t * s12;\n\n\t\treturn {\n\t\t\tprevious: {\n\t\t\t\tx: current.x - fa * (next.x - previous.x),\n\t\t\t\ty: current.y - fa * (next.y - previous.y)\n\t\t\t},\n\t\t\tnext: {\n\t\t\t\tx: current.x + fb * (next.x - previous.x),\n\t\t\t\ty: current.y + fb * (next.y - previous.y)\n\t\t\t}\n\t\t};\n\t};\n\thelpers.EPSILON = Number.EPSILON || 1e-14;\n\thelpers.splineCurveMonotone = function(points) {\n\t\t// This function calculates Bézier control points in a similar way than |splineCurve|,\n\t\t// but preserves monotonicity of the provided data and ensures no local extremums are added\n\t\t// between the dataset discrete points due to the interpolation.\n\t\t// See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n\n\t\tvar pointsWithTangents = (points || []).map(function(point) {\n\t\t\treturn {\n\t\t\t\tmodel: point._model,\n\t\t\t\tdeltaK: 0,\n\t\t\t\tmK: 0\n\t\t\t};\n\t\t});\n\n\t\t// Calculate slopes (deltaK) and initialize tangents (mK)\n\t\tvar pointsLen = pointsWithTangents.length;\n\t\tvar i, pointBefore, pointCurrent, pointAfter;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tvar slopeDeltaX = (pointAfter.model.x - pointCurrent.model.x);\n\n\t\t\t\t// In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\t\t\t\tpointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n\t\t\t}\n\n\t\t\tif (!pointBefore || pointBefore.model.skip) {\n\t\t\t\tpointCurrent.mK = pointCurrent.deltaK;\n\t\t\t} else if (!pointAfter || pointAfter.model.skip) {\n\t\t\t\tpointCurrent.mK = pointBefore.deltaK;\n\t\t\t} else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n\t\t\t\tpointCurrent.mK = 0;\n\t\t\t} else {\n\t\t\t\tpointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n\t\t\t}\n\t\t}\n\n\t\t// Adjust tangents to ensure monotonic properties\n\t\tvar alphaK, betaK, tauK, squaredMagnitude;\n\t\tfor (i = 0; i < pointsLen - 1; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tpointAfter = pointsWithTangents[i + 1];\n\t\t\tif (pointCurrent.model.skip || pointAfter.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (helpers.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n\t\t\t\tpointCurrent.mK = pointAfter.mK = 0;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\talphaK = pointCurrent.mK / pointCurrent.deltaK;\n\t\t\tbetaK = pointAfter.mK / pointCurrent.deltaK;\n\t\t\tsquaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\t\t\tif (squaredMagnitude <= 9) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttauK = 3 / Math.sqrt(squaredMagnitude);\n\t\t\tpointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n\t\t\tpointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n\t\t}\n\n\t\t// Compute control points\n\t\tvar deltaX;\n\t\tfor (i = 0; i < pointsLen; ++i) {\n\t\t\tpointCurrent = pointsWithTangents[i];\n\t\t\tif (pointCurrent.model.skip) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tpointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n\t\t\tpointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\t\t\tif (pointBefore && !pointBefore.model.skip) {\n\t\t\t\tdeltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n\t\t\t\tpointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t\tif (pointAfter && !pointAfter.model.skip) {\n\t\t\t\tdeltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n\t\t\t\tpointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n\t\t\t\tpointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n\t\t\t}\n\t\t}\n\t};\n\thelpers.nextItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index >= collection.length - 1 ? collection[0] : collection[index + 1];\n\t\t}\n\t\treturn index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n\t};\n\thelpers.previousItem = function(collection, index, loop) {\n\t\tif (loop) {\n\t\t\treturn index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n\t\t}\n\t\treturn index <= 0 ? collection[0] : collection[index - 1];\n\t};\n\t// Implementation of the nice number algorithm used in determining where axis labels will go\n\thelpers.niceNum = function(range, round) {\n\t\tvar exponent = Math.floor(helpers.log10(range));\n\t\tvar fraction = range / Math.pow(10, exponent);\n\t\tvar niceFraction;\n\n\t\tif (round) {\n\t\t\tif (fraction < 1.5) {\n\t\t\t\tniceFraction = 1;\n\t\t\t} else if (fraction < 3) {\n\t\t\t\tniceFraction = 2;\n\t\t\t} else if (fraction < 7) {\n\t\t\t\tniceFraction = 5;\n\t\t\t} else {\n\t\t\t\tniceFraction = 10;\n\t\t\t}\n\t\t} else if (fraction <= 1.0) {\n\t\t\tniceFraction = 1;\n\t\t} else if (fraction <= 2) {\n\t\t\tniceFraction = 2;\n\t\t} else if (fraction <= 5) {\n\t\t\tniceFraction = 5;\n\t\t} else {\n\t\t\tniceFraction = 10;\n\t\t}\n\n\t\treturn niceFraction * Math.pow(10, exponent);\n\t};\n\t// Request animation polyfill - http://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\thelpers.requestAnimFrame = (function() {\n\t\tif (typeof window === 'undefined') {\n\t\t\treturn function(callback) {\n\t\t\t\tcallback();\n\t\t\t};\n\t\t}\n\t\treturn window.requestAnimationFrame ||\n\t\t\twindow.webkitRequestAnimationFrame ||\n\t\t\twindow.mozRequestAnimationFrame ||\n\t\t\twindow.oRequestAnimationFrame ||\n\t\t\twindow.msRequestAnimationFrame ||\n\t\t\tfunction(callback) {\n\t\t\t\treturn window.setTimeout(callback, 1000 / 60);\n\t\t\t};\n\t}());\n\t// -- DOM methods\n\thelpers.getRelativePosition = function(evt, chart) {\n\t\tvar mouseX, mouseY;\n\t\tvar e = evt.originalEvent || evt;\n\t\tvar canvas = evt.target || evt.srcElement;\n\t\tvar boundingRect = canvas.getBoundingClientRect();\n\n\t\tvar touches = e.touches;\n\t\tif (touches && touches.length > 0) {\n\t\t\tmouseX = touches[0].clientX;\n\t\t\tmouseY = touches[0].clientY;\n\n\t\t} else {\n\t\t\tmouseX = e.clientX;\n\t\t\tmouseY = e.clientY;\n\t\t}\n\n\t\t// Scale mouse coordinates into canvas coordinates\n\t\t// by following the pattern laid out by 'jerryj' in the comments of\n\t\t// http://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\t\tvar paddingLeft = parseFloat(helpers.getStyle(canvas, 'padding-left'));\n\t\tvar paddingTop = parseFloat(helpers.getStyle(canvas, 'padding-top'));\n\t\tvar paddingRight = parseFloat(helpers.getStyle(canvas, 'padding-right'));\n\t\tvar paddingBottom = parseFloat(helpers.getStyle(canvas, 'padding-bottom'));\n\t\tvar width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n\t\tvar height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom;\n\n\t\t// We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n\t\t// the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\t\tmouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / (width) * canvas.width / chart.currentDevicePixelRatio);\n\t\tmouseY = Math.round((mouseY - boundingRect.top - paddingTop) / (height) * canvas.height / chart.currentDevicePixelRatio);\n\n\t\treturn {\n\t\t\tx: mouseX,\n\t\t\ty: mouseY\n\t\t};\n\n\t};\n\n\t// Private helper function to convert max-width/max-height values that may be percentages into a number\n\tfunction parseMaxStyle(styleValue, node, parentProperty) {\n\t\tvar valueInPixels;\n\t\tif (typeof styleValue === 'string') {\n\t\t\tvalueInPixels = parseInt(styleValue, 10);\n\n\t\t\tif (styleValue.indexOf('%') !== -1) {\n\t\t\t\t// percentage * size in dimension\n\t\t\t\tvalueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n\t\t\t}\n\t\t} else {\n\t\t\tvalueInPixels = styleValue;\n\t\t}\n\n\t\treturn valueInPixels;\n\t}\n\n\t/**\n\t * Returns if the given value contains an effective constraint.\n\t * @private\n\t */\n\tfunction isConstrainedValue(value) {\n\t\treturn value !== undefined && value !== null && value !== 'none';\n\t}\n\n\t// Private helper to get a constraint dimension\n\t// @param domNode : the node to check the constraint on\n\t// @param maxStyle : the style that defines the maximum for the direction we are using (maxWidth / maxHeight)\n\t// @param percentageProperty : property of parent to use when calculating width as a percentage\n\t// @see http://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser\n\tfunction getConstraintDimension(domNode, maxStyle, percentageProperty) {\n\t\tvar view = document.defaultView;\n\t\tvar parentNode = helpers._getParentNode(domNode);\n\t\tvar constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n\t\tvar constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n\t\tvar hasCNode = isConstrainedValue(constrainedNode);\n\t\tvar hasCContainer = isConstrainedValue(constrainedContainer);\n\t\tvar infinity = Number.POSITIVE_INFINITY;\n\n\t\tif (hasCNode || hasCContainer) {\n\t\t\treturn Math.min(\n\t\t\t\thasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity,\n\t\t\t\thasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n\t\t}\n\n\t\treturn 'none';\n\t}\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintWidth = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-width', 'clientWidth');\n\t};\n\t// returns Number or undefined if no constraint\n\thelpers.getConstraintHeight = function(domNode) {\n\t\treturn getConstraintDimension(domNode, 'max-height', 'clientHeight');\n\t};\n\t/**\n\t * @private\n \t */\n\thelpers._calculatePadding = function(container, padding, parentDimension) {\n\t\tpadding = helpers.getStyle(container, padding);\n\n\t\treturn padding.indexOf('%') > -1 ? parentDimension / parseInt(padding, 10) : parseInt(padding, 10);\n\t};\n\t/**\n\t * @private\n\t */\n\thelpers._getParentNode = function(domNode) {\n\t\tvar parent = domNode.parentNode;\n\t\tif (parent && parent.host) {\n\t\t\tparent = parent.host;\n\t\t}\n\t\treturn parent;\n\t};\n\thelpers.getMaximumWidth = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientWidth;\n\t\t}\n\n\t\tvar clientWidth = container.clientWidth;\n\t\tvar paddingLeft = helpers._calculatePadding(container, 'padding-left', clientWidth);\n\t\tvar paddingRight = helpers._calculatePadding(container, 'padding-right', clientWidth);\n\n\t\tvar w = clientWidth - paddingLeft - paddingRight;\n\t\tvar cw = helpers.getConstraintWidth(domNode);\n\t\treturn isNaN(cw) ? w : Math.min(w, cw);\n\t};\n\thelpers.getMaximumHeight = function(domNode) {\n\t\tvar container = helpers._getParentNode(domNode);\n\t\tif (!container) {\n\t\t\treturn domNode.clientHeight;\n\t\t}\n\n\t\tvar clientHeight = container.clientHeight;\n\t\tvar paddingTop = helpers._calculatePadding(container, 'padding-top', clientHeight);\n\t\tvar paddingBottom = helpers._calculatePadding(container, 'padding-bottom', clientHeight);\n\n\t\tvar h = clientHeight - paddingTop - paddingBottom;\n\t\tvar ch = helpers.getConstraintHeight(domNode);\n\t\treturn isNaN(ch) ? h : Math.min(h, ch);\n\t};\n\thelpers.getStyle = function(el, property) {\n\t\treturn el.currentStyle ?\n\t\t\tel.currentStyle[property] :\n\t\t\tdocument.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n\t};\n\thelpers.retinaScale = function(chart, forceRatio) {\n\t\tvar pixelRatio = chart.currentDevicePixelRatio = forceRatio || (typeof window !== 'undefined' && window.devicePixelRatio) || 1;\n\t\tif (pixelRatio === 1) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar canvas = chart.canvas;\n\t\tvar height = chart.height;\n\t\tvar width = chart.width;\n\n\t\tcanvas.height = height * pixelRatio;\n\t\tcanvas.width = width * pixelRatio;\n\t\tchart.ctx.scale(pixelRatio, pixelRatio);\n\n\t\t// If no style has been set on the canvas, the render size is used as display size,\n\t\t// making the chart visually bigger, so let's enforce it to the \"correct\" values.\n\t\t// See https://github.com/chartjs/Chart.js/issues/3575\n\t\tif (!canvas.style.height && !canvas.style.width) {\n\t\t\tcanvas.style.height = height + 'px';\n\t\t\tcanvas.style.width = width + 'px';\n\t\t}\n\t};\n\t// -- Canvas methods\n\thelpers.fontString = function(pixelSize, fontStyle, fontFamily) {\n\t\treturn fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n\t};\n\thelpers.longestText = function(ctx, font, arrayOfThings, cache) {\n\t\tcache = cache || {};\n\t\tvar data = cache.data = cache.data || {};\n\t\tvar gc = cache.garbageCollect = cache.garbageCollect || [];\n\n\t\tif (cache.font !== font) {\n\t\t\tdata = cache.data = {};\n\t\t\tgc = cache.garbageCollect = [];\n\t\t\tcache.font = font;\n\t\t}\n\n\t\tctx.font = font;\n\t\tvar longest = 0;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\t// Undefined strings and arrays should not be measured\n\t\t\tif (thing !== undefined && thing !== null && helpers.isArray(thing) !== true) {\n\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, thing);\n\t\t\t} else if (helpers.isArray(thing)) {\n\t\t\t\t// if it is an array lets measure each element\n\t\t\t\t// to do maybe simplify this function a bit so we can do this more recursively?\n\t\t\t\thelpers.each(thing, function(nestedThing) {\n\t\t\t\t\t// Undefined strings and arrays should not be measured\n\t\t\t\t\tif (nestedThing !== undefined && nestedThing !== null && !helpers.isArray(nestedThing)) {\n\t\t\t\t\t\tlongest = helpers.measureText(ctx, data, gc, longest, nestedThing);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tvar gcLen = gc.length / 2;\n\t\tif (gcLen > arrayOfThings.length) {\n\t\t\tfor (var i = 0; i < gcLen; i++) {\n\t\t\t\tdelete data[gc[i]];\n\t\t\t}\n\t\t\tgc.splice(0, gcLen);\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.measureText = function(ctx, data, gc, longest, string) {\n\t\tvar textWidth = data[string];\n\t\tif (!textWidth) {\n\t\t\ttextWidth = data[string] = ctx.measureText(string).width;\n\t\t\tgc.push(string);\n\t\t}\n\t\tif (textWidth > longest) {\n\t\t\tlongest = textWidth;\n\t\t}\n\t\treturn longest;\n\t};\n\thelpers.numberOfLabelLines = function(arrayOfThings) {\n\t\tvar numberOfLines = 1;\n\t\thelpers.each(arrayOfThings, function(thing) {\n\t\t\tif (helpers.isArray(thing)) {\n\t\t\t\tif (thing.length > numberOfLines) {\n\t\t\t\t\tnumberOfLines = thing.length;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn numberOfLines;\n\t};\n\n\thelpers.color = !color ?\n\t\tfunction(value) {\n\t\t\tconsole.error('Color.js not found!');\n\t\t\treturn value;\n\t\t} :\n\t\tfunction(value) {\n\t\t\t/* global CanvasGradient */\n\t\t\tif (value instanceof CanvasGradient) {\n\t\t\t\tvalue = defaults.global.defaultColor;\n\t\t\t}\n\n\t\t\treturn color(value);\n\t\t};\n\n\thelpers.getHoverColor = function(colorValue) {\n\t\t/* global CanvasPattern */\n\t\treturn (colorValue instanceof CanvasPattern) ?\n\t\t\tcolorValue :\n\t\t\thelpers.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n\t};\n};\n","'use strict';\n\nvar helpers = require('../helpers/index');\nvar Scale = require('../core/core.scale');\n\n/**\n * Generate a set of linear ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {Array<Number>} array of tick values\n */\nfunction generateTicks(generationOptions, dataRange) {\n\tvar ticks = [];\n\t// To get a \"nice\" value for the tick spacing, we will use the appropriately named\n\t// \"nice number\" algorithm. See http://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n\t// for details.\n\n\tvar factor;\n\tvar precision;\n\tvar spacing;\n\n\tif (generationOptions.stepSize && generationOptions.stepSize > 0) {\n\t\tspacing = generationOptions.stepSize;\n\t} else {\n\t\tvar niceRange = helpers.niceNum(dataRange.max - dataRange.min, false);\n\t\tspacing = helpers.niceNum(niceRange / (generationOptions.maxTicks - 1), true);\n\n\t\tprecision = generationOptions.precision;\n\t\tif (precision !== undefined) {\n\t\t\t// If the user specified a precision, round to that number of decimal places\n\t\t\tfactor = Math.pow(10, precision);\n\t\t\tspacing = Math.ceil(spacing * factor) / factor;\n\t\t}\n\t}\n\tvar niceMin = Math.floor(dataRange.min / spacing) * spacing;\n\tvar niceMax = Math.ceil(dataRange.max / spacing) * spacing;\n\n\t// If min, max and stepSize is set and they make an evenly spaced scale use it.\n\tif (!helpers.isNullOrUndef(generationOptions.min) && !helpers.isNullOrUndef(generationOptions.max) && generationOptions.stepSize) {\n\t\t// If very close to our whole number, use it.\n\t\tif (helpers.almostWhole((generationOptions.max - generationOptions.min) / generationOptions.stepSize, spacing / 1000)) {\n\t\t\tniceMin = generationOptions.min;\n\t\t\tniceMax = generationOptions.max;\n\t\t}\n\t}\n\n\tvar numSpaces = (niceMax - niceMin) / spacing;\n\t// If very close to our rounded value, use it.\n\tif (helpers.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n\t\tnumSpaces = Math.round(numSpaces);\n\t} else {\n\t\tnumSpaces = Math.ceil(numSpaces);\n\t}\n\n\tprecision = 1;\n\tif (spacing < 1) {\n\t\tprecision = Math.pow(10, 1 - Math.floor(helpers.log10(spacing)));\n\t\tniceMin = Math.round(niceMin * precision) / precision;\n\t\tniceMax = Math.round(niceMax * precision) / precision;\n\t}\n\tticks.push(generationOptions.min !== undefined ? generationOptions.min : niceMin);\n\tfor (var j = 1; j < numSpaces; ++j) {\n\t\tticks.push(Math.round((niceMin + j * spacing) * precision) / precision);\n\t}\n\tticks.push(generationOptions.max !== undefined ? generationOptions.max : niceMax);\n\n\treturn ticks;\n}\n\nmodule.exports = function(Chart) {\n\n\tvar noop = helpers.noop;\n\n\tChart.LinearScaleBase = Scale.extend({\n\t\tgetRightValue: function(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn +value;\n\t\t\t}\n\t\t\treturn Scale.prototype.getRightValue.call(this, value);\n\t\t},\n\n\t\thandleTickRangeOptions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n\t\t\t// do nothing since that would make the chart weird. If the user really wants a weird chart\n\t\t\t// axis, they can manually override it\n\t\t\tif (tickOpts.beginAtZero) {\n\t\t\t\tvar minSign = helpers.sign(me.min);\n\t\t\t\tvar maxSign = helpers.sign(me.max);\n\n\t\t\t\tif (minSign < 0 && maxSign < 0) {\n\t\t\t\t\t// move the top up to 0\n\t\t\t\t\tme.max = 0;\n\t\t\t\t} else if (minSign > 0 && maxSign > 0) {\n\t\t\t\t\t// move the bottom down to 0\n\t\t\t\t\tme.min = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n\t\t\tvar setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n\t\t\tif (tickOpts.min !== undefined) {\n\t\t\t\tme.min = tickOpts.min;\n\t\t\t} else if (tickOpts.suggestedMin !== undefined) {\n\t\t\t\tif (me.min === null) {\n\t\t\t\t\tme.min = tickOpts.suggestedMin;\n\t\t\t\t} else {\n\t\t\t\t\tme.min = Math.min(me.min, tickOpts.suggestedMin);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tickOpts.max !== undefined) {\n\t\t\t\tme.max = tickOpts.max;\n\t\t\t} else if (tickOpts.suggestedMax !== undefined) {\n\t\t\t\tif (me.max === null) {\n\t\t\t\t\tme.max = tickOpts.suggestedMax;\n\t\t\t\t} else {\n\t\t\t\t\tme.max = Math.max(me.max, tickOpts.suggestedMax);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (setMin !== setMax) {\n\t\t\t\t// We set the min or the max but not both.\n\t\t\t\t// So ensure that our range is good\n\t\t\t\t// Inverted or 0 length range can happen when\n\t\t\t\t// ticks.min is set, and no datasets are visible\n\t\t\t\tif (me.min >= me.max) {\n\t\t\t\t\tif (setMin) {\n\t\t\t\t\t\tme.max = me.min + 1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.min = me.max - 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (me.min === me.max) {\n\t\t\t\tme.max++;\n\n\t\t\t\tif (!tickOpts.beginAtZero) {\n\t\t\t\t\tme.min--;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tgetTickLimit: noop,\n\t\thandleDirectionalChanges: noop,\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\n\t\t\t// Figure out what the max number of ticks we can support it is based on the size of\n\t\t\t// the axis area. For now, we say that the minimum tick spacing in pixels must be 50\n\t\t\t// We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n\t\t\t// the graph. Make sure we always have at least 2 ticks\n\t\t\tvar maxTicks = me.getTickLimit();\n\t\t\tmaxTicks = Math.max(2, maxTicks);\n\n\t\t\tvar numericGeneratorOptions = {\n\t\t\t\tmaxTicks: maxTicks,\n\t\t\t\tmin: tickOpts.min,\n\t\t\t\tmax: tickOpts.max,\n\t\t\t\tprecision: tickOpts.precision,\n\t\t\t\tstepSize: helpers.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n\t\t\t};\n\t\t\tvar ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n\n\t\t\tme.handleDirectionalChanges();\n\n\t\t\t// At this point, we need to update our max and min given the tick values since we have expanded the\n\t\t\t// range of the scale\n\t\t\tme.max = helpers.max(ticks);\n\t\t\tme.min = helpers.min(ticks);\n\n\t\t\tif (tickOpts.reverse) {\n\t\t\t\tticks.reverse();\n\n\t\t\t\tme.start = me.max;\n\t\t\t\tme.end = me.min;\n\t\t\t} else {\n\t\t\t\tme.start = me.min;\n\t\t\t\tme.end = me.max;\n\t\t\t}\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\t\t\tme.ticksAsNumbers = me.ticks.slice();\n\t\t\tme.zeroLineIndex = me.ticks.indexOf(0);\n\n\t\t\tScale.prototype.convertTicksToLabels.call(me);\n\t\t}\n\t});\n};\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.PolarArea = function(context, config) {\n\t\tconfig.type = 'polarArea';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\n'use strict';\n\nvar helpers = require('../helpers/index');\n\nvar EXPANDO_KEY = '$chartjs';\nvar CSS_PREFIX = 'chartjs-';\nvar CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\nvar CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\nvar ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nvar EVENT_TYPES = {\n\ttouchstart: 'mousedown',\n\ttouchmove: 'mousemove',\n\ttouchend: 'mouseup',\n\tpointerenter: 'mouseenter',\n\tpointerdown: 'mousedown',\n\tpointermove: 'mousemove',\n\tpointerup: 'mouseup',\n\tpointerleave: 'mouseout',\n\tpointerout: 'mouseout'\n};\n\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns {Number} Size in pixels or undefined if unknown.\n */\nfunction readUsedSize(element, property) {\n\tvar value = helpers.getStyle(element, property);\n\tvar matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n\treturn matches ? Number(matches[1]) : undefined;\n}\n\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n */\nfunction initCanvas(canvas, config) {\n\tvar style = canvas.style;\n\n\t// NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n\t// returns null or '' if no explicit value has been set to the canvas attribute.\n\tvar renderHeight = canvas.getAttribute('height');\n\tvar renderWidth = canvas.getAttribute('width');\n\n\t// Chart.js modifies some canvas values that we want to restore on destroy\n\tcanvas[EXPANDO_KEY] = {\n\t\tinitial: {\n\t\t\theight: renderHeight,\n\t\t\twidth: renderWidth,\n\t\t\tstyle: {\n\t\t\t\tdisplay: style.display,\n\t\t\t\theight: style.height,\n\t\t\t\twidth: style.width\n\t\t\t}\n\t\t}\n\t};\n\n\t// Force canvas to display as block to avoid extra space caused by inline\n\t// elements, which would interfere with the responsive resize process.\n\t// https://github.com/chartjs/Chart.js/issues/2538\n\tstyle.display = style.display || 'block';\n\n\tif (renderWidth === null || renderWidth === '') {\n\t\tvar displayWidth = readUsedSize(canvas, 'width');\n\t\tif (displayWidth !== undefined) {\n\t\t\tcanvas.width = displayWidth;\n\t\t}\n\t}\n\n\tif (renderHeight === null || renderHeight === '') {\n\t\tif (canvas.style.height === '') {\n\t\t\t// If no explicit render height and style height, let's apply the aspect ratio,\n\t\t\t// which one can be specified by the user but also by charts as default option\n\t\t\t// (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n\t\t\tcanvas.height = canvas.width / (config.options.aspectRatio || 2);\n\t\t} else {\n\t\t\tvar displayHeight = readUsedSize(canvas, 'height');\n\t\t\tif (displayWidth !== undefined) {\n\t\t\t\tcanvas.height = displayHeight;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn canvas;\n}\n\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */\nvar supportsEventListenerOptions = (function() {\n\tvar supports = false;\n\ttry {\n\t\tvar options = Object.defineProperty({}, 'passive', {\n\t\t\tget: function() {\n\t\t\t\tsupports = true;\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener('e', null, options);\n\t} catch (e) {\n\t\t// continue regardless of error\n\t}\n\treturn supports;\n}());\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nvar eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addEventListener(node, type, listener) {\n\tnode.addEventListener(type, listener, eventListenerOptions);\n}\n\nfunction removeEventListener(node, type, listener) {\n\tnode.removeEventListener(type, listener, eventListenerOptions);\n}\n\nfunction createEvent(type, chart, x, y, nativeEvent) {\n\treturn {\n\t\ttype: type,\n\t\tchart: chart,\n\t\tnative: nativeEvent || null,\n\t\tx: x !== undefined ? x : null,\n\t\ty: y !== undefined ? y : null,\n\t};\n}\n\nfunction fromNativeEvent(event, chart) {\n\tvar type = EVENT_TYPES[event.type] || event.type;\n\tvar pos = helpers.getRelativePosition(event, chart);\n\treturn createEvent(type, chart, pos.x, pos.y, event);\n}\n\nfunction throttled(fn, thisArg) {\n\tvar ticking = false;\n\tvar args = [];\n\n\treturn function() {\n\t\targs = Array.prototype.slice.call(arguments);\n\t\tthisArg = thisArg || this;\n\n\t\tif (!ticking) {\n\t\t\tticking = true;\n\t\t\thelpers.requestAnimFrame.call(window, function() {\n\t\t\t\tticking = false;\n\t\t\t\tfn.apply(thisArg, args);\n\t\t\t});\n\t\t}\n\t};\n}\n\n// Implementation based on https://github.com/marcj/css-element-queries\nfunction createResizer(handler) {\n\tvar resizer = document.createElement('div');\n\tvar cls = CSS_PREFIX + 'size-monitor';\n\tvar maxSize = 1000000;\n\tvar style =\n\t\t'position:absolute;' +\n\t\t'left:0;' +\n\t\t'top:0;' +\n\t\t'right:0;' +\n\t\t'bottom:0;' +\n\t\t'overflow:hidden;' +\n\t\t'pointer-events:none;' +\n\t\t'visibility:hidden;' +\n\t\t'z-index:-1;';\n\n\tresizer.style.cssText = style;\n\tresizer.className = cls;\n\tresizer.innerHTML =\n\t\t'<div class=\"' + cls + '-expand\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:' + maxSize + 'px;' +\n\t\t\t\t'height:' + maxSize + 'px;' +\n\t\t\t\t'left:0;' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>' +\n\t\t'<div class=\"' + cls + '-shrink\" style=\"' + style + '\">' +\n\t\t\t'<div style=\"' +\n\t\t\t\t'position:absolute;' +\n\t\t\t\t'width:200%;' +\n\t\t\t\t'height:200%;' +\n\t\t\t\t'left:0; ' +\n\t\t\t\t'top:0\">' +\n\t\t\t'</div>' +\n\t\t'</div>';\n\n\tvar expand = resizer.childNodes[0];\n\tvar shrink = resizer.childNodes[1];\n\n\tresizer._reset = function() {\n\t\texpand.scrollLeft = maxSize;\n\t\texpand.scrollTop = maxSize;\n\t\tshrink.scrollLeft = maxSize;\n\t\tshrink.scrollTop = maxSize;\n\t};\n\tvar onScroll = function() {\n\t\tresizer._reset();\n\t\thandler();\n\t};\n\n\taddEventListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n\taddEventListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n\n\treturn resizer;\n}\n\n// https://davidwalsh.name/detect-node-insertion\nfunction watchForRender(node, handler) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\tvar proxy = expando.renderProxy = function(e) {\n\t\tif (e.animationName === CSS_RENDER_ANIMATION) {\n\t\t\thandler();\n\t\t}\n\t};\n\n\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\taddEventListener(node, type, proxy);\n\t});\n\n\t// #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n\t// is removed then added back immediately (same animation frame?). Accessing the\n\t// `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n\t// https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n\t// https://github.com/chartjs/Chart.js/issues/4737\n\texpando.reflow = !!node.offsetParent;\n\n\tnode.classList.add(CSS_RENDER_MONITOR);\n}\n\nfunction unwatchForRender(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar proxy = expando.renderProxy;\n\n\tif (proxy) {\n\t\thelpers.each(ANIMATION_START_EVENTS, function(type) {\n\t\t\tremoveEventListener(node, type, proxy);\n\t\t});\n\n\t\tdelete expando.renderProxy;\n\t}\n\n\tnode.classList.remove(CSS_RENDER_MONITOR);\n}\n\nfunction addResizeListener(node, listener, chart) {\n\tvar expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n\t// Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\tvar resizer = expando.resizer = createResizer(throttled(function() {\n\t\tif (expando.resizer) {\n\t\t\treturn listener(createEvent('resize', chart));\n\t\t}\n\t}));\n\n\t// The resizer needs to be attached to the node parent, so we first need to be\n\t// sure that `node` is attached to the DOM before injecting the resizer element.\n\twatchForRender(node, function() {\n\t\tif (expando.resizer) {\n\t\t\tvar container = node.parentNode;\n\t\t\tif (container && container !== resizer.parentNode) {\n\t\t\t\tcontainer.insertBefore(resizer, container.firstChild);\n\t\t\t}\n\n\t\t\t// The container size might have changed, let's reset the resizer state.\n\t\t\tresizer._reset();\n\t\t}\n\t});\n}\n\nfunction removeResizeListener(node) {\n\tvar expando = node[EXPANDO_KEY] || {};\n\tvar resizer = expando.resizer;\n\n\tdelete expando.resizer;\n\tunwatchForRender(node);\n\n\tif (resizer && resizer.parentNode) {\n\t\tresizer.parentNode.removeChild(resizer);\n\t}\n}\n\nfunction injectCSS(platform, css) {\n\t// http://stackoverflow.com/q/3922139\n\tvar style = platform._style || document.createElement('style');\n\tif (!platform._style) {\n\t\tplatform._style = style;\n\t\tcss = '/* Chart.js */\\n' + css;\n\t\tstyle.setAttribute('type', 'text/css');\n\t\tdocument.getElementsByTagName('head')[0].appendChild(style);\n\t}\n\n\tstyle.appendChild(document.createTextNode(css));\n}\n\nmodule.exports = {\n\t/**\n\t * This property holds whether this platform is enabled for the current environment.\n\t * Currently used by platform.js to select the proper implementation.\n\t * @private\n\t */\n\t_enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n\tinitialize: function() {\n\t\tvar keyframes = 'from{opacity:0.99}to{opacity:1}';\n\n\t\tinjectCSS(this,\n\t\t\t// DOM rendering detection\n\t\t\t// https://davidwalsh.name/detect-node-insertion\n\t\t\t'@-webkit-keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'@keyframes ' + CSS_RENDER_ANIMATION + '{' + keyframes + '}' +\n\t\t\t'.' + CSS_RENDER_MONITOR + '{' +\n\t\t\t\t'-webkit-animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t\t'animation:' + CSS_RENDER_ANIMATION + ' 0.001s;' +\n\t\t\t'}'\n\t\t);\n\t},\n\n\tacquireContext: function(item, config) {\n\t\tif (typeof item === 'string') {\n\t\t\titem = document.getElementById(item);\n\t\t} else if (item.length) {\n\t\t\t// Support for array based queries (such as jQuery)\n\t\t\titem = item[0];\n\t\t}\n\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\t// To prevent canvas fingerprinting, some add-ons undefine the getContext\n\t\t// method, for example: https://github.com/kkapsner/CanvasBlocker\n\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\tvar context = item && item.getContext && item.getContext('2d');\n\n\t\t// `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n\t\t// inside an iframe or when running in a protected environment. We could guess the\n\t\t// types from their toString() value but let's keep things flexible and assume it's\n\t\t// a sufficient condition if the item has a context2D which has item as `canvas`.\n\t\t// https://github.com/chartjs/Chart.js/issues/3887\n\t\t// https://github.com/chartjs/Chart.js/issues/4102\n\t\t// https://github.com/chartjs/Chart.js/issues/4152\n\t\tif (context && context.canvas === item) {\n\t\t\tinitCanvas(item, config);\n\t\t\treturn context;\n\t\t}\n\n\t\treturn null;\n\t},\n\n\treleaseContext: function(context) {\n\t\tvar canvas = context.canvas;\n\t\tif (!canvas[EXPANDO_KEY]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar initial = canvas[EXPANDO_KEY].initial;\n\t\t['height', 'width'].forEach(function(prop) {\n\t\t\tvar value = initial[prop];\n\t\t\tif (helpers.isNullOrUndef(value)) {\n\t\t\t\tcanvas.removeAttribute(prop);\n\t\t\t} else {\n\t\t\t\tcanvas.setAttribute(prop, value);\n\t\t\t}\n\t\t});\n\n\t\thelpers.each(initial.style || {}, function(value, key) {\n\t\t\tcanvas.style[key] = value;\n\t\t});\n\n\t\t// The canvas render size might have been changed (and thus the state stack discarded),\n\t\t// we can't use save() and restore() to restore the initial state. So make sure that at\n\t\t// least the canvas context is reset to the default state by setting the canvas width.\n\t\t// https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n\t\tcanvas.width = canvas.width;\n\n\t\tdelete canvas[EXPANDO_KEY];\n\t},\n\n\taddEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\taddResizeListener(canvas, listener, chart);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n\t\tvar proxies = expando.proxies || (expando.proxies = {});\n\t\tvar proxy = proxies[chart.id + '_' + type] = function(event) {\n\t\t\tlistener(fromNativeEvent(event, chart));\n\t\t};\n\n\t\taddEventListener(canvas, type, proxy);\n\t},\n\n\tremoveEventListener: function(chart, type, listener) {\n\t\tvar canvas = chart.canvas;\n\t\tif (type === 'resize') {\n\t\t\t// Note: the resize event is not supported on all browsers.\n\t\t\tremoveResizeListener(canvas, listener);\n\t\t\treturn;\n\t\t}\n\n\t\tvar expando = listener[EXPANDO_KEY] || {};\n\t\tvar proxies = expando.proxies || {};\n\t\tvar proxy = proxies[chart.id + '_' + type];\n\t\tif (!proxy) {\n\t\t\treturn;\n\t\t}\n\n\t\tremoveEventListener(canvas, type, proxy);\n\t}\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use EventTarget.addEventListener instead.\n * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n * @function Chart.helpers.addEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.addEvent = addEventListener;\n\n/**\n * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n * @function Chart.helpers.removeEvent\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.removeEvent = removeEventListener;\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar layouts = require('./core.layouts');\n\nmodule.exports = {\n\t// Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n\t// use the new chart options to grab the correct scale\n\tconstructors: {},\n\t// Use a registration function so that we can move to an ES6 map when we no longer need to support\n\t// old browsers\n\n\t// Scale config defaults\n\tdefaults: {},\n\tregisterScaleType: function(type, scaleConstructor, scaleDefaults) {\n\t\tthis.constructors[type] = scaleConstructor;\n\t\tthis.defaults[type] = helpers.clone(scaleDefaults);\n\t},\n\tgetScaleConstructor: function(type) {\n\t\treturn this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n\t},\n\tgetScaleDefaults: function(type) {\n\t\t// Return the scale defaults merged with the global settings so that we always use the latest ones\n\t\treturn this.defaults.hasOwnProperty(type) ? helpers.merge({}, [defaults.scale, this.defaults[type]]) : {};\n\t},\n\tupdateScaleDefaults: function(type, additions) {\n\t\tvar me = this;\n\t\tif (me.defaults.hasOwnProperty(type)) {\n\t\t\tme.defaults[type] = helpers.extend(me.defaults[type], additions);\n\t\t}\n\t},\n\taddScalesToLayout: function(chart) {\n\t\t// Adds each scale to the chart.boxes array to be sized accordingly\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\t// Set ILayoutItem parameters for backwards compatibility\n\t\t\tscale.fullWidth = scale.options.fullWidth;\n\t\t\tscale.position = scale.options.position;\n\t\t\tscale.weight = scale.options.weight;\n\t\t\tlayouts.addBox(chart, scale);\n\t\t});\n\t}\n};\n","'use strict';\n\nvar helpers = require('./helpers.core');\n\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easingEffects\n * @see http://www.robertpenner.com/easing/\n */\nvar effects = {\n\tlinear: function(t) {\n\t\treturn t;\n\t},\n\n\teaseInQuad: function(t) {\n\t\treturn t * t;\n\t},\n\n\teaseOutQuad: function(t) {\n\t\treturn -t * (t - 2);\n\t},\n\n\teaseInOutQuad: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t;\n\t\t}\n\t\treturn -0.5 * ((--t) * (t - 2) - 1);\n\t},\n\n\teaseInCubic: function(t) {\n\t\treturn t * t * t;\n\t},\n\n\teaseOutCubic: function(t) {\n\t\treturn (t = t - 1) * t * t + 1;\n\t},\n\n\teaseInOutCubic: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t + 2);\n\t},\n\n\teaseInQuart: function(t) {\n\t\treturn t * t * t * t;\n\t},\n\n\teaseOutQuart: function(t) {\n\t\treturn -((t = t - 1) * t * t * t - 1);\n\t},\n\n\teaseInOutQuart: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t;\n\t\t}\n\t\treturn -0.5 * ((t -= 2) * t * t * t - 2);\n\t},\n\n\teaseInQuint: function(t) {\n\t\treturn t * t * t * t * t;\n\t},\n\n\teaseOutQuint: function(t) {\n\t\treturn (t = t - 1) * t * t * t * t + 1;\n\t},\n\n\teaseInOutQuint: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * t * t * t * t * t;\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * t * t * t + 2);\n\t},\n\n\teaseInSine: function(t) {\n\t\treturn -Math.cos(t * (Math.PI / 2)) + 1;\n\t},\n\n\teaseOutSine: function(t) {\n\t\treturn Math.sin(t * (Math.PI / 2));\n\t},\n\n\teaseInOutSine: function(t) {\n\t\treturn -0.5 * (Math.cos(Math.PI * t) - 1);\n\t},\n\n\teaseInExpo: function(t) {\n\t\treturn (t === 0) ? 0 : Math.pow(2, 10 * (t - 1));\n\t},\n\n\teaseOutExpo: function(t) {\n\t\treturn (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1;\n\t},\n\n\teaseInOutExpo: function(t) {\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * Math.pow(2, 10 * (t - 1));\n\t\t}\n\t\treturn 0.5 * (-Math.pow(2, -10 * --t) + 2);\n\t},\n\n\teaseInCirc: function(t) {\n\t\tif (t >= 1) {\n\t\t\treturn t;\n\t\t}\n\t\treturn -(Math.sqrt(1 - t * t) - 1);\n\t},\n\n\teaseOutCirc: function(t) {\n\t\treturn Math.sqrt(1 - (t = t - 1) * t);\n\t},\n\n\teaseInOutCirc: function(t) {\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn -0.5 * (Math.sqrt(1 - t * t) - 1);\n\t\t}\n\t\treturn 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n\t},\n\n\teaseInElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t},\n\n\teaseOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif (t === 1) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.3;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\treturn a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n\t},\n\n\teaseInOutElastic: function(t) {\n\t\tvar s = 1.70158;\n\t\tvar p = 0;\n\t\tvar a = 1;\n\t\tif (t === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tif ((t /= 0.5) === 2) {\n\t\t\treturn 1;\n\t\t}\n\t\tif (!p) {\n\t\t\tp = 0.45;\n\t\t}\n\t\tif (a < 1) {\n\t\t\ta = 1;\n\t\t\ts = p / 4;\n\t\t} else {\n\t\t\ts = p / (2 * Math.PI) * Math.asin(1 / a);\n\t\t}\n\t\tif (t < 1) {\n\t\t\treturn -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n\t\t}\n\t\treturn a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\t},\n\teaseInBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn t * t * ((s + 1) * t - s);\n\t},\n\n\teaseOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\treturn (t = t - 1) * t * ((s + 1) * t + s) + 1;\n\t},\n\n\teaseInOutBack: function(t) {\n\t\tvar s = 1.70158;\n\t\tif ((t /= 0.5) < 1) {\n\t\t\treturn 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\n\t\t}\n\t\treturn 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\n\t},\n\n\teaseInBounce: function(t) {\n\t\treturn 1 - effects.easeOutBounce(1 - t);\n\t},\n\n\teaseOutBounce: function(t) {\n\t\tif (t < (1 / 2.75)) {\n\t\t\treturn 7.5625 * t * t;\n\t\t}\n\t\tif (t < (2 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (1.5 / 2.75)) * t + 0.75;\n\t\t}\n\t\tif (t < (2.5 / 2.75)) {\n\t\t\treturn 7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375;\n\t\t}\n\t\treturn 7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375;\n\t},\n\n\teaseInOutBounce: function(t) {\n\t\tif (t < 0.5) {\n\t\t\treturn effects.easeInBounce(t * 2) * 0.5;\n\t\t}\n\t\treturn effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n\t}\n};\n\nmodule.exports = {\n\teffects: effects\n};\n\n// DEPRECATIONS\n\n/**\n * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n * @function Chart.helpers.easingEffects\n * @deprecated since version 2.7.0\n * @todo remove at version 3\n * @private\n */\nhelpers.easingEffects = effects;\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\n'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\tplugins: {\n\t\tfiller: {\n\t\t\tpropagate: true\n\t\t}\n\t}\n});\n\nvar mappers = {\n\tdataset: function(source) {\n\t\tvar index = source.fill;\n\t\tvar chart = source.chart;\n\t\tvar meta = chart.getDatasetMeta(index);\n\t\tvar visible = meta && chart.isDatasetVisible(index);\n\t\tvar points = (visible && meta.dataset._children) || [];\n\t\tvar length = points.length || 0;\n\n\t\treturn !length ? null : function(point, i) {\n\t\t\treturn (i < length && points[i]._view) || null;\n\t\t};\n\t},\n\n\tboundary: function(source) {\n\t\tvar boundary = source.boundary;\n\t\tvar x = boundary ? boundary.x : null;\n\t\tvar y = boundary ? boundary.y : null;\n\n\t\treturn function(point) {\n\t\t\treturn {\n\t\t\t\tx: x === null ? point.x : x,\n\t\t\t\ty: y === null ? point.y : y,\n\t\t\t};\n\t\t};\n\t}\n};\n\n// @todo if (fill[0] === '#')\nfunction decodeFill(el, index, count) {\n\tvar model = el._model || {};\n\tvar fill = model.fill;\n\tvar target;\n\n\tif (fill === undefined) {\n\t\tfill = !!model.backgroundColor;\n\t}\n\n\tif (fill === false || fill === null) {\n\t\treturn false;\n\t}\n\n\tif (fill === true) {\n\t\treturn 'origin';\n\t}\n\n\ttarget = parseFloat(fill, 10);\n\tif (isFinite(target) && Math.floor(target) === target) {\n\t\tif (fill[0] === '-' || fill[0] === '+') {\n\t\t\ttarget = index + target;\n\t\t}\n\n\t\tif (target === index || target < 0 || target >= count) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn target;\n\t}\n\n\tswitch (fill) {\n\t// compatibility\n\tcase 'bottom':\n\t\treturn 'start';\n\tcase 'top':\n\t\treturn 'end';\n\tcase 'zero':\n\t\treturn 'origin';\n\t// supported boundaries\n\tcase 'origin':\n\tcase 'start':\n\tcase 'end':\n\t\treturn fill;\n\t// invalid fill values\n\tdefault:\n\t\treturn false;\n\t}\n}\n\nfunction computeBoundary(source) {\n\tvar model = source.el._model || {};\n\tvar scale = source.el._scale || {};\n\tvar fill = source.fill;\n\tvar target = null;\n\tvar horizontal;\n\n\tif (isFinite(fill)) {\n\t\treturn null;\n\t}\n\n\t// Backward compatibility: until v3, we still need to support boundary values set on\n\t// the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n\t// controllers might still use it (e.g. the Smith chart).\n\n\tif (fill === 'start') {\n\t\ttarget = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n\t} else if (fill === 'end') {\n\t\ttarget = model.scaleTop === undefined ? scale.top : model.scaleTop;\n\t} else if (model.scaleZero !== undefined) {\n\t\ttarget = model.scaleZero;\n\t} else if (scale.getBasePosition) {\n\t\ttarget = scale.getBasePosition();\n\t} else if (scale.getBasePixel) {\n\t\ttarget = scale.getBasePixel();\n\t}\n\n\tif (target !== undefined && target !== null) {\n\t\tif (target.x !== undefined && target.y !== undefined) {\n\t\t\treturn target;\n\t\t}\n\n\t\tif (typeof target === 'number' && isFinite(target)) {\n\t\t\thorizontal = scale.isHorizontal();\n\t\t\treturn {\n\t\t\t\tx: horizontal ? target : null,\n\t\t\t\ty: horizontal ? null : target\n\t\t\t};\n\t\t}\n\t}\n\n\treturn null;\n}\n\nfunction resolveTarget(sources, index, propagate) {\n\tvar source = sources[index];\n\tvar fill = source.fill;\n\tvar visited = [index];\n\tvar target;\n\n\tif (!propagate) {\n\t\treturn fill;\n\t}\n\n\twhile (fill !== false && visited.indexOf(fill) === -1) {\n\t\tif (!isFinite(fill)) {\n\t\t\treturn fill;\n\t\t}\n\n\t\ttarget = sources[fill];\n\t\tif (!target) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (target.visible) {\n\t\t\treturn fill;\n\t\t}\n\n\t\tvisited.push(fill);\n\t\tfill = target.fill;\n\t}\n\n\treturn false;\n}\n\nfunction createMapper(source) {\n\tvar fill = source.fill;\n\tvar type = 'dataset';\n\n\tif (fill === false) {\n\t\treturn null;\n\t}\n\n\tif (!isFinite(fill)) {\n\t\ttype = 'boundary';\n\t}\n\n\treturn mappers[type](source);\n}\n\nfunction isDrawable(point) {\n\treturn point && !point.skip;\n}\n\nfunction drawArea(ctx, curve0, curve1, len0, len1) {\n\tvar i;\n\n\tif (!len0 || !len1) {\n\t\treturn;\n\t}\n\n\t// building first area curve (normal)\n\tctx.moveTo(curve0[0].x, curve0[0].y);\n\tfor (i = 1; i < len0; ++i) {\n\t\thelpers.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n\t}\n\n\t// joining the two area curves\n\tctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y);\n\n\t// building opposite area curve (reverse)\n\tfor (i = len1 - 1; i > 0; --i) {\n\t\thelpers.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n\t}\n}\n\nfunction doFill(ctx, points, mapper, view, color, loop) {\n\tvar count = points.length;\n\tvar span = view.spanGaps;\n\tvar curve0 = [];\n\tvar curve1 = [];\n\tvar len0 = 0;\n\tvar len1 = 0;\n\tvar i, ilen, index, p0, p1, d0, d1;\n\n\tctx.beginPath();\n\n\tfor (i = 0, ilen = (count + !!loop); i < ilen; ++i) {\n\t\tindex = i % count;\n\t\tp0 = points[index]._view;\n\t\tp1 = mapper(p0, index, view);\n\t\td0 = isDrawable(p0);\n\t\td1 = isDrawable(p1);\n\n\t\tif (d0 && d1) {\n\t\t\tlen0 = curve0.push(p0);\n\t\t\tlen1 = curve1.push(p1);\n\t\t} else if (len0 && len1) {\n\t\t\tif (!span) {\n\t\t\t\tdrawArea(ctx, curve0, curve1, len0, len1);\n\t\t\t\tlen0 = len1 = 0;\n\t\t\t\tcurve0 = [];\n\t\t\t\tcurve1 = [];\n\t\t\t} else {\n\t\t\t\tif (d0) {\n\t\t\t\t\tcurve0.push(p0);\n\t\t\t\t}\n\t\t\t\tif (d1) {\n\t\t\t\t\tcurve1.push(p1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tdrawArea(ctx, curve0, curve1, len0, len1);\n\n\tctx.closePath();\n\tctx.fillStyle = color;\n\tctx.fill();\n}\n\nmodule.exports = {\n\tid: 'filler',\n\n\tafterDatasetsUpdate: function(chart, options) {\n\t\tvar count = (chart.data.datasets || []).length;\n\t\tvar propagate = options.propagate;\n\t\tvar sources = [];\n\t\tvar meta, i, el, source;\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\tel = meta.dataset;\n\t\t\tsource = null;\n\n\t\t\tif (el && el._model && el instanceof elements.Line) {\n\t\t\t\tsource = {\n\t\t\t\t\tvisible: chart.isDatasetVisible(i),\n\t\t\t\t\tfill: decodeFill(el, i, count),\n\t\t\t\t\tchart: chart,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tmeta.$filler = source;\n\t\t\tsources.push(source);\n\t\t}\n\n\t\tfor (i = 0; i < count; ++i) {\n\t\t\tsource = sources[i];\n\t\t\tif (!source) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tsource.fill = resolveTarget(sources, i, propagate);\n\t\t\tsource.boundary = computeBoundary(source);\n\t\t\tsource.mapper = createMapper(source);\n\t\t}\n\t},\n\n\tbeforeDatasetDraw: function(chart, args) {\n\t\tvar meta = args.meta.$filler;\n\t\tif (!meta) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar ctx = chart.ctx;\n\t\tvar el = meta.el;\n\t\tvar view = el._view;\n\t\tvar points = el._children || [];\n\t\tvar mapper = meta.mapper;\n\t\tvar color = view.backgroundColor || defaults.global.defaultColor;\n\n\t\tif (mapper && color && points.length) {\n\t\t\thelpers.canvas.clipArea(ctx, chart.chartArea);\n\t\t\tdoFill(ctx, points, mapper, view, color, el._loop);\n\t\t\thelpers.canvas.unclipArea(ctx);\n\t\t}\n\t}\n};\n","'use strict';\n\nmodule.exports = {};\nmodule.exports.Arc = require('./element.arc');\nmodule.exports.Line = require('./element.line');\nmodule.exports.Point = require('./element.point');\nmodule.exports.Rectangle = require('./element.rectangle');\n","'use strict';\n\nvar defaults = require('./core.defaults');\nvar Element = require('./core.element');\nvar helpers = require('../helpers/index');\n\ndefaults._set('global', {\n\ttooltips: {\n\t\tenabled: true,\n\t\tcustom: null,\n\t\tmode: 'nearest',\n\t\tposition: 'average',\n\t\tintersect: true,\n\t\tbackgroundColor: 'rgba(0,0,0,0.8)',\n\t\ttitleFontStyle: 'bold',\n\t\ttitleSpacing: 2,\n\t\ttitleMarginBottom: 6,\n\t\ttitleFontColor: '#fff',\n\t\ttitleAlign: 'left',\n\t\tbodySpacing: 2,\n\t\tbodyFontColor: '#fff',\n\t\tbodyAlign: 'left',\n\t\tfooterFontStyle: 'bold',\n\t\tfooterSpacing: 2,\n\t\tfooterMarginTop: 6,\n\t\tfooterFontColor: '#fff',\n\t\tfooterAlign: 'left',\n\t\tyPadding: 6,\n\t\txPadding: 6,\n\t\tcaretPadding: 2,\n\t\tcaretSize: 5,\n\t\tcornerRadius: 6,\n\t\tmultiKeyBackground: '#fff',\n\t\tdisplayColors: true,\n\t\tborderColor: 'rgba(0,0,0,0)',\n\t\tborderWidth: 0,\n\t\tcallbacks: {\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeTitle: helpers.noop,\n\t\t\ttitle: function(tooltipItems, data) {\n\t\t\t\t// Pick first xLabel for now\n\t\t\t\tvar title = '';\n\t\t\t\tvar labels = data.labels;\n\t\t\t\tvar labelCount = labels ? labels.length : 0;\n\n\t\t\t\tif (tooltipItems.length > 0) {\n\t\t\t\t\tvar item = tooltipItems[0];\n\n\t\t\t\t\tif (item.xLabel) {\n\t\t\t\t\t\ttitle = item.xLabel;\n\t\t\t\t\t} else if (labelCount > 0 && item.index < labelCount) {\n\t\t\t\t\t\ttitle = labels[item.index];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn title;\n\t\t\t},\n\t\t\tafterTitle: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItem, data)\n\t\t\tbeforeLabel: helpers.noop,\n\t\t\tlabel: function(tooltipItem, data) {\n\t\t\t\tvar label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n\t\t\t\tif (label) {\n\t\t\t\t\tlabel += ': ';\n\t\t\t\t}\n\t\t\t\tlabel += tooltipItem.yLabel;\n\t\t\t\treturn label;\n\t\t\t},\n\t\t\tlabelColor: function(tooltipItem, chart) {\n\t\t\t\tvar meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n\t\t\t\tvar activeElement = meta.data[tooltipItem.index];\n\t\t\t\tvar view = activeElement._view;\n\t\t\t\treturn {\n\t\t\t\t\tborderColor: view.borderColor,\n\t\t\t\t\tbackgroundColor: view.backgroundColor\n\t\t\t\t};\n\t\t\t},\n\t\t\tlabelTextColor: function() {\n\t\t\t\treturn this._options.bodyFontColor;\n\t\t\t},\n\t\t\tafterLabel: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tafterBody: helpers.noop,\n\n\t\t\t// Args are: (tooltipItems, data)\n\t\t\tbeforeFooter: helpers.noop,\n\t\t\tfooter: helpers.noop,\n\t\t\tafterFooter: helpers.noop\n\t\t}\n\t}\n});\n\nvar positioners = {\n\t/**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t * @function Chart.Tooltip.positioners.average\n\t * @param elements {ChartElement[]} the elements being displayed in the tooltip\n\t * @returns {Point} tooltip position\n\t */\n\taverage: function(elements) {\n\t\tif (!elements.length) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar i, len;\n\t\tvar x = 0;\n\t\tvar y = 0;\n\t\tvar count = 0;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar pos = el.tooltipPosition();\n\t\t\t\tx += pos.x;\n\t\t\t\ty += pos.y;\n\t\t\t\t++count;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tx: Math.round(x / count),\n\t\t\ty: Math.round(y / count)\n\t\t};\n\t},\n\n\t/**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t * @function Chart.Tooltip.positioners.nearest\n\t * @param elements {Chart.Element[]} the tooltip elements\n\t * @param eventPosition {Point} the position of the event in canvas coordinates\n\t * @returns {Point} the tooltip position\n\t */\n\tnearest: function(elements, eventPosition) {\n\t\tvar x = eventPosition.x;\n\t\tvar y = eventPosition.y;\n\t\tvar minDistance = Number.POSITIVE_INFINITY;\n\t\tvar i, len, nearestElement;\n\n\t\tfor (i = 0, len = elements.length; i < len; ++i) {\n\t\t\tvar el = elements[i];\n\t\t\tif (el && el.hasValue()) {\n\t\t\t\tvar center = el.getCenterPoint();\n\t\t\t\tvar d = helpers.distanceBetweenPoints(eventPosition, center);\n\n\t\t\t\tif (d < minDistance) {\n\t\t\t\t\tminDistance = d;\n\t\t\t\t\tnearestElement = el;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (nearestElement) {\n\t\t\tvar tp = nearestElement.tooltipPosition();\n\t\t\tx = tp.x;\n\t\t\ty = tp.y;\n\t\t}\n\n\t\treturn {\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\t}\n};\n\n/**\n * Helper method to merge the opacity into a color\n */\nfunction mergeOpacity(colorString, opacity) {\n\tvar color = helpers.color(colorString);\n\treturn color.alpha(opacity * color.alpha()).rgbaString();\n}\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n\tif (toPush) {\n\t\tif (helpers.isArray(toPush)) {\n\t\t\t// base = base.concat(toPush);\n\t\t\tArray.prototype.push.apply(base, toPush);\n\t\t} else {\n\t\t\tbase.push(toPush);\n\t\t}\n\t}\n\n\treturn base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {String} value - The value to split by newline.\n * @returns {Array} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n\tif ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n\t\treturn str.split('\\n');\n\t}\n\treturn str;\n}\n\n\n// Private helper to create a tooltip item model\n// @param element : the chart element (point, arc, bar) to create the tooltip item for\n// @return : new tooltip item\nfunction createTooltipItem(element) {\n\tvar xScale = element._xScale;\n\tvar yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\tvar index = element._index;\n\tvar datasetIndex = element._datasetIndex;\n\n\treturn {\n\t\txLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tyLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n\t\tindex: index,\n\t\tdatasetIndex: datasetIndex,\n\t\tx: element._model.x,\n\t\ty: element._model.y\n\t};\n}\n\n/**\n * Helper to get the reset model for the tooltip\n * @param tooltipOpts {Object} the tooltip options\n */\nfunction getBaseModel(tooltipOpts) {\n\tvar globalDefaults = defaults.global;\n\tvar valueOrDefault = helpers.valueOrDefault;\n\n\treturn {\n\t\t// Positioning\n\t\txPadding: tooltipOpts.xPadding,\n\t\tyPadding: tooltipOpts.yPadding,\n\t\txAlign: tooltipOpts.xAlign,\n\t\tyAlign: tooltipOpts.yAlign,\n\n\t\t// Body\n\t\tbodyFontColor: tooltipOpts.bodyFontColor,\n\t\t_bodyFontFamily: valueOrDefault(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n\t\t_bodyFontStyle: valueOrDefault(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n\t\t_bodyAlign: tooltipOpts.bodyAlign,\n\t\tbodyFontSize: valueOrDefault(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n\t\tbodySpacing: tooltipOpts.bodySpacing,\n\n\t\t// Title\n\t\ttitleFontColor: tooltipOpts.titleFontColor,\n\t\t_titleFontFamily: valueOrDefault(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n\t\t_titleFontStyle: valueOrDefault(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n\t\ttitleFontSize: valueOrDefault(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n\t\t_titleAlign: tooltipOpts.titleAlign,\n\t\ttitleSpacing: tooltipOpts.titleSpacing,\n\t\ttitleMarginBottom: tooltipOpts.titleMarginBottom,\n\n\t\t// Footer\n\t\tfooterFontColor: tooltipOpts.footerFontColor,\n\t\t_footerFontFamily: valueOrDefault(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n\t\t_footerFontStyle: valueOrDefault(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n\t\tfooterFontSize: valueOrDefault(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n\t\t_footerAlign: tooltipOpts.footerAlign,\n\t\tfooterSpacing: tooltipOpts.footerSpacing,\n\t\tfooterMarginTop: tooltipOpts.footerMarginTop,\n\n\t\t// Appearance\n\t\tcaretSize: tooltipOpts.caretSize,\n\t\tcornerRadius: tooltipOpts.cornerRadius,\n\t\tbackgroundColor: tooltipOpts.backgroundColor,\n\t\topacity: 0,\n\t\tlegendColorBackground: tooltipOpts.multiKeyBackground,\n\t\tdisplayColors: tooltipOpts.displayColors,\n\t\tborderColor: tooltipOpts.borderColor,\n\t\tborderWidth: tooltipOpts.borderWidth\n\t};\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, model) {\n\tvar ctx = tooltip._chart.ctx;\n\n\tvar height = model.yPadding * 2; // Tooltip Padding\n\tvar width = 0;\n\n\t// Count of all lines in the body\n\tvar body = model.body;\n\tvar combinedBodyLength = body.reduce(function(count, bodyItem) {\n\t\treturn count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n\t}, 0);\n\tcombinedBodyLength += model.beforeBody.length + model.afterBody.length;\n\n\tvar titleLineCount = model.title.length;\n\tvar footerLineCount = model.footer.length;\n\tvar titleFontSize = model.titleFontSize;\n\tvar bodyFontSize = model.bodyFontSize;\n\tvar footerFontSize = model.footerFontSize;\n\n\theight += titleLineCount * titleFontSize; // Title Lines\n\theight += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\theight += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\theight += combinedBodyLength * bodyFontSize; // Body Lines\n\theight += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\theight += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\theight += footerLineCount * (footerFontSize); // Footer Lines\n\theight += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n\n\t// Title width\n\tvar widthPadding = 0;\n\tvar maxLineWidth = function(line) {\n\t\twidth = Math.max(width, ctx.measureText(line).width + widthPadding);\n\t};\n\n\tctx.font = helpers.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n\thelpers.each(model.title, maxLineWidth);\n\n\t// Body width\n\tctx.font = helpers.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n\thelpers.each(model.beforeBody.concat(model.afterBody), maxLineWidth);\n\n\t// Body lines may include some extra width due to the color box\n\twidthPadding = model.displayColors ? (bodyFontSize + 2) : 0;\n\thelpers.each(body, function(bodyItem) {\n\t\thelpers.each(bodyItem.before, maxLineWidth);\n\t\thelpers.each(bodyItem.lines, maxLineWidth);\n\t\thelpers.each(bodyItem.after, maxLineWidth);\n\t});\n\n\t// Reset back to 0\n\twidthPadding = 0;\n\n\t// Footer width\n\tctx.font = helpers.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n\thelpers.each(model.footer, maxLineWidth);\n\n\t// Add padding\n\twidth += 2 * model.xPadding;\n\n\treturn {\n\t\twidth: width,\n\t\theight: height\n\t};\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(tooltip, size) {\n\tvar model = tooltip._model;\n\tvar chart = tooltip._chart;\n\tvar chartArea = tooltip._chart.chartArea;\n\tvar xAlign = 'center';\n\tvar yAlign = 'center';\n\n\tif (model.y < size.height) {\n\t\tyAlign = 'top';\n\t} else if (model.y > (chart.height - size.height)) {\n\t\tyAlign = 'bottom';\n\t}\n\n\tvar lf, rf; // functions to determine left, right alignment\n\tvar olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\tvar yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\tvar midX = (chartArea.left + chartArea.right) / 2;\n\tvar midY = (chartArea.top + chartArea.bottom) / 2;\n\n\tif (yAlign === 'center') {\n\t\tlf = function(x) {\n\t\t\treturn x <= midX;\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x > midX;\n\t\t};\n\t} else {\n\t\tlf = function(x) {\n\t\t\treturn x <= (size.width / 2);\n\t\t};\n\t\trf = function(x) {\n\t\t\treturn x >= (chart.width - (size.width / 2));\n\t\t};\n\t}\n\n\tolf = function(x) {\n\t\treturn x + size.width + model.caretSize + model.caretPadding > chart.width;\n\t};\n\torf = function(x) {\n\t\treturn x - size.width - model.caretSize - model.caretPadding < 0;\n\t};\n\tyf = function(y) {\n\t\treturn y <= midY ? 'top' : 'bottom';\n\t};\n\n\tif (lf(model.x)) {\n\t\txAlign = 'left';\n\n\t\t// Is tooltip too wide and goes over the right side of the chart.?\n\t\tif (olf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t} else if (rf(model.x)) {\n\t\txAlign = 'right';\n\n\t\t// Is tooltip too wide and goes outside left edge of canvas?\n\t\tif (orf(model.x)) {\n\t\t\txAlign = 'center';\n\t\t\tyAlign = yf(model.y);\n\t\t}\n\t}\n\n\tvar opts = tooltip._options;\n\treturn {\n\t\txAlign: opts.xAlign ? opts.xAlign : xAlign,\n\t\tyAlign: opts.yAlign ? opts.yAlign : yAlign\n\t};\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(vm, size, alignment, chart) {\n\t// Background Position\n\tvar x = vm.x;\n\tvar y = vm.y;\n\n\tvar caretSize = vm.caretSize;\n\tvar caretPadding = vm.caretPadding;\n\tvar cornerRadius = vm.cornerRadius;\n\tvar xAlign = alignment.xAlign;\n\tvar yAlign = alignment.yAlign;\n\tvar paddingAndSize = caretSize + caretPadding;\n\tvar radiusAndPadding = cornerRadius + caretPadding;\n\n\tif (xAlign === 'right') {\n\t\tx -= size.width;\n\t} else if (xAlign === 'center') {\n\t\tx -= (size.width / 2);\n\t\tif (x + size.width > chart.width) {\n\t\t\tx = chart.width - size.width;\n\t\t}\n\t\tif (x < 0) {\n\t\t\tx = 0;\n\t\t}\n\t}\n\n\tif (yAlign === 'top') {\n\t\ty += paddingAndSize;\n\t} else if (yAlign === 'bottom') {\n\t\ty -= size.height + paddingAndSize;\n\t} else {\n\t\ty -= (size.height / 2);\n\t}\n\n\tif (yAlign === 'center') {\n\t\tif (xAlign === 'left') {\n\t\t\tx += paddingAndSize;\n\t\t} else if (xAlign === 'right') {\n\t\t\tx -= paddingAndSize;\n\t\t}\n\t} else if (xAlign === 'left') {\n\t\tx -= radiusAndPadding;\n\t} else if (xAlign === 'right') {\n\t\tx += radiusAndPadding;\n\t}\n\n\treturn {\n\t\tx: x,\n\t\ty: y\n\t};\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n\treturn pushOrConcat([], splitNewlines(callback));\n}\n\nvar exports = module.exports = Element.extend({\n\tinitialize: function() {\n\t\tthis._model = getBaseModel(this._options);\n\t\tthis._lastActive = [];\n\t},\n\n\t// Get the title\n\t// Args are: (tooltipItem, data)\n\tgetTitle: function() {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\t\tvar callbacks = opts.callbacks;\n\n\t\tvar beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n\t\tvar title = callbacks.title.apply(me, arguments);\n\t\tvar afterTitle = callbacks.afterTitle.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeTitle));\n\t\tlines = pushOrConcat(lines, splitNewlines(title));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n\t\treturn lines;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBeforeBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetBody: function(tooltipItems, data) {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\t\tvar bodyItems = [];\n\n\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\tvar bodyItem = {\n\t\t\t\tbefore: [],\n\t\t\t\tlines: [],\n\t\t\t\tafter: []\n\t\t\t};\n\t\t\tpushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n\t\t\tpushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n\t\t\tpushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n\n\t\t\tbodyItems.push(bodyItem);\n\t\t});\n\n\t\treturn bodyItems;\n\t},\n\n\t// Args are: (tooltipItem, data)\n\tgetAfterBody: function() {\n\t\treturn getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n\t},\n\n\t// Get the footer and beforeFooter and afterFooter lines\n\t// Args are: (tooltipItem, data)\n\tgetFooter: function() {\n\t\tvar me = this;\n\t\tvar callbacks = me._options.callbacks;\n\n\t\tvar beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n\t\tvar footer = callbacks.footer.apply(me, arguments);\n\t\tvar afterFooter = callbacks.afterFooter.apply(me, arguments);\n\n\t\tvar lines = [];\n\t\tlines = pushOrConcat(lines, splitNewlines(beforeFooter));\n\t\tlines = pushOrConcat(lines, splitNewlines(footer));\n\t\tlines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n\t\treturn lines;\n\t},\n\n\tupdate: function(changed) {\n\t\tvar me = this;\n\t\tvar opts = me._options;\n\n\t\t// Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n\t\t// that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n\t\t// which breaks any animations.\n\t\tvar existingModel = me._model;\n\t\tvar model = me._model = getBaseModel(opts);\n\t\tvar active = me._active;\n\n\t\tvar data = me._data;\n\n\t\t// In the case where active.length === 0 we need to keep these at existing values for good animations\n\t\tvar alignment = {\n\t\t\txAlign: existingModel.xAlign,\n\t\t\tyAlign: existingModel.yAlign\n\t\t};\n\t\tvar backgroundPoint = {\n\t\t\tx: existingModel.x,\n\t\t\ty: existingModel.y\n\t\t};\n\t\tvar tooltipSize = {\n\t\t\twidth: existingModel.width,\n\t\t\theight: existingModel.height\n\t\t};\n\t\tvar tooltipPosition = {\n\t\t\tx: existingModel.caretX,\n\t\t\ty: existingModel.caretY\n\t\t};\n\n\t\tvar i, len;\n\n\t\tif (active.length) {\n\t\t\tmodel.opacity = 1;\n\n\t\t\tvar labelColors = [];\n\t\t\tvar labelTextColors = [];\n\t\t\ttooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n\n\t\t\tvar tooltipItems = [];\n\t\t\tfor (i = 0, len = active.length; i < len; ++i) {\n\t\t\t\ttooltipItems.push(createTooltipItem(active[i]));\n\t\t\t}\n\n\t\t\t// If the user provided a filter function, use it to modify the tooltip items\n\t\t\tif (opts.filter) {\n\t\t\t\ttooltipItems = tooltipItems.filter(function(a) {\n\t\t\t\t\treturn opts.filter(a, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// If the user provided a sorting function, use it to modify the tooltip items\n\t\t\tif (opts.itemSort) {\n\t\t\t\ttooltipItems = tooltipItems.sort(function(a, b) {\n\t\t\t\t\treturn opts.itemSort(a, b, data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Determine colors for boxes\n\t\t\thelpers.each(tooltipItems, function(tooltipItem) {\n\t\t\t\tlabelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n\t\t\t\tlabelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n\t\t\t});\n\n\n\t\t\t// Build the Text Lines\n\t\t\tmodel.title = me.getTitle(tooltipItems, data);\n\t\t\tmodel.beforeBody = me.getBeforeBody(tooltipItems, data);\n\t\t\tmodel.body = me.getBody(tooltipItems, data);\n\t\t\tmodel.afterBody = me.getAfterBody(tooltipItems, data);\n\t\t\tmodel.footer = me.getFooter(tooltipItems, data);\n\n\t\t\t// Initial positioning and colors\n\t\t\tmodel.x = Math.round(tooltipPosition.x);\n\t\t\tmodel.y = Math.round(tooltipPosition.y);\n\t\t\tmodel.caretPadding = opts.caretPadding;\n\t\t\tmodel.labelColors = labelColors;\n\t\t\tmodel.labelTextColors = labelTextColors;\n\n\t\t\t// data points\n\t\t\tmodel.dataPoints = tooltipItems;\n\n\t\t\t// We need to determine alignment of the tooltip\n\t\t\ttooltipSize = getTooltipSize(this, model);\n\t\t\talignment = determineAlignment(this, tooltipSize);\n\t\t\t// Final Size and Position\n\t\t\tbackgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n\t\t} else {\n\t\t\tmodel.opacity = 0;\n\t\t}\n\n\t\tmodel.xAlign = alignment.xAlign;\n\t\tmodel.yAlign = alignment.yAlign;\n\t\tmodel.x = backgroundPoint.x;\n\t\tmodel.y = backgroundPoint.y;\n\t\tmodel.width = tooltipSize.width;\n\t\tmodel.height = tooltipSize.height;\n\n\t\t// Point where the caret on the tooltip points to\n\t\tmodel.caretX = tooltipPosition.x;\n\t\tmodel.caretY = tooltipPosition.y;\n\n\t\tme._model = model;\n\n\t\tif (changed && opts.custom) {\n\t\t\topts.custom.call(me, model);\n\t\t}\n\n\t\treturn me;\n\t},\n\n\tdrawCaret: function(tooltipPoint, size) {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n\n\t\tctx.lineTo(caretPosition.x1, caretPosition.y1);\n\t\tctx.lineTo(caretPosition.x2, caretPosition.y2);\n\t\tctx.lineTo(caretPosition.x3, caretPosition.y3);\n\t},\n\tgetCaretPosition: function(tooltipPoint, size, vm) {\n\t\tvar x1, x2, x3, y1, y2, y3;\n\t\tvar caretSize = vm.caretSize;\n\t\tvar cornerRadius = vm.cornerRadius;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar ptX = tooltipPoint.x;\n\t\tvar ptY = tooltipPoint.y;\n\t\tvar width = size.width;\n\t\tvar height = size.height;\n\n\t\tif (yAlign === 'center') {\n\t\t\ty2 = ptY + (height / 2);\n\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx1 = ptX;\n\t\t\t\tx2 = x1 - caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 + caretSize;\n\t\t\t\ty3 = y2 - caretSize;\n\t\t\t} else {\n\t\t\t\tx1 = ptX + width;\n\t\t\t\tx2 = x1 + caretSize;\n\t\t\t\tx3 = x1;\n\n\t\t\t\ty1 = y2 - caretSize;\n\t\t\t\ty3 = y2 + caretSize;\n\t\t\t}\n\t\t} else {\n\t\t\tif (xAlign === 'left') {\n\t\t\t\tx2 = ptX + cornerRadius + (caretSize);\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else if (xAlign === 'right') {\n\t\t\t\tx2 = ptX + width - cornerRadius - caretSize;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t} else {\n\t\t\t\tx2 = vm.caretX;\n\t\t\t\tx1 = x2 - caretSize;\n\t\t\t\tx3 = x2 + caretSize;\n\t\t\t}\n\t\t\tif (yAlign === 'top') {\n\t\t\t\ty1 = ptY;\n\t\t\t\ty2 = y1 - caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t} else {\n\t\t\t\ty1 = ptY + height;\n\t\t\t\ty2 = y1 + caretSize;\n\t\t\t\ty3 = y1;\n\t\t\t\t// invert drawing order\n\t\t\t\tvar tmp = x3;\n\t\t\t\tx3 = x1;\n\t\t\t\tx1 = tmp;\n\t\t\t}\n\t\t}\n\t\treturn {x1: x1, x2: x2, x3: x3, y1: y1, y2: y2, y3: y3};\n\t},\n\n\tdrawTitle: function(pt, vm, ctx, opacity) {\n\t\tvar title = vm.title;\n\n\t\tif (title.length) {\n\t\t\tctx.textAlign = vm._titleAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tvar titleFontSize = vm.titleFontSize;\n\t\t\tvar titleSpacing = vm.titleSpacing;\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.titleFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n\n\t\t\tvar i, len;\n\t\t\tfor (i = 0, len = title.length; i < len; ++i) {\n\t\t\t\tctx.fillText(title[i], pt.x, pt.y);\n\t\t\t\tpt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n\t\t\t\tif (i + 1 === title.length) {\n\t\t\t\t\tpt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tdrawBody: function(pt, vm, ctx, opacity) {\n\t\tvar bodyFontSize = vm.bodyFontSize;\n\t\tvar bodySpacing = vm.bodySpacing;\n\t\tvar body = vm.body;\n\n\t\tctx.textAlign = vm._bodyAlign;\n\t\tctx.textBaseline = 'top';\n\t\tctx.font = helpers.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n\n\t\t// Before Body\n\t\tvar xLinePadding = 0;\n\t\tvar fillLineOfText = function(line) {\n\t\t\tctx.fillText(line, pt.x + xLinePadding, pt.y);\n\t\t\tpt.y += bodyFontSize + bodySpacing;\n\t\t};\n\n\t\t// Before body lines\n\t\tctx.fillStyle = mergeOpacity(vm.bodyFontColor, opacity);\n\t\thelpers.each(vm.beforeBody, fillLineOfText);\n\n\t\tvar drawColorBoxes = vm.displayColors;\n\t\txLinePadding = drawColorBoxes ? (bodyFontSize + 2) : 0;\n\n\t\t// Draw body lines now\n\t\thelpers.each(body, function(bodyItem, i) {\n\t\t\tvar textColor = mergeOpacity(vm.labelTextColors[i], opacity);\n\t\t\tctx.fillStyle = textColor;\n\t\t\thelpers.each(bodyItem.before, fillLineOfText);\n\n\t\t\thelpers.each(bodyItem.lines, function(line) {\n\t\t\t\t// Draw Legend-like boxes if needed\n\t\t\t\tif (drawColorBoxes) {\n\t\t\t\t\t// Fill a white rect so that colours merge nicely if the opacity is < 1\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.legendColorBackground, opacity);\n\t\t\t\t\tctx.fillRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Border\n\t\t\t\t\tctx.lineWidth = 1;\n\t\t\t\t\tctx.strokeStyle = mergeOpacity(vm.labelColors[i].borderColor, opacity);\n\t\t\t\t\tctx.strokeRect(pt.x, pt.y, bodyFontSize, bodyFontSize);\n\n\t\t\t\t\t// Inner square\n\t\t\t\t\tctx.fillStyle = mergeOpacity(vm.labelColors[i].backgroundColor, opacity);\n\t\t\t\t\tctx.fillRect(pt.x + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n\t\t\t\t\tctx.fillStyle = textColor;\n\t\t\t\t}\n\n\t\t\t\tfillLineOfText(line);\n\t\t\t});\n\n\t\t\thelpers.each(bodyItem.after, fillLineOfText);\n\t\t});\n\n\t\t// Reset back to 0 for after body\n\t\txLinePadding = 0;\n\n\t\t// After body lines\n\t\thelpers.each(vm.afterBody, fillLineOfText);\n\t\tpt.y -= bodySpacing; // Remove last body spacing\n\t},\n\n\tdrawFooter: function(pt, vm, ctx, opacity) {\n\t\tvar footer = vm.footer;\n\n\t\tif (footer.length) {\n\t\t\tpt.y += vm.footerMarginTop;\n\n\t\t\tctx.textAlign = vm._footerAlign;\n\t\t\tctx.textBaseline = 'top';\n\n\t\t\tctx.fillStyle = mergeOpacity(vm.footerFontColor, opacity);\n\t\t\tctx.font = helpers.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n\n\t\t\thelpers.each(footer, function(line) {\n\t\t\t\tctx.fillText(line, pt.x, pt.y);\n\t\t\t\tpt.y += vm.footerFontSize + vm.footerSpacing;\n\t\t\t});\n\t\t}\n\t},\n\n\tdrawBackground: function(pt, vm, ctx, tooltipSize, opacity) {\n\t\tctx.fillStyle = mergeOpacity(vm.backgroundColor, opacity);\n\t\tctx.strokeStyle = mergeOpacity(vm.borderColor, opacity);\n\t\tctx.lineWidth = vm.borderWidth;\n\t\tvar xAlign = vm.xAlign;\n\t\tvar yAlign = vm.yAlign;\n\t\tvar x = pt.x;\n\t\tvar y = pt.y;\n\t\tvar width = tooltipSize.width;\n\t\tvar height = tooltipSize.height;\n\t\tvar radius = vm.cornerRadius;\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x + radius, y);\n\t\tif (yAlign === 'top') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width - radius, y);\n\t\tctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\t\tif (yAlign === 'center' && xAlign === 'right') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + width, y + height - radius);\n\t\tctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\t\tif (yAlign === 'bottom') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x + radius, y + height);\n\t\tctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\t\tif (yAlign === 'center' && xAlign === 'left') {\n\t\t\tthis.drawCaret(pt, tooltipSize);\n\t\t}\n\t\tctx.lineTo(x, y + radius);\n\t\tctx.quadraticCurveTo(x, y, x + radius, y);\n\t\tctx.closePath();\n\n\t\tctx.fill();\n\n\t\tif (vm.borderWidth > 0) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\n\t\tif (vm.opacity === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar tooltipSize = {\n\t\t\twidth: vm.width,\n\t\t\theight: vm.height\n\t\t};\n\t\tvar pt = {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\n\t\t// IE11/Edge does not like very small opacities, so snap to 0\n\t\tvar opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity;\n\n\t\t// Truthy/falsey value for empty tooltip\n\t\tvar hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n\t\tif (this._options.enabled && hasTooltipContent) {\n\t\t\t// Draw Background\n\t\t\tthis.drawBackground(pt, vm, ctx, tooltipSize, opacity);\n\n\t\t\t// Draw Title, Body, and Footer\n\t\t\tpt.x += vm.xPadding;\n\t\t\tpt.y += vm.yPadding;\n\n\t\t\t// Titles\n\t\t\tthis.drawTitle(pt, vm, ctx, opacity);\n\n\t\t\t// Body\n\t\t\tthis.drawBody(pt, vm, ctx, opacity);\n\n\t\t\t// Footer\n\t\t\tthis.drawFooter(pt, vm, ctx, opacity);\n\t\t}\n\t},\n\n\t/**\n\t * Handle an event\n\t * @private\n\t * @param {IEvent} event - The event to handle\n\t * @returns {Boolean} true if the tooltip changed\n\t */\n\thandleEvent: function(e) {\n\t\tvar me = this;\n\t\tvar options = me._options;\n\t\tvar changed = false;\n\n\t\tme._lastActive = me._lastActive || [];\n\n\t\t// Find Active Elements for tooltips\n\t\tif (e.type === 'mouseout') {\n\t\t\tme._active = [];\n\t\t} else {\n\t\t\tme._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n\t\t}\n\n\t\t// Remember Last Actives\n\t\tchanged = !helpers.arrayEquals(me._active, me._lastActive);\n\n\t\t// Only handle target event on tooltip change\n\t\tif (changed) {\n\t\t\tme._lastActive = me._active;\n\n\t\t\tif (options.enabled || options.custom) {\n\t\t\t\tme._eventPosition = {\n\t\t\t\t\tx: e.x,\n\t\t\t\t\ty: e.y\n\t\t\t\t};\n\n\t\t\t\tme.update(true);\n\t\t\t\tme.pivot();\n\t\t\t}\n\t\t}\n\n\t\treturn changed;\n\t}\n});\n\n/**\n * @namespace Chart.Tooltip.positioners\n */\nexports.positioners = positioners;\n\n","'use strict';\n\nvar defaults = require('./core.defaults');\n\ndefaults._set('global', {\n\tresponsive: true,\n\tresponsiveAnimationDuration: 0,\n\tmaintainAspectRatio: true,\n\tevents: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n\thover: {\n\t\tonHover: null,\n\t\tmode: 'nearest',\n\t\tintersect: true,\n\t\tanimationDuration: 400\n\t},\n\tonClick: null,\n\tdefaultColor: 'rgba(0,0,0,0.1)',\n\tdefaultFontColor: '#666',\n\tdefaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n\tdefaultFontSize: 12,\n\tdefaultFontStyle: 'normal',\n\tshowLines: true,\n\n\t// Element defaults defined in element extensions\n\telements: {},\n\n\t// Layout options such as padding\n\tlayout: {\n\t\tpadding: {\n\t\t\ttop: 0,\n\t\t\tright: 0,\n\t\t\tbottom: 0,\n\t\t\tleft: 0\n\t\t}\n\t}\n});\n\nmodule.exports = function() {\n\n\t// Occupy the global variable of Chart, and create a simple base class\n\tvar Chart = function(item, config) {\n\t\tthis.construct(item, config);\n\t\treturn this;\n\t};\n\n\tChart.Chart = Chart;\n\n\treturn Chart;\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar Element = require('../core/core.element');\n\ndefaults._set('global', {\n\telements: {\n\t\trectangle: {\n\t\t\tbackgroundColor: defaults.global.defaultColor,\n\t\t\tborderColor: defaults.global.defaultColor,\n\t\t\tborderSkipped: 'bottom',\n\t\t\tborderWidth: 0\n\t\t}\n\t}\n});\n\nfunction isVertical(bar) {\n\treturn bar._view.width !== undefined;\n}\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param bar {Chart.Element.Rectangle} the bar\n * @return {Bounds} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar) {\n\tvar vm = bar._view;\n\tvar x1, x2, y1, y2;\n\n\tif (isVertical(bar)) {\n\t\t// vertical\n\t\tvar halfWidth = vm.width / 2;\n\t\tx1 = vm.x - halfWidth;\n\t\tx2 = vm.x + halfWidth;\n\t\ty1 = Math.min(vm.y, vm.base);\n\t\ty2 = Math.max(vm.y, vm.base);\n\t} else {\n\t\t// horizontal bar\n\t\tvar halfHeight = vm.height / 2;\n\t\tx1 = Math.min(vm.x, vm.base);\n\t\tx2 = Math.max(vm.x, vm.base);\n\t\ty1 = vm.y - halfHeight;\n\t\ty2 = vm.y + halfHeight;\n\t}\n\n\treturn {\n\t\tleft: x1,\n\t\ttop: y1,\n\t\tright: x2,\n\t\tbottom: y2\n\t};\n}\n\nmodule.exports = Element.extend({\n\tdraw: function() {\n\t\tvar ctx = this._chart.ctx;\n\t\tvar vm = this._view;\n\t\tvar left, right, top, bottom, signX, signY, borderSkipped;\n\t\tvar borderWidth = vm.borderWidth;\n\n\t\tif (!vm.horizontal) {\n\t\t\t// bar\n\t\t\tleft = vm.x - vm.width / 2;\n\t\t\tright = vm.x + vm.width / 2;\n\t\t\ttop = vm.y;\n\t\t\tbottom = vm.base;\n\t\t\tsignX = 1;\n\t\t\tsignY = bottom > top ? 1 : -1;\n\t\t\tborderSkipped = vm.borderSkipped || 'bottom';\n\t\t} else {\n\t\t\t// horizontal bar\n\t\t\tleft = vm.base;\n\t\t\tright = vm.x;\n\t\t\ttop = vm.y - vm.height / 2;\n\t\t\tbottom = vm.y + vm.height / 2;\n\t\t\tsignX = right > left ? 1 : -1;\n\t\t\tsignY = 1;\n\t\t\tborderSkipped = vm.borderSkipped || 'left';\n\t\t}\n\n\t\t// Canvas doesn't allow us to stroke inside the width so we can\n\t\t// adjust the sizes to fit if we're setting a stroke on the line\n\t\tif (borderWidth) {\n\t\t\t// borderWidth shold be less than bar width and bar height.\n\t\t\tvar barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\n\t\t\tborderWidth = borderWidth > barSize ? barSize : borderWidth;\n\t\t\tvar halfStroke = borderWidth / 2;\n\t\t\t// Adjust borderWidth when bar top position is near vm.base(zero).\n\t\t\tvar borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\n\t\t\tvar borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\n\t\t\tvar borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\n\t\t\tvar borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\n\t\t\t// not become a vertical line?\n\t\t\tif (borderLeft !== borderRight) {\n\t\t\t\ttop = borderTop;\n\t\t\t\tbottom = borderBottom;\n\t\t\t}\n\t\t\t// not become a horizontal line?\n\t\t\tif (borderTop !== borderBottom) {\n\t\t\t\tleft = borderLeft;\n\t\t\t\tright = borderRight;\n\t\t\t}\n\t\t}\n\n\t\tctx.beginPath();\n\t\tctx.fillStyle = vm.backgroundColor;\n\t\tctx.strokeStyle = vm.borderColor;\n\t\tctx.lineWidth = borderWidth;\n\n\t\t// Corner points, from bottom-left to bottom-right clockwise\n\t\t// | 1 2 |\n\t\t// | 0 3 |\n\t\tvar corners = [\n\t\t\t[left, bottom],\n\t\t\t[left, top],\n\t\t\t[right, top],\n\t\t\t[right, bottom]\n\t\t];\n\n\t\t// Find first (starting) corner with fallback to 'bottom'\n\t\tvar borders = ['bottom', 'left', 'top', 'right'];\n\t\tvar startCorner = borders.indexOf(borderSkipped, 0);\n\t\tif (startCorner === -1) {\n\t\t\tstartCorner = 0;\n\t\t}\n\n\t\tfunction cornerAt(index) {\n\t\t\treturn corners[(startCorner + index) % 4];\n\t\t}\n\n\t\t// Draw rectangle from 'startCorner'\n\t\tvar corner = cornerAt(0);\n\t\tctx.moveTo(corner[0], corner[1]);\n\n\t\tfor (var i = 1; i < 4; i++) {\n\t\t\tcorner = cornerAt(i);\n\t\t\tctx.lineTo(corner[0], corner[1]);\n\t\t}\n\n\t\tctx.fill();\n\t\tif (borderWidth) {\n\t\t\tctx.stroke();\n\t\t}\n\t},\n\n\theight: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.base - vm.y;\n\t},\n\n\tinRange: function(mouseX, mouseY) {\n\t\tvar inRange = false;\n\n\t\tif (this._view) {\n\t\t\tvar bounds = getBarBounds(this);\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinLabelRange: function(mouseX, mouseY) {\n\t\tvar me = this;\n\t\tif (!me._view) {\n\t\t\treturn false;\n\t\t}\n\n\t\tvar inRange = false;\n\t\tvar bounds = getBarBounds(me);\n\n\t\tif (isVertical(me)) {\n\t\t\tinRange = mouseX >= bounds.left && mouseX <= bounds.right;\n\t\t} else {\n\t\t\tinRange = mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t\t}\n\n\t\treturn inRange;\n\t},\n\n\tinXRange: function(mouseX) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseX >= bounds.left && mouseX <= bounds.right;\n\t},\n\n\tinYRange: function(mouseY) {\n\t\tvar bounds = getBarBounds(this);\n\t\treturn mouseY >= bounds.top && mouseY <= bounds.bottom;\n\t},\n\n\tgetCenterPoint: function() {\n\t\tvar vm = this._view;\n\t\tvar x, y;\n\t\tif (isVertical(this)) {\n\t\t\tx = vm.x;\n\t\t\ty = (vm.y + vm.base) / 2;\n\t\t} else {\n\t\t\tx = (vm.x + vm.base) / 2;\n\t\t\ty = vm.y;\n\t\t}\n\n\t\treturn {x: x, y: y};\n\t},\n\n\tgetArea: function() {\n\t\tvar vm = this._view;\n\t\treturn vm.width * Math.abs(vm.y - vm.base);\n\t},\n\n\ttooltipPosition: function() {\n\t\tvar vm = this._view;\n\t\treturn {\n\t\t\tx: vm.x,\n\t\t\ty: vm.y\n\t\t};\n\t}\n});\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\n\ndefaults._set('scatter', {\n\thover: {\n\t\tmode: 'single'\n\t},\n\n\tscales: {\n\t\txAxes: [{\n\t\t\tid: 'x-axis-1',    // need an ID so datasets can reference the scale\n\t\t\ttype: 'linear',    // scatter should not use a category axis\n\t\t\tposition: 'bottom'\n\t\t}],\n\t\tyAxes: [{\n\t\t\tid: 'y-axis-1',\n\t\t\ttype: 'linear',\n\t\t\tposition: 'left'\n\t\t}]\n\t},\n\n\tshowLines: false,\n\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';     // doesn't make sense for scatter since data are formatted as a point\n\t\t\t},\n\t\t\tlabel: function(item) {\n\t\t\t\treturn '(' + item.xLabel + ', ' + item.yLabel + ')';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\t// Scatter charts use line controllers\n\tChart.controllers.scatter = Chart.controllers.line;\n\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar elements = require('../elements/index');\nvar helpers = require('../helpers/index');\n\ndefaults._set('polarArea', {\n\tscale: {\n\t\ttype: 'radialLinear',\n\t\tangleLines: {\n\t\t\tdisplay: false\n\t\t},\n\t\tgridLines: {\n\t\t\tcircular: true\n\t\t},\n\t\tpointLabels: {\n\t\t\tdisplay: false\n\t\t},\n\t\tticks: {\n\t\t\tbeginAtZero: true\n\t\t}\n\t},\n\n\t// Boolean - Whether to animate the rotation of the chart\n\tanimation: {\n\t\tanimateRotate: true,\n\t\tanimateScale: true\n\t},\n\n\tstartAngle: -0.5 * Math.PI,\n\tlegendCallback: function(chart) {\n\t\tvar text = [];\n\t\ttext.push('<ul class=\"' + chart.id + '-legend\">');\n\n\t\tvar data = chart.data;\n\t\tvar datasets = data.datasets;\n\t\tvar labels = data.labels;\n\n\t\tif (datasets.length) {\n\t\t\tfor (var i = 0; i < datasets[0].data.length; ++i) {\n\t\t\t\ttext.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\t\t\t\tif (labels[i]) {\n\t\t\t\t\ttext.push(labels[i]);\n\t\t\t\t}\n\t\t\t\ttext.push('</li>');\n\t\t\t}\n\t\t}\n\n\t\ttext.push('</ul>');\n\t\treturn text.join('');\n\t},\n\tlegend: {\n\t\tlabels: {\n\t\t\tgenerateLabels: function(chart) {\n\t\t\t\tvar data = chart.data;\n\t\t\t\tif (data.labels.length && data.datasets.length) {\n\t\t\t\t\treturn data.labels.map(function(label, i) {\n\t\t\t\t\t\tvar meta = chart.getDatasetMeta(0);\n\t\t\t\t\t\tvar ds = data.datasets[0];\n\t\t\t\t\t\tvar arc = meta.data[i];\n\t\t\t\t\t\tvar custom = arc.custom || {};\n\t\t\t\t\t\tvar valueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\t\t\t\tvar arcOpts = chart.options.elements.arc;\n\t\t\t\t\t\tvar fill = custom.backgroundColor ? custom.backgroundColor : valueAtIndexOrDefault(ds.backgroundColor, i, arcOpts.backgroundColor);\n\t\t\t\t\t\tvar stroke = custom.borderColor ? custom.borderColor : valueAtIndexOrDefault(ds.borderColor, i, arcOpts.borderColor);\n\t\t\t\t\t\tvar bw = custom.borderWidth ? custom.borderWidth : valueAtIndexOrDefault(ds.borderWidth, i, arcOpts.borderWidth);\n\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\ttext: label,\n\t\t\t\t\t\t\tfillStyle: fill,\n\t\t\t\t\t\t\tstrokeStyle: stroke,\n\t\t\t\t\t\t\tlineWidth: bw,\n\t\t\t\t\t\t\thidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n\n\t\t\t\t\t\t\t// Extra data used for toggling the correct item\n\t\t\t\t\t\t\tindex: i\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\t},\n\n\t\tonClick: function(e, legendItem) {\n\t\t\tvar index = legendItem.index;\n\t\t\tvar chart = this.chart;\n\t\t\tvar i, ilen, meta;\n\n\t\t\tfor (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tmeta = chart.getDatasetMeta(i);\n\t\t\t\tmeta.data[index].hidden = !meta.data[index].hidden;\n\t\t\t}\n\n\t\t\tchart.update();\n\t\t}\n\t},\n\n\t// Need to override these to give a nice default\n\ttooltips: {\n\t\tcallbacks: {\n\t\t\ttitle: function() {\n\t\t\t\treturn '';\n\t\t\t},\n\t\t\tlabel: function(item, data) {\n\t\t\t\treturn data.labels[item.index] + ': ' + item.yLabel;\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = function(Chart) {\n\n\tChart.controllers.polarArea = Chart.DatasetController.extend({\n\n\t\tdataElementType: elements.Arc,\n\n\t\tlinkScales: helpers.noop,\n\n\t\tupdate: function(reset) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\t\t\tvar start = me.chart.options.startAngle || 0;\n\t\t\tvar starts = me._starts = [];\n\t\t\tvar angles = me._angles = [];\n\t\t\tvar i, ilen, angle;\n\n\t\t\tme._updateRadius();\n\n\t\t\tmeta.count = me.countVisibleElements();\n\n\t\t\tfor (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n\t\t\t\tstarts[i] = start;\n\t\t\t\tangle = me._computeAngle(i);\n\t\t\t\tangles[i] = angle;\n\t\t\t\tstart += angle;\n\t\t\t}\n\n\t\t\thelpers.each(meta.data, function(arc, index) {\n\t\t\t\tme.updateElement(arc, index, reset);\n\t\t\t});\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_updateRadius: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar chartArea = chart.chartArea;\n\t\t\tvar opts = chart.options;\n\t\t\tvar arcOpts = opts.elements.arc;\n\t\t\tvar minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n\t\t\tchart.outerRadius = Math.max((minSize - arcOpts.borderWidth / 2) / 2, 0);\n\t\t\tchart.innerRadius = Math.max(opts.cutoutPercentage ? (chart.outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n\t\t\tchart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n\n\t\t\tme.outerRadius = chart.outerRadius - (chart.radiusLength * me.index);\n\t\t\tme.innerRadius = me.outerRadius - chart.radiusLength;\n\t\t},\n\n\t\tupdateElement: function(arc, index, reset) {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar opts = chart.options;\n\t\t\tvar animationOpts = opts.animation;\n\t\t\tvar scale = chart.scale;\n\t\t\tvar labels = chart.data.labels;\n\n\t\t\tvar centerX = scale.xCenter;\n\t\t\tvar centerY = scale.yCenter;\n\n\t\t\t// var negHalfPI = -0.5 * Math.PI;\n\t\t\tvar datasetStartAngle = opts.startAngle;\n\t\t\tvar distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\t\t\tvar startAngle = me._starts[index];\n\t\t\tvar endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n\n\t\t\tvar resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n\n\t\t\thelpers.extend(arc, {\n\t\t\t\t// Utility\n\t\t\t\t_datasetIndex: me.index,\n\t\t\t\t_index: index,\n\t\t\t\t_scale: scale,\n\n\t\t\t\t// Desired view properties\n\t\t\t\t_model: {\n\t\t\t\t\tx: centerX,\n\t\t\t\t\ty: centerY,\n\t\t\t\t\tinnerRadius: 0,\n\t\t\t\t\touterRadius: reset ? resetRadius : distance,\n\t\t\t\t\tstartAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n\t\t\t\t\tendAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n\t\t\t\t\tlabel: helpers.valueAtIndexOrDefault(labels, index, labels[index])\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Apply border and fill style\n\t\t\tvar elementOpts = this.chart.options.elements.arc;\n\t\t\tvar custom = arc.custom || {};\n\t\t\tvar valueOrDefault = helpers.valueAtIndexOrDefault;\n\t\t\tvar model = arc._model;\n\n\t\t\tmodel.backgroundColor = custom.backgroundColor ? custom.backgroundColor : valueOrDefault(dataset.backgroundColor, index, elementOpts.backgroundColor);\n\t\t\tmodel.borderColor = custom.borderColor ? custom.borderColor : valueOrDefault(dataset.borderColor, index, elementOpts.borderColor);\n\t\t\tmodel.borderWidth = custom.borderWidth ? custom.borderWidth : valueOrDefault(dataset.borderWidth, index, elementOpts.borderWidth);\n\n\t\t\tarc.pivot();\n\t\t},\n\n\t\tcountVisibleElements: function() {\n\t\t\tvar dataset = this.getDataset();\n\t\t\tvar meta = this.getMeta();\n\t\t\tvar count = 0;\n\n\t\t\thelpers.each(meta.data, function(element, index) {\n\t\t\t\tif (!isNaN(dataset.data[index]) && !element.hidden) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn count;\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\t_computeAngle: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar count = this.getMeta().count;\n\t\t\tvar dataset = me.getDataset();\n\t\t\tvar meta = me.getMeta();\n\n\t\t\tif (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\t// Scriptable options\n\t\t\tvar context = {\n\t\t\t\tchart: me.chart,\n\t\t\t\tdataIndex: index,\n\t\t\t\tdataset: dataset,\n\t\t\t\tdatasetIndex: me.index\n\t\t\t};\n\n\t\t\treturn helpers.options.resolve([\n\t\t\t\tme.chart.options.elements.arc.angle,\n\t\t\t\t(2 * Math.PI) / count\n\t\t\t], context, index);\n\t\t}\n\t});\n};\n","'use strict';\n\nvar Animation = require('./core.animation');\nvar animations = require('./core.animations');\nvar defaults = require('./core.defaults');\nvar helpers = require('../helpers/index');\nvar Interaction = require('./core.interaction');\nvar layouts = require('./core.layouts');\nvar platform = require('../platforms/platform');\nvar plugins = require('./core.plugins');\nvar scaleService = require('../core/core.scaleService');\nvar Tooltip = require('./core.tooltip');\n\nmodule.exports = function(Chart) {\n\n\t// Create a dictionary of chart types, to allow for extension of existing types\n\tChart.types = {};\n\n\t// Store a reference to each instance - allowing us to globally resize chart instances on window resize.\n\t// Destroy method on the chart will remove the instance of the chart from this reference.\n\tChart.instances = {};\n\n\t// Controllers available for dataset visualization eg. bar, line, slice, etc.\n\tChart.controllers = {};\n\n\t/**\n\t * Initializes the given config with global and chart default values.\n\t */\n\tfunction initConfig(config) {\n\t\tconfig = config || {};\n\n\t\t// Do NOT use configMerge() for the data object because this method merges arrays\n\t\t// and so would change references to labels and datasets, preventing data updates.\n\t\tvar data = config.data = config.data || {};\n\t\tdata.datasets = data.datasets || [];\n\t\tdata.labels = data.labels || [];\n\n\t\tconfig.options = helpers.configMerge(\n\t\t\tdefaults.global,\n\t\t\tdefaults[config.type],\n\t\t\tconfig.options || {});\n\n\t\treturn config;\n\t}\n\n\t/**\n\t * Updates the config of the chart\n\t * @param chart {Chart} chart to update the options for\n\t */\n\tfunction updateConfig(chart) {\n\t\tvar newOptions = chart.options;\n\n\t\thelpers.each(chart.scales, function(scale) {\n\t\t\tlayouts.removeBox(chart, scale);\n\t\t});\n\n\t\tnewOptions = helpers.configMerge(\n\t\t\tChart.defaults.global,\n\t\t\tChart.defaults[chart.config.type],\n\t\t\tnewOptions);\n\n\t\tchart.options = chart.config.options = newOptions;\n\t\tchart.ensureScalesHaveIDs();\n\t\tchart.buildOrUpdateScales();\n\t\t// Tooltip\n\t\tchart.tooltip._options = newOptions.tooltips;\n\t\tchart.tooltip.initialize();\n\t}\n\n\tfunction positionIsHorizontal(position) {\n\t\treturn position === 'top' || position === 'bottom';\n\t}\n\n\thelpers.extend(Chart.prototype, /** @lends Chart */ {\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tconstruct: function(item, config) {\n\t\t\tvar me = this;\n\n\t\t\tconfig = initConfig(config);\n\n\t\t\tvar context = platform.acquireContext(item, config);\n\t\t\tvar canvas = context && context.canvas;\n\t\t\tvar height = canvas && canvas.height;\n\t\t\tvar width = canvas && canvas.width;\n\n\t\t\tme.id = helpers.uid();\n\t\t\tme.ctx = context;\n\t\t\tme.canvas = canvas;\n\t\t\tme.config = config;\n\t\t\tme.width = width;\n\t\t\tme.height = height;\n\t\t\tme.aspectRatio = height ? width / height : null;\n\t\t\tme.options = config.options;\n\t\t\tme._bufferedRender = false;\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n\t\t\t * the \"instance\" still need to be defined since it might be called from plugins.\n\t\t\t * @prop Chart#chart\n\t\t\t * @deprecated since version 2.6.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tme.chart = me;\n\t\t\tme.controller = me; // chart.chart.controller #inception\n\n\t\t\t// Add the chart instance to the global namespace\n\t\t\tChart.instances[me.id] = me;\n\n\t\t\t// Define alias to the config data: `chart.data === chart.config.data`\n\t\t\tObject.defineProperty(me, 'data', {\n\t\t\t\tget: function() {\n\t\t\t\t\treturn me.config.data;\n\t\t\t\t},\n\t\t\t\tset: function(value) {\n\t\t\t\t\tme.config.data = value;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (!context || !canvas) {\n\t\t\t\t// The given item is not a compatible context2d element, let's return before finalizing\n\t\t\t\t// the chart initialization but after setting basic chart / controller properties that\n\t\t\t\t// can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n\t\t\t\t// https://github.com/chartjs/Chart.js/issues/2807\n\t\t\t\tconsole.error(\"Failed to create chart: can't acquire context from the given item\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tme.initialize();\n\t\t\tme.update();\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tinitialize: function() {\n\t\t\tvar me = this;\n\n\t\t\t// Before init plugin notification\n\t\t\tplugins.notify(me, 'beforeInit');\n\n\t\t\thelpers.retinaScale(me, me.options.devicePixelRatio);\n\n\t\t\tme.bindEvents();\n\n\t\t\tif (me.options.responsive) {\n\t\t\t\t// Initial resize before chart draws (must be silent to preserve initial animations).\n\t\t\t\tme.resize(true);\n\t\t\t}\n\n\t\t\t// Make sure scales have IDs and are built before we build any controllers.\n\t\t\tme.ensureScalesHaveIDs();\n\t\t\tme.buildOrUpdateScales();\n\t\t\tme.initToolTip();\n\n\t\t\t// After init plugin notification\n\t\t\tplugins.notify(me, 'afterInit');\n\n\t\t\treturn me;\n\t\t},\n\n\t\tclear: function() {\n\t\t\thelpers.canvas.clear(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tstop: function() {\n\t\t\t// Stops any current animation loop occurring\n\t\t\tanimations.cancelAnimation(this);\n\t\t\treturn this;\n\t\t},\n\n\t\tresize: function(silent) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar aspectRatio = (options.maintainAspectRatio && me.aspectRatio) || null;\n\n\t\t\t// the canvas render width and height will be casted to integers so make sure that\n\t\t\t// the canvas display style uses the same integer values to avoid blurring effect.\n\n\t\t\t// Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\t\t\tvar newWidth = Math.max(0, Math.floor(helpers.getMaximumWidth(canvas)));\n\t\t\tvar newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers.getMaximumHeight(canvas)));\n\n\t\t\tif (me.width === newWidth && me.height === newHeight) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcanvas.width = me.width = newWidth;\n\t\t\tcanvas.height = me.height = newHeight;\n\t\t\tcanvas.style.width = newWidth + 'px';\n\t\t\tcanvas.style.height = newHeight + 'px';\n\n\t\t\thelpers.retinaScale(me, options.devicePixelRatio);\n\n\t\t\tif (!silent) {\n\t\t\t\t// Notify any plugins about the resize\n\t\t\t\tvar newSize = {width: newWidth, height: newHeight};\n\t\t\t\tplugins.notify(me, 'resize', [newSize]);\n\n\t\t\t\t// Notify of resize\n\t\t\t\tif (me.options.onResize) {\n\t\t\t\t\tme.options.onResize(me, newSize);\n\t\t\t\t}\n\n\t\t\t\tme.stop();\n\t\t\t\tme.update({\n\t\t\t\t\tduration: me.options.responsiveAnimationDuration\n\t\t\t\t});\n\t\t\t}\n\t\t},\n\n\t\tensureScalesHaveIDs: function() {\n\t\t\tvar options = this.options;\n\t\t\tvar scalesOptions = options.scales || {};\n\t\t\tvar scaleOptions = options.scale;\n\n\t\t\thelpers.each(scalesOptions.xAxes, function(xAxisOptions, index) {\n\t\t\t\txAxisOptions.id = xAxisOptions.id || ('x-axis-' + index);\n\t\t\t});\n\n\t\t\thelpers.each(scalesOptions.yAxes, function(yAxisOptions, index) {\n\t\t\t\tyAxisOptions.id = yAxisOptions.id || ('y-axis-' + index);\n\t\t\t});\n\n\t\t\tif (scaleOptions) {\n\t\t\t\tscaleOptions.id = scaleOptions.id || 'scale';\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Builds a map of scale ID to scale object for future lookup.\n\t\t */\n\t\tbuildOrUpdateScales: function() {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options;\n\t\t\tvar scales = me.scales || {};\n\t\t\tvar items = [];\n\t\t\tvar updated = Object.keys(scales).reduce(function(obj, id) {\n\t\t\t\tobj[id] = false;\n\t\t\t\treturn obj;\n\t\t\t}, {});\n\n\t\t\tif (options.scales) {\n\t\t\t\titems = items.concat(\n\t\t\t\t\t(options.scales.xAxes || []).map(function(xAxisOptions) {\n\t\t\t\t\t\treturn {options: xAxisOptions, dtype: 'category', dposition: 'bottom'};\n\t\t\t\t\t}),\n\t\t\t\t\t(options.scales.yAxes || []).map(function(yAxisOptions) {\n\t\t\t\t\t\treturn {options: yAxisOptions, dtype: 'linear', dposition: 'left'};\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (options.scale) {\n\t\t\t\titems.push({\n\t\t\t\t\toptions: options.scale,\n\t\t\t\t\tdtype: 'radialLinear',\n\t\t\t\t\tisDefault: true,\n\t\t\t\t\tdposition: 'chartArea'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thelpers.each(items, function(item) {\n\t\t\t\tvar scaleOptions = item.options;\n\t\t\t\tvar id = scaleOptions.id;\n\t\t\t\tvar scaleType = helpers.valueOrDefault(scaleOptions.type, item.dtype);\n\n\t\t\t\tif (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n\t\t\t\t\tscaleOptions.position = item.dposition;\n\t\t\t\t}\n\n\t\t\t\tupdated[id] = true;\n\t\t\t\tvar scale = null;\n\t\t\t\tif (id in scales && scales[id].type === scaleType) {\n\t\t\t\t\tscale = scales[id];\n\t\t\t\t\tscale.options = scaleOptions;\n\t\t\t\t\tscale.ctx = me.ctx;\n\t\t\t\t\tscale.chart = me;\n\t\t\t\t} else {\n\t\t\t\t\tvar scaleClass = scaleService.getScaleConstructor(scaleType);\n\t\t\t\t\tif (!scaleClass) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tscale = new scaleClass({\n\t\t\t\t\t\tid: id,\n\t\t\t\t\t\ttype: scaleType,\n\t\t\t\t\t\toptions: scaleOptions,\n\t\t\t\t\t\tctx: me.ctx,\n\t\t\t\t\t\tchart: me\n\t\t\t\t\t});\n\t\t\t\t\tscales[scale.id] = scale;\n\t\t\t\t}\n\n\t\t\t\tscale.mergeTicksOptions();\n\n\t\t\t\t// TODO(SB): I think we should be able to remove this custom case (options.scale)\n\t\t\t\t// and consider it as a regular scale part of the \"scales\"\" map only! This would\n\t\t\t\t// make the logic easier and remove some useless? custom code.\n\t\t\t\tif (item.isDefault) {\n\t\t\t\t\tme.scale = scale;\n\t\t\t\t}\n\t\t\t});\n\t\t\t// clear up discarded scales\n\t\t\thelpers.each(updated, function(hasUpdated, id) {\n\t\t\t\tif (!hasUpdated) {\n\t\t\t\t\tdelete scales[id];\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.scales = scales;\n\n\t\t\tscaleService.addScalesToLayout(this);\n\t\t},\n\n\t\tbuildOrUpdateControllers: function() {\n\t\t\tvar me = this;\n\t\t\tvar types = [];\n\t\t\tvar newControllers = [];\n\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tvar meta = me.getDatasetMeta(datasetIndex);\n\t\t\t\tvar type = dataset.type || me.config.type;\n\n\t\t\t\tif (meta.type && meta.type !== type) {\n\t\t\t\t\tme.destroyDatasetMeta(datasetIndex);\n\t\t\t\t\tmeta = me.getDatasetMeta(datasetIndex);\n\t\t\t\t}\n\t\t\t\tmeta.type = type;\n\n\t\t\t\ttypes.push(meta.type);\n\n\t\t\t\tif (meta.controller) {\n\t\t\t\t\tmeta.controller.updateIndex(datasetIndex);\n\t\t\t\t\tmeta.controller.linkScales();\n\t\t\t\t} else {\n\t\t\t\t\tvar ControllerClass = Chart.controllers[meta.type];\n\t\t\t\t\tif (ControllerClass === undefined) {\n\t\t\t\t\t\tthrow new Error('\"' + meta.type + '\" is not a chart type.');\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.controller = new ControllerClass(me, datasetIndex);\n\t\t\t\t\tnewControllers.push(meta.controller);\n\t\t\t\t}\n\t\t\t}, me);\n\n\t\t\treturn newControllers;\n\t\t},\n\n\t\t/**\n\t\t * Reset the elements of all datasets\n\t\t * @private\n\t\t */\n\t\tresetElements: function() {\n\t\t\tvar me = this;\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.reset();\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t* Resets the chart back to it's state before the initial animation\n\t\t*/\n\t\treset: function() {\n\t\t\tthis.resetElements();\n\t\t\tthis.tooltip.initialize();\n\t\t},\n\n\t\tupdate: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tupdateConfig(me);\n\n\t\t\t// plugins options references might have change, let's invalidate the cache\n\t\t\t// https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\t\t\tplugins._invalidate(me);\n\n\t\t\tif (plugins.notify(me, 'beforeUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// In case the entire data object changed\n\t\t\tme.tooltip._data = me.data;\n\n\t\t\t// Make sure dataset controllers are updated and new controllers are reset\n\t\t\tvar newControllers = me.buildOrUpdateControllers();\n\n\t\t\t// Make sure all dataset controllers have correct meta data counts\n\t\t\thelpers.each(me.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tme.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n\t\t\t}, me);\n\n\t\t\tme.updateLayout();\n\n\t\t\t// Can only reset the new controllers after the scales have been updated\n\t\t\tif (me.options.animation && me.options.animation.duration) {\n\t\t\t\thelpers.each(newControllers, function(controller) {\n\t\t\t\t\tcontroller.reset();\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme.updateDatasets();\n\n\t\t\t// Need to reset tooltip in case it is displayed with elements that are removed\n\t\t\t// after update.\n\t\t\tme.tooltip.initialize();\n\n\t\t\t// Last active contains items that were previously in the tooltip.\n\t\t\t// When we reset the tooltip, we need to clear it\n\t\t\tme.lastActive = [];\n\n\t\t\t// Do this before render so that any plugins that need final scale updates can use it\n\t\t\tplugins.notify(me, 'afterUpdate');\n\n\t\t\tif (me._bufferedRender) {\n\t\t\t\tme._bufferedRequest = {\n\t\t\t\t\tduration: config.duration,\n\t\t\t\t\teasing: config.easing,\n\t\t\t\t\tlazy: config.lazy\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tme.render(config);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t\t * @private\n\t\t */\n\t\tupdateLayout: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeLayout') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlayouts.update(this, this.width, this.height);\n\n\t\t\t/**\n\t\t\t * Provided for backward compatibility, use `afterLayout` instead.\n\t\t\t * @method IPlugin#afterScaleUpdate\n\t\t\t * @deprecated since version 2.5.0\n\t\t\t * @todo remove at version 3\n\t\t\t * @private\n\t\t\t */\n\t\t\tplugins.notify(me, 'afterScaleUpdate');\n\t\t\tplugins.notify(me, 'afterLayout');\n\t\t},\n\n\t\t/**\n\t\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDatasets: function() {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.updateDataset(i);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsUpdate');\n\t\t},\n\n\t\t/**\n\t\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t\t * @private\n\t\t */\n\t\tupdateDataset: function(index) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.update();\n\n\t\t\tplugins.notify(me, 'afterDatasetUpdate', [args]);\n\t\t},\n\n\t\trender: function(config) {\n\t\t\tvar me = this;\n\n\t\t\tif (!config || typeof config !== 'object') {\n\t\t\t\t// backwards compatibility\n\t\t\t\tconfig = {\n\t\t\t\t\tduration: config,\n\t\t\t\t\tlazy: arguments[1]\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tvar duration = config.duration;\n\t\t\tvar lazy = config.lazy;\n\n\t\t\tif (plugins.notify(me, 'beforeRender') === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar animationOptions = me.options.animation;\n\t\t\tvar onComplete = function(animation) {\n\t\t\t\tplugins.notify(me, 'afterRender');\n\t\t\t\thelpers.callback(animationOptions && animationOptions.onComplete, [animation], me);\n\t\t\t};\n\n\t\t\tif (animationOptions && ((typeof duration !== 'undefined' && duration !== 0) || (typeof duration === 'undefined' && animationOptions.duration !== 0))) {\n\t\t\t\tvar animation = new Animation({\n\t\t\t\t\tnumSteps: (duration || animationOptions.duration) / 16.66, // 60 fps\n\t\t\t\t\teasing: config.easing || animationOptions.easing,\n\n\t\t\t\t\trender: function(chart, animationObject) {\n\t\t\t\t\t\tvar easingFunction = helpers.easing.effects[animationObject.easing];\n\t\t\t\t\t\tvar currentStep = animationObject.currentStep;\n\t\t\t\t\t\tvar stepDecimal = currentStep / animationObject.numSteps;\n\n\t\t\t\t\t\tchart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n\t\t\t\t\t},\n\n\t\t\t\t\tonAnimationProgress: animationOptions.onProgress,\n\t\t\t\t\tonAnimationComplete: onComplete\n\t\t\t\t});\n\n\t\t\t\tanimations.addAnimation(me, animation, duration, lazy);\n\t\t\t} else {\n\t\t\t\tme.draw();\n\n\t\t\t\t// See https://github.com/chartjs/Chart.js/issues/3781\n\t\t\t\tonComplete(new Animation({numSteps: 0, chart: me}));\n\t\t\t}\n\n\t\t\treturn me;\n\t\t},\n\n\t\tdraw: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tme.clear();\n\n\t\t\tif (helpers.isNullOrUndef(easingValue)) {\n\t\t\t\teasingValue = 1;\n\t\t\t}\n\n\t\t\tme.transition(easingValue);\n\n\t\t\tif (me.width <= 0 || me.height <= 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw all the scales\n\t\t\thelpers.each(me.boxes, function(box) {\n\t\t\t\tbox.draw(me.chartArea);\n\t\t\t}, me);\n\n\t\t\tif (me.scale) {\n\t\t\t\tme.scale.draw();\n\t\t\t}\n\n\t\t\tme.drawDatasets(easingValue);\n\t\t\tme._drawTooltip(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\ttransition: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tfor (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.getDatasetMeta(i).controller.transition(easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.tooltip.transition(easingValue);\n\t\t},\n\n\t\t/**\n\t\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDatasets: function(easingValue) {\n\t\t\tvar me = this;\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Draw datasets reversed to support proper line stacking\n\t\t\tfor (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n\t\t\t\tif (me.isDatasetVisible(i)) {\n\t\t\t\t\tme.drawDataset(i, easingValue);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n\t\t},\n\n\t\t/**\n\t\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t\t * @private\n\t\t */\n\t\tdrawDataset: function(index, easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar meta = me.getDatasetMeta(index);\n\t\t\tvar args = {\n\t\t\t\tmeta: meta,\n\t\t\t\tindex: index,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tmeta.controller.draw(easingValue);\n\n\t\t\tplugins.notify(me, 'afterDatasetDraw', [args]);\n\t\t},\n\n\t\t/**\n\t\t * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n\t\t * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n\t\t * @private\n\t\t */\n\t\t_drawTooltip: function(easingValue) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\t\t\tvar args = {\n\t\t\t\ttooltip: tooltip,\n\t\t\t\teasingValue: easingValue\n\t\t\t};\n\n\t\t\tif (plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttooltip.draw();\n\n\t\t\tplugins.notify(me, 'afterTooltipDraw', [args]);\n\t\t},\n\n\t\t// Get the single element that was clicked on\n\t\t// @return : An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n\t\tgetElementAtEvent: function(e) {\n\t\t\treturn Interaction.modes.single(this, e);\n\t\t},\n\n\t\tgetElementsAtEvent: function(e) {\n\t\t\treturn Interaction.modes.label(this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtXAxis: function(e) {\n\t\t\treturn Interaction.modes['x-axis'](this, e, {intersect: true});\n\t\t},\n\n\t\tgetElementsAtEventForMode: function(e, mode, options) {\n\t\t\tvar method = Interaction.modes[mode];\n\t\t\tif (typeof method === 'function') {\n\t\t\t\treturn method(this, e, options);\n\t\t\t}\n\n\t\t\treturn [];\n\t\t},\n\n\t\tgetDatasetAtEvent: function(e) {\n\t\t\treturn Interaction.modes.dataset(this, e, {intersect: true});\n\t\t},\n\n\t\tgetDatasetMeta: function(datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar dataset = me.data.datasets[datasetIndex];\n\t\t\tif (!dataset._meta) {\n\t\t\t\tdataset._meta = {};\n\t\t\t}\n\n\t\t\tvar meta = dataset._meta[me.id];\n\t\t\tif (!meta) {\n\t\t\t\tmeta = dataset._meta[me.id] = {\n\t\t\t\t\ttype: null,\n\t\t\t\t\tdata: [],\n\t\t\t\t\tdataset: null,\n\t\t\t\t\tcontroller: null,\n\t\t\t\t\thidden: null,\t\t\t// See isDatasetVisible() comment\n\t\t\t\t\txAxisID: null,\n\t\t\t\t\tyAxisID: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn meta;\n\t\t},\n\n\t\tgetVisibleDatasetCount: function() {\n\t\t\tvar count = 0;\n\t\t\tfor (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tif (this.isDatasetVisible(i)) {\n\t\t\t\t\tcount++;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn count;\n\t\t},\n\n\t\tisDatasetVisible: function(datasetIndex) {\n\t\t\tvar meta = this.getDatasetMeta(datasetIndex);\n\n\t\t\t// meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n\t\t\t// the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\t\t\treturn typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n\t\t},\n\n\t\tgenerateLegend: function() {\n\t\t\treturn this.options.legendCallback(this);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tdestroyDatasetMeta: function(datasetIndex) {\n\t\t\tvar id = this.id;\n\t\t\tvar dataset = this.data.datasets[datasetIndex];\n\t\t\tvar meta = dataset._meta && dataset._meta[id];\n\n\t\t\tif (meta) {\n\t\t\t\tmeta.controller.destroy();\n\t\t\t\tdelete dataset._meta[id];\n\t\t\t}\n\t\t},\n\n\t\tdestroy: function() {\n\t\t\tvar me = this;\n\t\t\tvar canvas = me.canvas;\n\t\t\tvar i, ilen;\n\n\t\t\tme.stop();\n\n\t\t\t// dataset controllers need to cleanup associated data\n\t\t\tfor (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n\t\t\t\tme.destroyDatasetMeta(i);\n\t\t\t}\n\n\t\t\tif (canvas) {\n\t\t\t\tme.unbindEvents();\n\t\t\t\thelpers.canvas.clear(me);\n\t\t\t\tplatform.releaseContext(me.ctx);\n\t\t\t\tme.canvas = null;\n\t\t\t\tme.ctx = null;\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'destroy');\n\n\t\t\tdelete Chart.instances[me.id];\n\t\t},\n\n\t\ttoBase64Image: function() {\n\t\t\treturn this.canvas.toDataURL.apply(this.canvas, arguments);\n\t\t},\n\n\t\tinitToolTip: function() {\n\t\t\tvar me = this;\n\t\t\tme.tooltip = new Tooltip({\n\t\t\t\t_chart: me,\n\t\t\t\t_chartInstance: me, // deprecated, backward compatibility\n\t\t\t\t_data: me.data,\n\t\t\t\t_options: me.options.tooltips\n\t\t\t}, me);\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners = {};\n\t\t\tvar listener = function() {\n\t\t\t\tme.eventHandler.apply(me, arguments);\n\t\t\t};\n\n\t\t\thelpers.each(me.options.events, function(type) {\n\t\t\t\tplatform.addEventListener(me, type, listener);\n\t\t\t\tlisteners[type] = listener;\n\t\t\t});\n\n\t\t\t// Elements used to detect size change should not be injected for non responsive charts.\n\t\t\t// See https://github.com/chartjs/Chart.js/issues/2210\n\t\t\tif (me.options.responsive) {\n\t\t\t\tlistener = function() {\n\t\t\t\t\tme.resize();\n\t\t\t\t};\n\n\t\t\t\tplatform.addEventListener(me, 'resize', listener);\n\t\t\t\tlisteners.resize = listener;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\tunbindEvents: function() {\n\t\t\tvar me = this;\n\t\t\tvar listeners = me._listeners;\n\t\t\tif (!listeners) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdelete me._listeners;\n\t\t\thelpers.each(listeners, function(listener, type) {\n\t\t\t\tplatform.removeEventListener(me, type, listener);\n\t\t\t});\n\t\t},\n\n\t\tupdateHoverStyle: function(elements, mode, enabled) {\n\t\t\tvar method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n\t\t\tvar element, i, ilen;\n\n\t\t\tfor (i = 0, ilen = elements.length; i < ilen; ++i) {\n\t\t\t\telement = elements[i];\n\t\t\t\tif (element) {\n\t\t\t\t\tthis.getDatasetMeta(element._datasetIndex).controller[method](element);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * @private\n\t\t */\n\t\teventHandler: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar tooltip = me.tooltip;\n\n\t\t\tif (plugins.notify(me, 'beforeEvent', [e]) === false) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Buffer any update calls so that renders do not occur\n\t\t\tme._bufferedRender = true;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\tvar changed = me.handleEvent(e);\n\t\t\t// for smooth tooltip animations issue #4989\n\t\t\t// the tooltip should be the source of change\n\t\t\t// Animation check workaround:\n\t\t\t// tooltip._start will be null when tooltip isn't animating\n\t\t\tif (tooltip) {\n\t\t\t\tchanged = tooltip._start\n\t\t\t\t\t? tooltip.handleEvent(e)\n\t\t\t\t\t: changed | tooltip.handleEvent(e);\n\t\t\t}\n\n\t\t\tplugins.notify(me, 'afterEvent', [e]);\n\n\t\t\tvar bufferedRequest = me._bufferedRequest;\n\t\t\tif (bufferedRequest) {\n\t\t\t\t// If we have an update that was triggered, we need to do a normal render\n\t\t\t\tme.render(bufferedRequest);\n\t\t\t} else if (changed && !me.animating) {\n\t\t\t\t// If entering, leaving, or changing elements, animate the change via pivot\n\t\t\t\tme.stop();\n\n\t\t\t\t// We only need to render at this point. Updating will cause scales to be\n\t\t\t\t// recomputed generating flicker & using more memory than necessary.\n\t\t\t\tme.render({\n\t\t\t\t\tduration: me.options.hover.animationDuration,\n\t\t\t\t\tlazy: true\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tme._bufferedRender = false;\n\t\t\tme._bufferedRequest = null;\n\n\t\t\treturn me;\n\t\t},\n\n\t\t/**\n\t\t * Handle an event\n\t\t * @private\n\t\t * @param {IEvent} event the event to handle\n\t\t * @return {Boolean} true if the chart needs to re-render\n\t\t */\n\t\thandleEvent: function(e) {\n\t\t\tvar me = this;\n\t\t\tvar options = me.options || {};\n\t\t\tvar hoverOptions = options.hover;\n\t\t\tvar changed = false;\n\n\t\t\tme.lastActive = me.lastActive || [];\n\n\t\t\t// Find Active Elements for hover and tooltips\n\t\t\tif (e.type === 'mouseout') {\n\t\t\t\tme.active = [];\n\t\t\t} else {\n\t\t\t\tme.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n\t\t\t}\n\n\t\t\t// Invoke onHover hook\n\t\t\t// Need to call with native event here to not break backwards compatibility\n\t\t\thelpers.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n\t\t\tif (e.type === 'mouseup' || e.type === 'click') {\n\t\t\t\tif (options.onClick) {\n\t\t\t\t\t// Use e.native here for backwards compatibility\n\t\t\t\t\toptions.onClick.call(me, e.native, me.active);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove styling for last active (even if it may still be active)\n\t\t\tif (me.lastActive.length) {\n\t\t\t\tme.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n\t\t\t}\n\n\t\t\t// Built in hover styling\n\t\t\tif (me.active.length && hoverOptions.mode) {\n\t\t\t\tme.updateHoverStyle(me.active, hoverOptions.mode, true);\n\t\t\t}\n\n\t\t\tchanged = !helpers.arrayEquals(me.active, me.lastActive);\n\n\t\t\t// Remember Last Actives\n\t\t\tme.lastActive = me.active;\n\n\t\t\treturn changed;\n\t\t}\n\t});\n\n\t/**\n\t * Provided for backward compatibility, use Chart instead.\n\t * @class Chart.Controller\n\t * @deprecated since version 2.6.0\n\t * @todo remove at version 3\n\t * @private\n\t */\n\tChart.Controller = Chart;\n};\n","/* MIT license */\nvar convert = require('color-convert');\nvar string = require('chartjs-color-string');\n\nvar Color = function (obj) {\n\tif (obj instanceof Color) {\n\t\treturn obj;\n\t}\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj);\n\t}\n\n\tthis.valid = false;\n\tthis.values = {\n\t\trgb: [0, 0, 0],\n\t\thsl: [0, 0, 0],\n\t\thsv: [0, 0, 0],\n\t\thwb: [0, 0, 0],\n\t\tcmyk: [0, 0, 0, 0],\n\t\talpha: 1\n\t};\n\n\t// parse Color() argument\n\tvar vals;\n\tif (typeof obj === 'string') {\n\t\tvals = string.getRgba(obj);\n\t\tif (vals) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals = string.getHsla(obj)) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals = string.getHwb(obj)) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t}\n\t} else if (typeof obj === 'object') {\n\t\tvals = obj;\n\t\tif (vals.r !== undefined || vals.red !== undefined) {\n\t\t\tthis.setValues('rgb', vals);\n\t\t} else if (vals.l !== undefined || vals.lightness !== undefined) {\n\t\t\tthis.setValues('hsl', vals);\n\t\t} else if (vals.v !== undefined || vals.value !== undefined) {\n\t\t\tthis.setValues('hsv', vals);\n\t\t} else if (vals.w !== undefined || vals.whiteness !== undefined) {\n\t\t\tthis.setValues('hwb', vals);\n\t\t} else if (vals.c !== undefined || vals.cyan !== undefined) {\n\t\t\tthis.setValues('cmyk', vals);\n\t\t}\n\t}\n};\n\nColor.prototype = {\n\tisValid: function () {\n\t\treturn this.valid;\n\t},\n\trgb: function () {\n\t\treturn this.setSpace('rgb', arguments);\n\t},\n\thsl: function () {\n\t\treturn this.setSpace('hsl', arguments);\n\t},\n\thsv: function () {\n\t\treturn this.setSpace('hsv', arguments);\n\t},\n\thwb: function () {\n\t\treturn this.setSpace('hwb', arguments);\n\t},\n\tcmyk: function () {\n\t\treturn this.setSpace('cmyk', arguments);\n\t},\n\n\trgbArray: function () {\n\t\treturn this.values.rgb;\n\t},\n\thslArray: function () {\n\t\treturn this.values.hsl;\n\t},\n\thsvArray: function () {\n\t\treturn this.values.hsv;\n\t},\n\thwbArray: function () {\n\t\tvar values = this.values;\n\t\tif (values.alpha !== 1) {\n\t\t\treturn values.hwb.concat([values.alpha]);\n\t\t}\n\t\treturn values.hwb;\n\t},\n\tcmykArray: function () {\n\t\treturn this.values.cmyk;\n\t},\n\trgbaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.rgb.concat([values.alpha]);\n\t},\n\thslaArray: function () {\n\t\tvar values = this.values;\n\t\treturn values.hsl.concat([values.alpha]);\n\t},\n\talpha: function (val) {\n\t\tif (val === undefined) {\n\t\t\treturn this.values.alpha;\n\t\t}\n\t\tthis.setValues('alpha', val);\n\t\treturn this;\n\t},\n\n\tred: function (val) {\n\t\treturn this.setChannel('rgb', 0, val);\n\t},\n\tgreen: function (val) {\n\t\treturn this.setChannel('rgb', 1, val);\n\t},\n\tblue: function (val) {\n\t\treturn this.setChannel('rgb', 2, val);\n\t},\n\thue: function (val) {\n\t\tif (val) {\n\t\t\tval %= 360;\n\t\t\tval = val < 0 ? 360 + val : val;\n\t\t}\n\t\treturn this.setChannel('hsl', 0, val);\n\t},\n\tsaturation: function (val) {\n\t\treturn this.setChannel('hsl', 1, val);\n\t},\n\tlightness: function (val) {\n\t\treturn this.setChannel('hsl', 2, val);\n\t},\n\tsaturationv: function (val) {\n\t\treturn this.setChannel('hsv', 1, val);\n\t},\n\twhiteness: function (val) {\n\t\treturn this.setChannel('hwb', 1, val);\n\t},\n\tblackness: function (val) {\n\t\treturn this.setChannel('hwb', 2, val);\n\t},\n\tvalue: function (val) {\n\t\treturn this.setChannel('hsv', 2, val);\n\t},\n\tcyan: function (val) {\n\t\treturn this.setChannel('cmyk', 0, val);\n\t},\n\tmagenta: function (val) {\n\t\treturn this.setChannel('cmyk', 1, val);\n\t},\n\tyellow: function (val) {\n\t\treturn this.setChannel('cmyk', 2, val);\n\t},\n\tblack: function (val) {\n\t\treturn this.setChannel('cmyk', 3, val);\n\t},\n\n\thexString: function () {\n\t\treturn string.hexString(this.values.rgb);\n\t},\n\trgbString: function () {\n\t\treturn string.rgbString(this.values.rgb, this.values.alpha);\n\t},\n\trgbaString: function () {\n\t\treturn string.rgbaString(this.values.rgb, this.values.alpha);\n\t},\n\tpercentString: function () {\n\t\treturn string.percentString(this.values.rgb, this.values.alpha);\n\t},\n\thslString: function () {\n\t\treturn string.hslString(this.values.hsl, this.values.alpha);\n\t},\n\thslaString: function () {\n\t\treturn string.hslaString(this.values.hsl, this.values.alpha);\n\t},\n\thwbString: function () {\n\t\treturn string.hwbString(this.values.hwb, this.values.alpha);\n\t},\n\tkeyword: function () {\n\t\treturn string.keyword(this.values.rgb, this.values.alpha);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.values.rgb;\n\t\treturn (rgb[0] << 16) | (rgb[1] << 8) | rgb[2];\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.values.rgb;\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.values.rgb;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = [];\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb[i] = 255 - this.values.rgb[i];\n\t\t}\n\t\tthis.setValues('rgb', rgb);\n\t\treturn this;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] += hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[2] -= hsl[2] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] += hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.values.hsl;\n\t\thsl[1] -= hsl[1] * ratio;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[1] += hwb[1] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.values.hwb;\n\t\thwb[2] += hwb[2] * ratio;\n\t\tthis.setValues('hwb', hwb);\n\t\treturn this;\n\t},\n\n\tgreyscale: function () {\n\t\tvar rgb = this.values.rgb;\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\tthis.setValues('rgb', [val, val, val]);\n\t\treturn this;\n\t},\n\n\tclearer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha - (alpha * ratio));\n\t\treturn this;\n\t},\n\n\topaquer: function (ratio) {\n\t\tvar alpha = this.values.alpha;\n\t\tthis.setValues('alpha', alpha + (alpha * ratio));\n\t\treturn this;\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.values.hsl;\n\t\tvar hue = (hsl[0] + degrees) % 360;\n\t\thsl[0] = hue < 0 ? 360 + hue : hue;\n\t\tthis.setValues('hsl', hsl);\n\t\treturn this;\n\t},\n\n\t/**\n\t * Ported from sass implementation in C\n\t * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t */\n\tmix: function (mixinColor, weight) {\n\t\tvar color1 = this;\n\t\tvar color2 = mixinColor;\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn this\n\t\t\t.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue()\n\t\t\t)\n\t\t\t.alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n\t},\n\n\ttoJSON: function () {\n\t\treturn this.rgb();\n\t},\n\n\tclone: function () {\n\t\t// NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n\t\t// making the final build way to big to embed in Chart.js. So let's do it manually,\n\t\t// assuming that values to clone are 1 dimension arrays containing only numbers,\n\t\t// except 'alpha' which is a number.\n\t\tvar result = new Color();\n\t\tvar source = this.values;\n\t\tvar target = result.values;\n\t\tvar value, type;\n\n\t\tfor (var prop in source) {\n\t\t\tif (source.hasOwnProperty(prop)) {\n\t\t\t\tvalue = source[prop];\n\t\t\t\ttype = ({}).toString.call(value);\n\t\t\t\tif (type === '[object Array]') {\n\t\t\t\t\ttarget[prop] = value.slice(0);\n\t\t\t\t} else if (type === '[object Number]') {\n\t\t\t\t\ttarget[prop] = value;\n\t\t\t\t} else {\n\t\t\t\t\tconsole.error('unexpected color value:', value);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t}\n};\n\nColor.prototype.spaces = {\n\trgb: ['red', 'green', 'blue'],\n\thsl: ['hue', 'saturation', 'lightness'],\n\thsv: ['hue', 'saturation', 'value'],\n\thwb: ['hue', 'whiteness', 'blackness'],\n\tcmyk: ['cyan', 'magenta', 'yellow', 'black']\n};\n\nColor.prototype.maxes = {\n\trgb: [255, 255, 255],\n\thsl: [360, 100, 100],\n\thsv: [360, 100, 100],\n\thwb: [360, 100, 100],\n\tcmyk: [100, 100, 100, 100]\n};\n\nColor.prototype.getValues = function (space) {\n\tvar values = this.values;\n\tvar vals = {};\n\n\tfor (var i = 0; i < space.length; i++) {\n\t\tvals[space.charAt(i)] = values[space][i];\n\t}\n\n\tif (values.alpha !== 1) {\n\t\tvals.a = values.alpha;\n\t}\n\n\t// {r: 255, g: 255, b: 255, a: 0.4}\n\treturn vals;\n};\n\nColor.prototype.setValues = function (space, vals) {\n\tvar values = this.values;\n\tvar spaces = this.spaces;\n\tvar maxes = this.maxes;\n\tvar alpha = 1;\n\tvar i;\n\n\tthis.valid = true;\n\n\tif (space === 'alpha') {\n\t\talpha = vals;\n\t} else if (vals.length) {\n\t\t// [10, 10, 10]\n\t\tvalues[space] = vals.slice(0, space.length);\n\t\talpha = vals[space.length];\n\t} else if (vals[space.charAt(0)] !== undefined) {\n\t\t// {r: 10, g: 10, b: 10}\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[space.charAt(i)];\n\t\t}\n\n\t\talpha = vals.a;\n\t} else if (vals[spaces[space][0]] !== undefined) {\n\t\t// {red: 10, green: 10, blue: 10}\n\t\tvar chans = spaces[space];\n\n\t\tfor (i = 0; i < space.length; i++) {\n\t\t\tvalues[space][i] = vals[chans[i]];\n\t\t}\n\n\t\talpha = vals.alpha;\n\t}\n\n\tvalues.alpha = Math.max(0, Math.min(1, (alpha === undefined ? values.alpha : alpha)));\n\n\tif (space === 'alpha') {\n\t\treturn false;\n\t}\n\n\tvar capped;\n\n\t// cap values of the space prior converting all values\n\tfor (i = 0; i < space.length; i++) {\n\t\tcapped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n\t\tvalues[space][i] = Math.round(capped);\n\t}\n\n\t// convert to all the other color spaces\n\tfor (var sname in spaces) {\n\t\tif (sname !== space) {\n\t\t\tvalues[sname] = convert[space][sname](values[space]);\n\t\t}\n\t}\n\n\treturn true;\n};\n\nColor.prototype.setSpace = function (space, args) {\n\tvar vals = args[0];\n\n\tif (vals === undefined) {\n\t\t// color.rgb()\n\t\treturn this.getValues(space);\n\t}\n\n\t// color.rgb(10, 10, 10)\n\tif (typeof vals === 'number') {\n\t\tvals = Array.prototype.slice.call(args);\n\t}\n\n\tthis.setValues(space, vals);\n\treturn this;\n};\n\nColor.prototype.setChannel = function (space, index, val) {\n\tvar svalues = this.values[space];\n\tif (val === undefined) {\n\t\t// color.red()\n\t\treturn svalues[index];\n\t} else if (val === svalues[index]) {\n\t\t// color.red(color.red())\n\t\treturn this;\n\t}\n\n\t// color.red(100)\n\tsvalues[index] = val;\n\tthis.setValues(space, svalues);\n\n\treturn this;\n};\n\nif (typeof window !== 'undefined') {\n\twindow.Color = Color;\n}\n\nmodule.exports = Color;\n","'use strict';\n\nmodule.exports = function(Chart) {\n\n\tChart.Line = function(context, config) {\n\t\tconfig.type = 'line';\n\n\t\treturn new Chart(context, config);\n\t};\n\n};\n","'use strict';\n\nvar Scale = require('../core/core.scale');\nvar scaleService = require('../core/core.scaleService');\n\nmodule.exports = function() {\n\n\t// Default config for a category scale\n\tvar defaultConfig = {\n\t\tposition: 'bottom'\n\t};\n\n\tvar DatasetScale = Scale.extend({\n\t\t/**\n\t\t* Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n\t\t* else fall back to data.labels\n\t\t* @private\n\t\t*/\n\t\tgetLabels: function() {\n\t\t\tvar data = this.chart.data;\n\t\t\treturn this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n\t\t},\n\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\tme.minIndex = 0;\n\t\t\tme.maxIndex = labels.length - 1;\n\t\t\tvar findIndex;\n\n\t\t\tif (me.options.ticks.min !== undefined) {\n\t\t\t\t// user specified min value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.min);\n\t\t\t\tme.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n\t\t\t}\n\n\t\t\tif (me.options.ticks.max !== undefined) {\n\t\t\t\t// user specified max value\n\t\t\t\tfindIndex = labels.indexOf(me.options.ticks.max);\n\t\t\t\tme.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n\t\t\t}\n\n\t\t\tme.min = labels[me.minIndex];\n\t\t\tme.max = labels[me.maxIndex];\n\t\t},\n\n\t\tbuildTicks: function() {\n\t\t\tvar me = this;\n\t\t\tvar labels = me.getLabels();\n\t\t\t// If we are viewing some subset of labels, slice the original array\n\t\t\tme.ticks = (me.minIndex === 0 && me.maxIndex === labels.length - 1) ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n\t\t},\n\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\tvar me = this;\n\t\t\tvar data = me.chart.data;\n\t\t\tvar isHorizontal = me.isHorizontal();\n\n\t\t\tif (data.yLabels && !isHorizontal) {\n\t\t\t\treturn me.getRightValue(data.datasets[datasetIndex].data[index]);\n\t\t\t}\n\t\t\treturn me.ticks[index - me.minIndex];\n\t\t},\n\n\t\t// Used to get data value locations.  Value can either be an index or a numerical value\n\t\tgetPixelForValue: function(value, index) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\t// 1 is added because we need the length but we have the indexes\n\t\t\tvar offsetAmt = Math.max((me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1)), 1);\n\n\t\t\t// If value is a data object, then index is the index in the data array,\n\t\t\t// not the index of the scale. We need to change that.\n\t\t\tvar valueCategory;\n\t\t\tif (value !== undefined && value !== null) {\n\t\t\t\tvalueCategory = me.isHorizontal() ? value.x : value.y;\n\t\t\t}\n\t\t\tif (valueCategory !== undefined || (value !== undefined && isNaN(index))) {\n\t\t\t\tvar labels = me.getLabels();\n\t\t\t\tvalue = valueCategory || value;\n\t\t\t\tvar idx = labels.indexOf(value);\n\t\t\t\tindex = idx !== -1 ? idx : index;\n\t\t\t}\n\n\t\t\tif (me.isHorizontal()) {\n\t\t\t\tvar valueWidth = me.width / offsetAmt;\n\t\t\t\tvar widthOffset = (valueWidth * (index - me.minIndex));\n\n\t\t\t\tif (offset) {\n\t\t\t\t\twidthOffset += (valueWidth / 2);\n\t\t\t\t}\n\n\t\t\t\treturn me.left + Math.round(widthOffset);\n\t\t\t}\n\t\t\tvar valueHeight = me.height / offsetAmt;\n\t\t\tvar heightOffset = (valueHeight * (index - me.minIndex));\n\n\t\t\tif (offset) {\n\t\t\t\theightOffset += (valueHeight / 2);\n\t\t\t}\n\n\t\t\treturn me.top + Math.round(heightOffset);\n\t\t},\n\t\tgetPixelForTick: function(index) {\n\t\t\treturn this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n\t\t},\n\t\tgetValueForPixel: function(pixel) {\n\t\t\tvar me = this;\n\t\t\tvar offset = me.options.offset;\n\t\t\tvar value;\n\t\t\tvar offsetAmt = Math.max((me._ticks.length - (offset ? 0 : 1)), 1);\n\t\t\tvar horz = me.isHorizontal();\n\t\t\tvar valueDimension = (horz ? me.width : me.height) / offsetAmt;\n\n\t\t\tpixel -= horz ? me.left : me.top;\n\n\t\t\tif (offset) {\n\t\t\t\tpixel -= (valueDimension / 2);\n\t\t\t}\n\n\t\t\tif (pixel <= 0) {\n\t\t\t\tvalue = 0;\n\t\t\t} else {\n\t\t\t\tvalue = Math.round(pixel / valueDimension);\n\t\t\t}\n\n\t\t\treturn value + me.minIndex;\n\t\t},\n\t\tgetBasePixel: function() {\n\t\t\treturn this.bottom;\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('category', DatasetScale, defaultConfig);\n};\n","'use strict';\n\nvar defaults = require('../core/core.defaults');\nvar helpers = require('../helpers/index');\nvar scaleService = require('../core/core.scaleService');\nvar Ticks = require('../core/core.ticks');\n\nmodule.exports = function(Chart) {\n\n\tvar globalDefaults = defaults.global;\n\n\tvar defaultConfig = {\n\t\tdisplay: true,\n\n\t\t// Boolean - Whether to animate scaling the chart from the centre\n\t\tanimate: true,\n\t\tposition: 'chartArea',\n\n\t\tangleLines: {\n\t\t\tdisplay: true,\n\t\t\tcolor: 'rgba(0, 0, 0, 0.1)',\n\t\t\tlineWidth: 1\n\t\t},\n\n\t\tgridLines: {\n\t\t\tcircular: false\n\t\t},\n\n\t\t// label settings\n\t\tticks: {\n\t\t\t// Boolean - Show a backdrop to the scale label\n\t\t\tshowLabelBackdrop: true,\n\n\t\t\t// String - The colour of the label backdrop\n\t\t\tbackdropColor: 'rgba(255,255,255,0.75)',\n\n\t\t\t// Number - The backdrop padding above & below the label in pixels\n\t\t\tbackdropPaddingY: 2,\n\n\t\t\t// Number - The backdrop padding to the side of the label in pixels\n\t\t\tbackdropPaddingX: 2,\n\n\t\t\tcallback: Ticks.formatters.linear\n\t\t},\n\n\t\tpointLabels: {\n\t\t\t// Boolean - if true, show point labels\n\t\t\tdisplay: true,\n\n\t\t\t// Number - Point label font size in pixels\n\t\t\tfontSize: 10,\n\n\t\t\t// Function - Used to convert point labels\n\t\t\tcallback: function(label) {\n\t\t\t\treturn label;\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getValueCount(scale) {\n\t\tvar opts = scale.options;\n\t\treturn opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n\t}\n\n\tfunction getPointLabelFontOptions(scale) {\n\t\tvar pointLabelOptions = scale.options.pointLabels;\n\t\tvar fontSize = helpers.valueOrDefault(pointLabelOptions.fontSize, globalDefaults.defaultFontSize);\n\t\tvar fontStyle = helpers.valueOrDefault(pointLabelOptions.fontStyle, globalDefaults.defaultFontStyle);\n\t\tvar fontFamily = helpers.valueOrDefault(pointLabelOptions.fontFamily, globalDefaults.defaultFontFamily);\n\t\tvar font = helpers.fontString(fontSize, fontStyle, fontFamily);\n\n\t\treturn {\n\t\t\tsize: fontSize,\n\t\t\tstyle: fontStyle,\n\t\t\tfamily: fontFamily,\n\t\t\tfont: font\n\t\t};\n\t}\n\n\tfunction measureLabelSize(ctx, fontSize, label) {\n\t\tif (helpers.isArray(label)) {\n\t\t\treturn {\n\t\t\t\tw: helpers.longestText(ctx, ctx.font, label),\n\t\t\t\th: (label.length * fontSize) + ((label.length - 1) * 1.5 * fontSize)\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tw: ctx.measureText(label).width,\n\t\t\th: fontSize\n\t\t};\n\t}\n\n\tfunction determineLimits(angle, pos, size, min, max) {\n\t\tif (angle === min || angle === max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - (size / 2),\n\t\t\t\tend: pos + (size / 2)\n\t\t\t};\n\t\t} else if (angle < min || angle > max) {\n\t\t\treturn {\n\t\t\t\tstart: pos - size - 5,\n\t\t\t\tend: pos\n\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\tstart: pos,\n\t\t\tend: pos + size + 5\n\t\t};\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with point labels\n\t */\n\tfunction fitWithPointLabels(scale) {\n\t\t/*\n\t\t * Right, this is really confusing and there is a lot of maths going on here\n\t\t * The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n\t\t *\n\t\t * Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n\t\t *\n\t\t * Solution:\n\t\t *\n\t\t * We assume the radius of the polygon is half the size of the canvas at first\n\t\t * at each index we check if the text overlaps.\n\t\t *\n\t\t * Where it does, we store that angle and that index.\n\t\t *\n\t\t * After finding the largest index and angle we calculate how much we need to remove\n\t\t * from the shape radius to move the point inwards by that x.\n\t\t *\n\t\t * We average the left and right distances to get the maximum shape radius that can fit in the box\n\t\t * along with labels.\n\t\t *\n\t\t * Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n\t\t * on each side, removing that from the size, halving it and adding the left x protrusion width.\n\t\t *\n\t\t * This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n\t\t * and position it in the most space efficient manner\n\t\t *\n\t\t * https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\t\t */\n\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\t// Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n\t\t// Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tvar furthestLimits = {\n\t\t\tr: scale.width,\n\t\t\tl: 0,\n\t\t\tt: scale.height,\n\t\t\tb: 0\n\t\t};\n\t\tvar furthestAngles = {};\n\t\tvar i, textSize, pointPosition;\n\n\t\tscale.ctx.font = plFont.font;\n\t\tscale._pointLabelSizes = [];\n\n\t\tvar valueCount = getValueCount(scale);\n\t\tfor (i = 0; i < valueCount; i++) {\n\t\t\tpointPosition = scale.getPointPosition(i, largestPossibleRadius);\n\t\t\ttextSize = measureLabelSize(scale.ctx, plFont.size, scale.pointLabels[i] || '');\n\t\t\tscale._pointLabelSizes[i] = textSize;\n\n\t\t\t// Add quarter circle to make degree 0 mean top of circle\n\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\tvar angle = helpers.toDegrees(angleRadians) % 360;\n\t\t\tvar hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n\t\t\tvar vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n\t\t\tif (hLimits.start < furthestLimits.l) {\n\t\t\t\tfurthestLimits.l = hLimits.start;\n\t\t\t\tfurthestAngles.l = angleRadians;\n\t\t\t}\n\n\t\t\tif (hLimits.end > furthestLimits.r) {\n\t\t\t\tfurthestLimits.r = hLimits.end;\n\t\t\t\tfurthestAngles.r = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.start < furthestLimits.t) {\n\t\t\t\tfurthestLimits.t = vLimits.start;\n\t\t\t\tfurthestAngles.t = angleRadians;\n\t\t\t}\n\n\t\t\tif (vLimits.end > furthestLimits.b) {\n\t\t\t\tfurthestLimits.b = vLimits.end;\n\t\t\t\tfurthestAngles.b = angleRadians;\n\t\t\t}\n\t\t}\n\n\t\tscale.setReductions(largestPossibleRadius, furthestLimits, furthestAngles);\n\t}\n\n\t/**\n\t * Helper function to fit a radial linear scale with no point labels\n\t */\n\tfunction fit(scale) {\n\t\tvar largestPossibleRadius = Math.min(scale.height / 2, scale.width / 2);\n\t\tscale.drawingArea = Math.round(largestPossibleRadius);\n\t\tscale.setCenterPoint(0, 0, 0, 0);\n\t}\n\n\tfunction getTextAlignForAngle(angle) {\n\t\tif (angle === 0 || angle === 180) {\n\t\t\treturn 'center';\n\t\t} else if (angle < 180) {\n\t\t\treturn 'left';\n\t\t}\n\n\t\treturn 'right';\n\t}\n\n\tfunction fillText(ctx, text, position, fontSize) {\n\t\tif (helpers.isArray(text)) {\n\t\t\tvar y = position.y;\n\t\t\tvar spacing = 1.5 * fontSize;\n\n\t\t\tfor (var i = 0; i < text.length; ++i) {\n\t\t\t\tctx.fillText(text[i], position.x, y);\n\t\t\t\ty += spacing;\n\t\t\t}\n\t\t} else {\n\t\t\tctx.fillText(text, position.x, position.y);\n\t\t}\n\t}\n\n\tfunction adjustPointPositionForLabelHeight(angle, textSize, position) {\n\t\tif (angle === 90 || angle === 270) {\n\t\t\tposition.y -= (textSize.h / 2);\n\t\t} else if (angle > 270 || angle < 90) {\n\t\t\tposition.y -= textSize.h;\n\t\t}\n\t}\n\n\tfunction drawPointLabels(scale) {\n\t\tvar ctx = scale.ctx;\n\t\tvar opts = scale.options;\n\t\tvar angleLineOpts = opts.angleLines;\n\t\tvar pointLabelOpts = opts.pointLabels;\n\n\t\tctx.lineWidth = angleLineOpts.lineWidth;\n\t\tctx.strokeStyle = angleLineOpts.color;\n\n\t\tvar outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max);\n\n\t\t// Point Label Font\n\t\tvar plFont = getPointLabelFontOptions(scale);\n\n\t\tctx.textBaseline = 'top';\n\n\t\tfor (var i = getValueCount(scale) - 1; i >= 0; i--) {\n\t\t\tif (angleLineOpts.display) {\n\t\t\t\tvar outerPosition = scale.getPointPosition(i, outerDistance);\n\t\t\t\tctx.beginPath();\n\t\t\t\tctx.moveTo(scale.xCenter, scale.yCenter);\n\t\t\t\tctx.lineTo(outerPosition.x, outerPosition.y);\n\t\t\t\tctx.stroke();\n\t\t\t\tctx.closePath();\n\t\t\t}\n\n\t\t\tif (pointLabelOpts.display) {\n\t\t\t\t// Extra 3px out for some label spacing\n\t\t\t\tvar pointLabelPosition = scale.getPointPosition(i, outerDistance + 5);\n\n\t\t\t\t// Keep this in loop since we may support array properties here\n\t\t\t\tvar pointLabelFontColor = helpers.valueAtIndexOrDefault(pointLabelOpts.fontColor, i, globalDefaults.defaultFontColor);\n\t\t\t\tctx.font = plFont.font;\n\t\t\t\tctx.fillStyle = pointLabelFontColor;\n\n\t\t\t\tvar angleRadians = scale.getIndexAngle(i);\n\t\t\t\tvar angle = helpers.toDegrees(angleRadians);\n\t\t\t\tctx.textAlign = getTextAlignForAngle(angle);\n\t\t\t\tadjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n\t\t\t\tfillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.size);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction drawRadiusLine(scale, gridLineOpts, radius, index) {\n\t\tvar ctx = scale.ctx;\n\t\tctx.strokeStyle = helpers.valueAtIndexOrDefault(gridLineOpts.color, index - 1);\n\t\tctx.lineWidth = helpers.valueAtIndexOrDefault(gridLineOpts.lineWidth, index - 1);\n\n\t\tif (scale.options.gridLines.circular) {\n\t\t\t// Draw circular arcs between the points\n\t\t\tctx.beginPath();\n\t\t\tctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t} else {\n\t\t\t// Draw straight lines connecting each index\n\t\t\tvar valueCount = getValueCount(scale);\n\n\t\t\tif (valueCount === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tvar pointPosition = scale.getPointPosition(0, radius);\n\t\t\tctx.moveTo(pointPosition.x, pointPosition.y);\n\n\t\t\tfor (var i = 1; i < valueCount; i++) {\n\t\t\t\tpointPosition = scale.getPointPosition(i, radius);\n\t\t\t\tctx.lineTo(pointPosition.x, pointPosition.y);\n\t\t\t}\n\n\t\t\tctx.closePath();\n\t\t\tctx.stroke();\n\t\t}\n\t}\n\n\tfunction numberOrZero(param) {\n\t\treturn helpers.isNumber(param) ? param : 0;\n\t}\n\n\tvar LinearRadialScale = Chart.LinearScaleBase.extend({\n\t\tsetDimensions: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\t// Set the unconstrained dimension before label rotation\n\t\t\tme.width = me.maxWidth;\n\t\t\tme.height = me.maxHeight;\n\t\t\tme.xCenter = Math.round(me.width / 2);\n\t\t\tme.yCenter = Math.round(me.height / 2);\n\n\t\t\tvar minSize = helpers.min([me.height, me.width]);\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\tme.drawingArea = opts.display ? (minSize / 2) - (tickFontSize / 2 + tickOpts.backdropPaddingY) : (minSize / 2);\n\t\t},\n\t\tdetermineDataLimits: function() {\n\t\t\tvar me = this;\n\t\t\tvar chart = me.chart;\n\t\t\tvar min = Number.POSITIVE_INFINITY;\n\t\t\tvar max = Number.NEGATIVE_INFINITY;\n\n\t\t\thelpers.each(chart.data.datasets, function(dataset, datasetIndex) {\n\t\t\t\tif (chart.isDatasetVisible(datasetIndex)) {\n\t\t\t\t\tvar meta = chart.getDatasetMeta(datasetIndex);\n\n\t\t\t\t\thelpers.each(dataset.data, function(rawValue, index) {\n\t\t\t\t\t\tvar value = +me.getRightValue(rawValue);\n\t\t\t\t\t\tif (isNaN(value) || meta.data[index].hidden) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmin = Math.min(value, min);\n\t\t\t\t\t\tmax = Math.max(value, max);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tme.min = (min === Number.POSITIVE_INFINITY ? 0 : min);\n\t\t\tme.max = (max === Number.NEGATIVE_INFINITY ? 0 : max);\n\n\t\t\t// Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\t\t\tme.handleTickRangeOptions();\n\t\t},\n\t\tgetTickLimit: function() {\n\t\t\tvar tickOpts = this.options.ticks;\n\t\t\tvar tickFontSize = helpers.valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\treturn Math.min(tickOpts.maxTicksLimit ? tickOpts.maxTicksLimit : 11, Math.ceil(this.drawingArea / (1.5 * tickFontSize)));\n\t\t},\n\t\tconvertTicksToLabels: function() {\n\t\t\tvar me = this;\n\n\t\t\tChart.LinearScaleBase.prototype.convertTicksToLabels.call(me);\n\n\t\t\t// Point labels\n\t\t\tme.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n\t\t},\n\t\tgetLabelForIndex: function(index, datasetIndex) {\n\t\t\treturn +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n\t\t},\n\t\tfit: function() {\n\t\t\tif (this.options.pointLabels.display) {\n\t\t\t\tfitWithPointLabels(this);\n\t\t\t} else {\n\t\t\t\tfit(this);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Set radius reductions and determine new radius and center point\n\t\t * @private\n\t\t */\n\t\tsetReductions: function(largestPossibleRadius, furthestLimits, furthestAngles) {\n\t\t\tvar me = this;\n\t\t\tvar radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n\t\t\tvar radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n\t\t\tvar radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n\t\t\tvar radiusReductionBottom = -Math.max(furthestLimits.b - me.height, 0) / Math.cos(furthestAngles.b);\n\n\t\t\tradiusReductionLeft = numberOrZero(radiusReductionLeft);\n\t\t\tradiusReductionRight = numberOrZero(radiusReductionRight);\n\t\t\tradiusReductionTop = numberOrZero(radiusReductionTop);\n\t\t\tradiusReductionBottom = numberOrZero(radiusReductionBottom);\n\n\t\t\tme.drawingArea = Math.min(\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2),\n\t\t\t\tMath.round(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n\t\t\tme.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n\t\t},\n\t\tsetCenterPoint: function(leftMovement, rightMovement, topMovement, bottomMovement) {\n\t\t\tvar me = this;\n\t\t\tvar maxRight = me.width - rightMovement - me.drawingArea;\n\t\t\tvar maxLeft = leftMovement + me.drawingArea;\n\t\t\tvar maxTop = topMovement + me.drawingArea;\n\t\t\tvar maxBottom = me.height - bottomMovement - me.drawingArea;\n\n\t\t\tme.xCenter = Math.round(((maxLeft + maxRight) / 2) + me.left);\n\t\t\tme.yCenter = Math.round(((maxTop + maxBottom) / 2) + me.top);\n\t\t},\n\n\t\tgetIndexAngle: function(index) {\n\t\t\tvar angleMultiplier = (Math.PI * 2) / getValueCount(this);\n\t\t\tvar startAngle = this.chart.options && this.chart.options.startAngle ?\n\t\t\t\tthis.chart.options.startAngle :\n\t\t\t\t0;\n\n\t\t\tvar startAngleRadians = startAngle * Math.PI * 2 / 360;\n\n\t\t\t// Start from the top instead of right, so remove a quarter of the circle\n\t\t\treturn index * angleMultiplier + startAngleRadians;\n\t\t},\n\t\tgetDistanceFromCenterForValue: function(value) {\n\t\t\tvar me = this;\n\n\t\t\tif (value === null) {\n\t\t\t\treturn 0; // null always in center\n\t\t\t}\n\n\t\t\t// Take into account half font size + the yPadding of the top value\n\t\t\tvar scalingFactor = me.drawingArea / (me.max - me.min);\n\t\t\tif (me.options.ticks.reverse) {\n\t\t\t\treturn (me.max - value) * scalingFactor;\n\t\t\t}\n\t\t\treturn (value - me.min) * scalingFactor;\n\t\t},\n\t\tgetPointPosition: function(index, distanceFromCenter) {\n\t\t\tvar me = this;\n\t\t\tvar thisAngle = me.getIndexAngle(index) - (Math.PI / 2);\n\t\t\treturn {\n\t\t\t\tx: Math.round(Math.cos(thisAngle) * distanceFromCenter) + me.xCenter,\n\t\t\t\ty: Math.round(Math.sin(thisAngle) * distanceFromCenter) + me.yCenter\n\t\t\t};\n\t\t},\n\t\tgetPointPositionForValue: function(index, value) {\n\t\t\treturn this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n\t\t},\n\n\t\tgetBasePosition: function() {\n\t\t\tvar me = this;\n\t\t\tvar min = me.min;\n\t\t\tvar max = me.max;\n\n\t\t\treturn me.getPointPositionForValue(0,\n\t\t\t\tme.beginAtZero ? 0 :\n\t\t\t\tmin < 0 && max < 0 ? max :\n\t\t\t\tmin > 0 && max > 0 ? min :\n\t\t\t\t0);\n\t\t},\n\n\t\tdraw: function() {\n\t\t\tvar me = this;\n\t\t\tvar opts = me.options;\n\t\t\tvar gridLineOpts = opts.gridLines;\n\t\t\tvar tickOpts = opts.ticks;\n\t\t\tvar valueOrDefault = helpers.valueOrDefault;\n\n\t\t\tif (opts.display) {\n\t\t\t\tvar ctx = me.ctx;\n\t\t\t\tvar startAngle = this.getIndexAngle(0);\n\n\t\t\t\t// Tick Font\n\t\t\t\tvar tickFontSize = valueOrDefault(tickOpts.fontSize, globalDefaults.defaultFontSize);\n\t\t\t\tvar tickFontStyle = valueOrDefault(tickOpts.fontStyle, globalDefaults.defaultFontStyle);\n\t\t\t\tvar tickFontFamily = valueOrDefault(tickOpts.fontFamily, globalDefaults.defaultFontFamily);\n\t\t\t\tvar tickLabelFont = helpers.fontString(tickFontSize, tickFontStyle, tickFontFamily);\n\n\t\t\t\thelpers.each(me.ticks, function(label, index) {\n\t\t\t\t\t// Don't draw a centre value (if it is minimum)\n\t\t\t\t\tif (index > 0 || tickOpts.reverse) {\n\t\t\t\t\t\tvar yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]);\n\n\t\t\t\t\t\t// Draw circular lines around the scale\n\t\t\t\t\t\tif (gridLineOpts.display && index !== 0) {\n\t\t\t\t\t\t\tdrawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tickOpts.display) {\n\t\t\t\t\t\t\tvar tickFontColor = valueOrDefault(tickOpts.fontColor, globalDefaults.defaultFontColor);\n\t\t\t\t\t\t\tctx.font = tickLabelFont;\n\n\t\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\t\tctx.translate(me.xCenter, me.yCenter);\n\t\t\t\t\t\t\tctx.rotate(startAngle);\n\n\t\t\t\t\t\t\tif (tickOpts.showLabelBackdrop) {\n\t\t\t\t\t\t\t\tvar labelWidth = ctx.measureText(label).width;\n\t\t\t\t\t\t\t\tctx.fillStyle = tickOpts.backdropColor;\n\t\t\t\t\t\t\t\tctx.fillRect(\n\t\t\t\t\t\t\t\t\t-labelWidth / 2 - tickOpts.backdropPaddingX,\n\t\t\t\t\t\t\t\t\t-yCenterOffset - tickFontSize / 2 - tickOpts.backdropPaddingY,\n\t\t\t\t\t\t\t\t\tlabelWidth + tickOpts.backdropPaddingX * 2,\n\t\t\t\t\t\t\t\t\ttickFontSize + tickOpts.backdropPaddingY * 2\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tctx.textAlign = 'center';\n\t\t\t\t\t\t\tctx.textBaseline = 'middle';\n\t\t\t\t\t\t\tctx.fillStyle = tickFontColor;\n\t\t\t\t\t\t\tctx.fillText(label, 0, -yCenterOffset);\n\t\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (opts.angleLines.display || opts.pointLabels.display) {\n\t\t\t\t\tdrawPointLabels(me);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tscaleService.registerScaleType('radialLinear', LinearRadialScale, defaultConfig);\n};\n"],"sourceRoot":""}